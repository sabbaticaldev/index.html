Project Path: /home/alanleal/Projects/bootstrapp/libs

Source Tree:

```
libs
├── frontend
│   ├── package-lock.json
│   ├── uno.global.js
│   ├── README.md
│   ├── reset.txt
│   ├── esbuild.config.js
│   ├── theme.js
│   ├── reactive-view.js
│   ├── uix
│   │   ├── datetime.package.js
│   │   ├── docs.package.js
│   │   ├── app.package.js
│   │   ├── content.package.js
│   │   ├── tests.package.js
│   │   ├── crud.package.js
│   │   ├── chat.package.js
│   │   ├── navigation.package.js
│   │   ├── layout.package.js
│   │   ├── ui.package.js
│   │   └── form.package.js
│   ├── pnpm-lock.yaml
│   ├── index.js
│   └── package.json
├── backend
│   ├── README.md
│   ├── constants.js
│   ├── appstate
│   │   ├── events.js
│   │   ├── utils.js
│   │   └── index.js
│   ├── esbuild.config.js
│   ├── reactive-record
│   │   ├── relationship.js
│   │   ├── crud.js
│   │   └── index.js
│   ├── indexeddb
│   │   ├── utils.js
│   │   ├── crud.js
│   │   └── index.js
│   ├── index.sw.js
│   ├── utils.js
│   ├── index.js
│   └── package.json
├── helpers
│   ├── i18n.js
│   ├── README.md
│   ├── i18n.view.js
│   ├── esbuild.config.js
│   ├── droparea.js
│   ├── url.js
│   ├── csv.js
│   ├── types.js
│   ├── rest.js
│   ├── pnpm-lock.yaml
│   ├── index.js
│   ├── file.js
│   ├── datetime.js
│   └── package.json
├── brazuka
│   ├── README.md
│   ├── esbuild.config.js
│   ├── src
│   │   ├── web-worker.js
│   │   ├── theme
│   │   ├── theme.js
│   │   ├── index.js
│   │   └── controller.js
│   ├── pnpm-lock.yaml
│   └── package.json
└── core
    ├── README.md
    ├── esbuild.config.js
    ├── src
    │   └── index.js
    ├── pnpm-lock.yaml
    └── package.json

```

`/home/alanleal/Projects/bootstrapp/libs/frontend/package-lock.json`:

```````json
{
  "name": "@brazuka/frontend",
  "version": "0.1.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "@brazuka/frontend",
      "version": "0.1.0",
      "devDependencies": {
        "esbuild": "^0.21.3"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.3.tgz",
      "integrity": "sha512-yTgnwQpFVYfvvo4SvRFB0SwrW8YjOxEoT7wfMT7Ol5v7v5LDNvSGo67aExmxOb87nQNeWPVvaGBNfQ7BXcrZ9w==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.3.tgz",
      "integrity": "sha512-bviJOLMgurLJtF1/mAoJLxDZDL6oU5/ztMHnJQRejbJrSc9FFu0QoUoFhvi6qSKJEw9y5oGyvr9fuDtzJ30rNQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.3.tgz",
      "integrity": "sha512-c+ty9necz3zB1Y+d/N+mC6KVVkGUUOcm4ZmT5i/Fk5arOaY3i6CA3P5wo/7+XzV8cb4GrI/Zjp8NuOQ9Lfsosw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.3.tgz",
      "integrity": "sha512-JReHfYCRK3FVX4Ra+y5EBH1b9e16TV2OxrPAvzMsGeES0X2Ndm9ImQRI4Ket757vhc5XBOuGperw63upesclRw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.3.tgz",
      "integrity": "sha512-U3fuQ0xNiAkXOmQ6w5dKpEvXQRSpHOnbw7gEfHCRXPeTKW9sBzVck6C5Yneb8LfJm0l6le4NQfkNPnWMSlTFUQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.3.tgz",
      "integrity": "sha512-3m1CEB7F07s19wmaMNI2KANLcnaqryJxO1fXHUV5j1rWn+wMxdUYoPyO2TnAbfRZdi7ADRwJClmOwgT13qlP3Q==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.3.tgz",
      "integrity": "sha512-fsNAAl5pU6wmKHq91cHWQT0Fz0vtyE1JauMzKotrwqIKAswwP5cpHUCxZNSTuA/JlqtScq20/5KZ+TxQdovU/g==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.3.tgz",
      "integrity": "sha512-tci+UJ4zP5EGF4rp8XlZIdq1q1a/1h9XuronfxTMCNBslpCtmk97Q/5qqy1Mu4zIc0yswN/yP/BLX+NTUC1bXA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.3.tgz",
      "integrity": "sha512-f6kz2QpSuyHHg01cDawj0vkyMwuIvN62UAguQfnNVzbge2uWLhA7TCXOn83DT0ZvyJmBI943MItgTovUob36SQ==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.3.tgz",
      "integrity": "sha512-vvG6R5g5ieB4eCJBQevyDMb31LMHthLpXTc2IGkFnPWS/GzIFDnaYFp558O+XybTmYrVjxnryru7QRleJvmZ6Q==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.3.tgz",
      "integrity": "sha512-HjCWhH7K96Na+66TacDLJmOI9R8iDWDDiqe17C7znGvvE4sW1ECt9ly0AJ3dJH62jHyVqW9xpxZEU1jKdt+29A==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.3.tgz",
      "integrity": "sha512-BGpimEccmHBZRcAhdlRIxMp7x9PyJxUtj7apL2IuoG9VxvU/l/v1z015nFs7Si7tXUwEsvjc1rOJdZCn4QTU+Q==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.3.tgz",
      "integrity": "sha512-5rMOWkp7FQGtAH3QJddP4w3s47iT20hwftqdm7b+loe95o8JU8ro3qZbhgMRy0VuFU0DizymF1pBKkn3YHWtsw==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.3.tgz",
      "integrity": "sha512-h0zj1ldel89V5sjPLo5H1SyMzp4VrgN1tPkN29TmjvO1/r0MuMRwJxL8QY05SmfsZRs6TF0c/IDH3u7XYYmbAg==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.3.tgz",
      "integrity": "sha512-dkAKcTsTJ+CRX6bnO17qDJbLoW37npd5gSNtSzjYQr0svghLJYGYB0NF1SNcU1vDcjXLYS5pO4qOW4YbFama4A==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.3.tgz",
      "integrity": "sha512-vnD1YUkovEdnZWEuMmy2X2JmzsHQqPpZElXx6dxENcIwTu+Cu5ERax6+Ke1QsE814Zf3c6rxCfwQdCTQ7tPuXA==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.3.tgz",
      "integrity": "sha512-IOXOIm9WaK7plL2gMhsWJd+l2bfrhfilv0uPTptoRoSb2p09RghhQQp9YY6ZJhk/kqmeRt6siRdMSLLwzuT0KQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.3.tgz",
      "integrity": "sha512-uTgCwsvQ5+vCQnqM//EfDSuomo2LhdWhFPS8VL8xKf+PKTCrcT/2kPPoWMTs22aB63MLdGMJiE3f1PHvCDmUOw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.3.tgz",
      "integrity": "sha512-vNAkR17Ub2MgEud2Wag/OE4HTSI6zlb291UYzHez/psiKarp0J8PKGDnAhMBcHFoOHMXHfExzmjMojJNbAStrQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.3.tgz",
      "integrity": "sha512-W8H9jlGiSBomkgmouaRoTXo49j4w4Kfbl6I1bIdO/vT0+0u4f20ko3ELzV3hPI6XV6JNBVX+8BC+ajHkvffIJA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.3.tgz",
      "integrity": "sha512-EjEomwyLSCg8Ag3LDILIqYCZAq/y3diJ04PnqGRgq8/4O3VNlXyMd54j/saShaN4h5o5mivOjAzmU6C3X4v0xw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.3.tgz",
      "integrity": "sha512-WGiE/GgbsEwR33++5rzjiYsKyHywE8QSZPF7Rfx9EBfK3Qn3xyR6IjyCr5Uk38Kg8fG4/2phN7sXp4NPWd3fcw==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.3.tgz",
      "integrity": "sha512-xRxC0jaJWDLYvcUvjQmHCJSfMrgmUuvsoXgDeU/wTorQ1ngDdUBuFtgY3W1Pc5sprGAvZBtWdJX7RPg/iZZUqA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/esbuild": {
      "version": "0.21.3",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.3.tgz",
      "integrity": "sha512-Kgq0/ZsAPzKrbOjCQcjoSmPoWhlcVnGAUo7jvaLHoxW1Drto0KGkR1xBNg2Cp43b9ImvxmPEJZ9xkfcnqPsfBw==",
      "dev": true,
      "hasInstallScript": true,
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=12"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.21.3",
        "@esbuild/android-arm": "0.21.3",
        "@esbuild/android-arm64": "0.21.3",
        "@esbuild/android-x64": "0.21.3",
        "@esbuild/darwin-arm64": "0.21.3",
        "@esbuild/darwin-x64": "0.21.3",
        "@esbuild/freebsd-arm64": "0.21.3",
        "@esbuild/freebsd-x64": "0.21.3",
        "@esbuild/linux-arm": "0.21.3",
        "@esbuild/linux-arm64": "0.21.3",
        "@esbuild/linux-ia32": "0.21.3",
        "@esbuild/linux-loong64": "0.21.3",
        "@esbuild/linux-mips64el": "0.21.3",
        "@esbuild/linux-ppc64": "0.21.3",
        "@esbuild/linux-riscv64": "0.21.3",
        "@esbuild/linux-s390x": "0.21.3",
        "@esbuild/linux-x64": "0.21.3",
        "@esbuild/netbsd-x64": "0.21.3",
        "@esbuild/openbsd-x64": "0.21.3",
        "@esbuild/sunos-x64": "0.21.3",
        "@esbuild/win32-arm64": "0.21.3",
        "@esbuild/win32-ia32": "0.21.3",
        "@esbuild/win32-x64": "0.21.3"
      }
    }
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uno.global.js`:

```````js
"use strict";(()=>{var Ra=Object.defineProperty;var Ta=(e,t)=>{for(var r in t)Ra(e,r,{get:t[r],enumerable:!0});};function te(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}function J(e){let t=e.length,r=-1,n,o="",i=e.charCodeAt(0);for(;++r<t;){if(n=e.charCodeAt(r),n===0){o+="\uFFFD";continue;}if(n===37){o+="\\%";continue;}if(n===44){o+="\\,";continue;}if(n>=1&&n<=31||n===127||r===0&&n>=48&&n<=57||r===1&&n>=48&&n<=57&&i===45){o+=`\\${n.toString(16)} `;continue;}if(r===0&&t===1&&n===45){o+=`\\${e.charAt(r)}`;continue;}if(n>=128||n===45||n===95||n>=48&&n<=57||n>=65&&n<=90||n>=97&&n<=122){o+=e.charAt(r);continue;}o+=`\\${e.charAt(r)}`;}return o;}var He=J;function A(e=[]){return Array.isArray(e)?e:[e];}function me(e){return Array.from(new Set(e));}function ln(e,t){return e.reduce((r,n)=>(r.findIndex(i=>t(n,i))===-1&&r.push(n),r),[]);}function j(e){return typeof e=="string";}function de(e){return j(e)?e:(Array.isArray(e)?e:Object.entries(e)).filter(t=>t[1]!=null);}function fn(e){return Array.isArray(e)?e.find(t=>!Array.isArray(t)||Array.isArray(t[0]))?e.map(t=>de(t)):[e]:[de(e)];}function Ea(e){return e.filter(([t,r],n)=>{if(t.startsWith("$$"))return!1;for(let o=n-1;o>=0;o--)if(e[o][0]===t&&e[o][1]===r)return!1;return!0;});}function he(e){return e==null?"":Ea(e).map(([t,r])=>r!=null?`${t}:${r};`:void 0).filter(Boolean).join("");}function Ke(e){return e&&typeof e=="object"&&!Array.isArray(e);}function Tr(e,t,r=!1){let n=e,o=t;if(Array.isArray(o))return r&&Array.isArray(o)?[...n,...o]:[...o];let i={...n};return Ke(n)&&Ke(o)&&Object.keys(o).forEach(a=>{Ke(n[a])&&Ke(o[a])||Array.isArray(n[a])&&Array.isArray(o[a])?i[a]=Tr(n[a],o[a],r):Object.assign(i,{[a]:o[a]});}),i;}function Re(e){let t,r,n;if(Array.isArray(e)){for(r=Array(t=e.length);t--;)r[t]=(n=e[t])&&typeof n=="object"?Re(n):n;return r;}if(Object.prototype.toString.call(e)==="[object Object]"){r={};for(t in e)t==="__proto__"?Object.defineProperty(r,t,{value:Re(e[t]),configurable:!0,enumerable:!0,writable:!0}):r[t]=(n=e[t])&&typeof n=="object"?Re(n):n;return r;}return e;}function un(e){return j(e[0]);}function pn(e){return j(e[0]);}var za=/[\w\u00A0-\uFFFF-_:%-?]/,Er="$$shortcut-no-merge";function mn(e=""){return za.test(e);}function dn(e){return typeof e=="function"?{match:e}:e;}function zr(e){return e.length===3;}function hn(e){return e!=null;}function gn(){}var qe=class{_map=new Map;get(t,r){let n=this._map.get(t);if(n)return n.get(r);}getFallback(t,r,n){let o=this._map.get(t);return o||(o=new Map,this._map.set(t,o)),o.has(r)||o.set(r,n),o.get(r);}set(t,r,n){let o=this._map.get(t);return o||(o=new Map,this._map.set(t,o)),o.set(r,n),this;}has(t,r){return this._map.get(t)?.has(r);}delete(t,r){return this._map.get(t)?.delete(r)||!1;}deleteTop(t){return this._map.delete(t);}map(t){return Array.from(this._map.entries()).flatMap(([r,n])=>Array.from(n.entries()).map(([o,i])=>t(i,r,o)));}};var Te=class extends Set{_map;constructor(t){super(t),this._map??=new Map;}add(t){return this._map??=new Map,this._map.set(t,(this._map.get(t)??0)+1),super.add(t);}delete(t){return this._map.delete(t),super.delete(t);}clear(){this._map.clear(),super.clear();}getCount(t){return this._map.get(t)??0;}setCount(t,r){return this._map.set(t,r),super.add(t);}};function Ye(e){return e instanceof Te;}var Xe={};function ja(e=["-",":"]){let t=e.join("|");return Xe[t]||(Xe[t]=new RegExp(`((?:[!@<~\\w+:_/-]|\\[&?>?:?\\S*\\])+?)(${t})\\(((?:[~!<>\\w\\s:/\\\\,%#.$?-]|\\[.*?\\])+?)\\)(?!\\s*?=>)`,"gm")),Xe[t].lastIndex=0,Xe[t];}function Oa(e,t=["-",":"],r=5){let n=ja(t),o,i=e.toString(),a=new Set,s=new Map;do o=!1,i=i.replace(n,(f,u,p,h,g)=>{if(!t.includes(p))return f;o=!0,a.add(u+p);let k=g+u.length+p.length+1,R={length:f.length,items:[]};s.set(g,R);for(let x of[...h.matchAll(/\S+/g)]){let $=k+x.index,S=s.get($)?.items;S?s.delete($):S=[{offset:$,length:x[0].length,className:x[0]}];for(let z of S)z.className=z.className==="~"?u:z.className.replace(/^(!?)(.*)/,`$1${u}${p}$2`),R.items.push(z);}return"$".repeat(f.length);}),r-=1;while(o&&r);let l;if(typeof e=="string"){l="";let f=0;for(let[u,p]of s)l+=e.slice(f,u),l+=p.items.map(h=>h.className).join(" "),f=u+p.length;l+=e.slice(f);}else{l=e;for(let[f,u]of s)l.overwrite(f,f+u.length,u.items.map(p=>p.className).join(" "));}return{prefixes:Array.from(a),hasChanged:o,groupsByOffset:s,get expanded(){return l.toString();}};}function bn(e,t=["-",":"],r=5){let n=Oa(e,t,r);return typeof e=="string"?n.expanded:e;}var xn=new Set;function Y(e){xn.has(e)||(console.warn("[unocss]",e),xn.add(e));}var Ze=/[\\:]?[\s'"`;{}]+/g;function _a(e){return e.split(Ze);}var Je={name:"@unocss/core/extractor-split",order:0,extract({code:e}){return _a(e);}};function yn(){return{events:{},emit(e,...t){(this.events[e]||[]).forEach(r=>r(...t));},on(e,t){return(this.events[e]=this.events[e]||[]).push(t),()=>this.events[e]=(this.events[e]||[]).filter(r=>r!==t);}};}var Qe="default",et="preflights",Aa="shortcuts",Va="imports",vn={[Va]:-200,[et]:-100,[Aa]:-10,[Qe]:0};function kn(e){return A(e).flatMap(t=>Array.isArray(t)?[t]:Object.entries(t));}var wn="_uno_resolved";function Pa(e){let t=typeof e=="function"?e():e;if(wn in t)return t;t={...t},Object.defineProperty(t,wn,{value:!0,enumerable:!1});let r=t.shortcuts?kn(t.shortcuts):void 0;if(t.shortcuts=r,t.prefix||t.layer){let n=o=>{o[2]||(o[2]={});let i=o[2];i.prefix==null&&t.prefix&&(i.prefix=A(t.prefix)),i.layer==null&&t.layer&&(i.layer=t.layer);};r?.forEach(n),t.rules?.forEach(n);}return t;}function $n(e){let t=Pa(e);if(!t.presets)return[t];let r=(t.presets||[]).flatMap(A).flatMap($n);return[t,...r];}function jr(e={},t={}){let r=Object.assign({},t,e),n=ln((r.presets||[]).flatMap(A).flatMap($n),(m,y)=>m.name===y.name),o=[...n.filter(m=>m.enforce==="pre"),...n.filter(m=>!m.enforce),...n.filter(m=>m.enforce==="post")],i=[...o,r],a=[...i].reverse(),s=Object.assign({},vn,...i.map(m=>m.layers));function l(m){return me(i.flatMap(y=>A(y[m]||[])));}let f=l("extractors"),u=a.find(m=>m.extractorDefault!==void 0)?.extractorDefault;u===void 0&&(u=Je),u&&!f.includes(u)&&f.unshift(u),f.sort((m,y)=>(m.order||0)-(y.order||0));let p=l("rules"),h={},g=p.length,k=p.map((m,y)=>{if(un(m)){A(m[2]?.prefix||"").forEach(N=>{h[N+m[0]]=[y,m[1],m[2],m];});return;}return[y,...m];}).filter(Boolean).reverse(),R=Ma(i.map(m=>m.theme)),x=l("extendTheme");for(let m of x)R=m(R)||R;let $={templates:me(i.flatMap(m=>A(m.autocomplete?.templates))),extractors:i.flatMap(m=>A(m.autocomplete?.extractors)).sort((m,y)=>(m.order||0)-(y.order||0)),shorthands:Ua(i.map(m=>m.autocomplete?.shorthands||{}))},S=l("separators");S.length||(S=[":","-"]);let z={mergeSelectors:!0,warn:!0,blocklist:[],sortLayers:m=>m,...r,presets:o,envMode:r.envMode||"build",shortcutsLayer:r.shortcutsLayer||"shortcuts",layers:s,theme:R,rulesSize:g,rulesDynamic:k,rulesStaticMap:h,preprocess:l("preprocess"),postprocess:l("postprocess"),preflights:l("preflights"),autocomplete:$,variants:l("variants").map(dn).sort((m,y)=>(m.order||0)-(y.order||0)),shortcuts:kn(l("shortcuts")).reverse(),extractors:f,safelist:l("safelist"),separators:S,details:r.details??r.envMode==="dev"};for(let m of i)m?.configResolved?.(z);return z;}function Ma(e){return e.map(t=>t?Re(t):{}).reduce((t,r)=>Tr(t,r),{});}function Ua(e){return e.reduce((t,r)=>{let n={};for(let o in r){let i=r[o];Array.isArray(i)?n[o]=`(${i.join("|")})`:n[o]=i;}return{...t,...n};},{});}var Sn="0.57.1";var Or=class{constructor(t={},r={}){this.userConfig=t;this.defaults=r;this.config=jr(t,r),this.events.emit("config",this.config);}version=Sn;_cache=new Map;config;blocked=new Set;parentOrders=new Map;events=yn();setConfig(t,r){t&&(r&&(this.defaults=r),this.userConfig=t,this.blocked.clear(),this.parentOrders.clear(),this._cache.clear(),this.config=jr(t,this.defaults),this.events.emit("config",this.config));}async applyExtractors(t,r,n=new Set){let o={original:t,code:t,id:r,extracted:n,envMode:this.config.envMode};for(let i of this.config.extractors){let a=await i.extract?.(o);if(a)if(Ye(a)&&Ye(n))for(let s of a)n.setCount(s,n.getCount(s)+a.getCount(s));else for(let s of a)n.add(s);}return n;}makeContext(t,r){let n={rawSelector:t,currentSelector:r[1],theme:this.config.theme,generator:this,variantHandlers:r[2],constructCSS:(...o)=>this.constructCustomCSS(n,...o),variantMatch:r};return n;}async parseToken(t,r){if(this.blocked.has(t))return;let n=`${t}${r?` ${r}`:""}`;if(this._cache.has(n))return this._cache.get(n);let o=t;for(let f of this.config.preprocess)o=f(t);if(this.isBlocked(o)){this.blocked.add(t),this._cache.set(n,null);return;}let i=await this.matchVariants(t,o);if(!i||this.isBlocked(i[1])){this.blocked.add(t),this._cache.set(n,null);return;}let a=this.makeContext(t,[r||i[0],i[1],i[2],i[3]]);this.config.details&&(a.variants=[...i[3]]);let s=await this.expandShortcut(a.currentSelector,a),l=s?await this.stringifyShortcuts(a.variantMatch,a,s[0],s[1]):(await this.parseUtil(a.variantMatch,a))?.map(f=>this.stringifyUtil(f,a)).filter(hn);if(l?.length)return this._cache.set(n,l),l;this._cache.set(n,null);}async generate(t,r={}){let{id:n,scope:o,preflights:i=!0,safelist:a=!0,minify:s=!1,extendedInfo:l=!1}=r,f=j(t)?await this.applyExtractors(t,n,l?new Te:new Set):Array.isArray(t)?new Set(t):t;a&&this.config.safelist.forEach(m=>{f.has(m)||f.add(m);});let u=s?"":`
`,p=new Set([Qe]),h=l?new Map:new Set,g=new Map,k={},R=Array.from(f).map(async m=>{if(h.has(m))return;let y=await this.parseToken(m);if(y!=null){h instanceof Map?h.set(m,{data:y,count:Ye(f)?f.getCount(m):-1}):h.add(m);for(let _ of y){let N=_[3]||"",W=_[4]?.layer;g.has(N)||g.set(N,[]),g.get(N).push(_),W&&p.add(W);}}});await Promise.all(R),await(async()=>{if(!i)return;let m={generator:this,theme:this.config.theme},y=new Set([]);this.config.preflights.forEach(({layer:_=et})=>{p.add(_),y.add(_);}),k=Object.fromEntries(await Promise.all(Array.from(y).map(async _=>{let W=(await Promise.all(this.config.preflights.filter(ie=>(ie.layer||et)===_).map(async ie=>await ie.getCSS(m)))).filter(Boolean).join(u);return[_,W];})));})();let x=this.config.sortLayers(Array.from(p).sort((m,y)=>(this.config.layers[m]??0)-(this.config.layers[y]??0)||m.localeCompare(y))),$={},S=m=>{if($[m])return $[m];let y=Array.from(g).sort((N,W)=>(this.parentOrders.get(N[0])??0)-(this.parentOrders.get(W[0])??0)||N[0]?.localeCompare(W[0]||"")||0).map(([N,W])=>{let ie=W.length,pe=W.filter(d=>(d[4]?.layer||Qe)===m).sort((d,v)=>d[0]-v[0]||(d[4]?.sort||0)-(v[4]?.sort||0)||d[5]?.currentSelector?.localeCompare(v[5]?.currentSelector??"")||d[1]?.localeCompare(v[1]||"")||d[2]?.localeCompare(v[2]||"")||0).map(([,d,v,,C,,D])=>[[[(d&&Wa(d,o))??"",C?.sort??0]],v,!!(D??C?.noMerge)]);if(!pe.length)return;let Ce=pe.reverse().map(([d,v,C],D)=>{if(!C&&this.config.mergeSelectors)for(let B=D+1;B<ie;B++){let q=pe[B];if(q&&!q[2]&&(d&&q[0]||d==null&&q[0]==null)&&q[1]===v)return d&&q[0]&&q[0].push(...d),null;}let G=d?me(d.sort((B,q)=>B[1]-q[1]||B[0]?.localeCompare(q[0]||"")||0).map(B=>B[0]).filter(Boolean)):[];return G.length?`${G.join(`,${u}`)}{${v}}`:v;}).filter(Boolean).reverse().join(u);if(!N)return Ce;let Ge=N.split(" $$ ");return`${Ge.join("{")}{${u}${Ce}${u}${"}".repeat(Ge.length)}`;}).filter(Boolean).join(u);i&&(y=[k[m],y].filter(Boolean).join(u));let _=s?"":`/* layer: ${m} */${u}`;return $[m]=y?_+y:"";},z=(m=x,y)=>m.filter(_=>!y?.includes(_)).map(_=>S(_)||"").filter(Boolean).join(u);return{get css(){return z();},layers:x,matched:h,getLayers:z,getLayer:S};}async matchVariants(t,r){let n=new Set,o=[],i=r||t,a=!0,s={rawSelector:t,theme:this.config.theme,generator:this};for(;a;){a=!1;for(let l of this.config.variants){if(!l.multiPass&&n.has(l))continue;let f=await l.match(i,s);if(f){if(j(f)){if(f===i)continue;f={matcher:f};}i=f.matcher,o.unshift(f),n.add(l),a=!0;break;}}if(!a)break;if(o.length>500)throw new Error(`Too many variants applied to "${t}"`);}return[t,i,o,n];}applyVariants(t,r=t[4],n=t[1]){let i=r.slice().sort((f,u)=>(f.order||0)-(u.order||0)).reduceRight((f,u)=>p=>{let h=u.body?.(p.entries)||p.entries,g=Array.isArray(u.parent)?u.parent:[u.parent,void 0];return(u.handle??Ba)({...p,entries:h,selector:u.selector?.(p.selector,h)||p.selector,parent:g[0]||p.parent,parentOrder:g[1]||p.parentOrder,layer:u.layer||p.layer,sort:u.sort||p.sort},f);},f=>f)({prefix:"",selector:Da(n),pseudo:"",entries:t[2]}),{parent:a,parentOrder:s}=i;a!=null&&s!=null&&this.parentOrders.set(a,s);let l={selector:[i.prefix,i.selector,i.pseudo].join(""),entries:i.entries,parent:a,layer:i.layer,sort:i.sort,noMerge:i.noMerge};for(let f of this.config.postprocess)f(l);return l;}constructCustomCSS(t,r,n){let o=de(r);if(j(o))return o;let{selector:i,entries:a,parent:s}=this.applyVariants([0,n||t.rawSelector,o,void 0,t.variantHandlers]),l=`${i}{${he(a)}}`;return s?`${s}{${l}}`:l;}async parseUtil(t,r,n=!1,o){let[i,a,s]=j(t)?await this.matchVariants(t):t;this.config.details&&(r.rules=r.rules??[]);let l=this.config.rulesStaticMap[a];if(l&&l[1]&&(n||!l[2]?.internal)){this.config.details&&r.rules.push(l[3]);let u=l[0],p=de(l[1]),h=l[2];return j(p)?[[u,p,h]]:[[u,i,p,h,s]];}r.variantHandlers=s;let{rulesDynamic:f}=this.config;for(let[u,p,h,g]of f){if(g?.internal&&!n)continue;let k=a;if(g?.prefix){let S=A(g.prefix);if(o){let z=A(o);if(!S.some(m=>z.includes(m)))continue;}else{let z=S.find(m=>a.startsWith(m));if(z==null)continue;k=a.slice(z.length);}}let R=k.match(p);if(!R)continue;let x=await h(R,r);if(!x)continue;this.config.details&&r.rules.push([p,h,g]);let $=fn(x).filter(S=>S.length);if($.length)return $.map(S=>j(S)?[u,S,g]:[u,i,S,g,s]);}}stringifyUtil(t,r){if(!t)return;if(zr(t))return[t[0],void 0,t[1],void 0,t[2],this.config.details?r:void 0,void 0];let{selector:n,entries:o,parent:i,layer:a,sort:s,noMerge:l}=this.applyVariants(t),f=he(o);if(!f)return;let{layer:u,sort:p,...h}=t[3]??{},g={...h,layer:a??u,sort:s??p};return[t[0],n,f,i,g,this.config.details?r:void 0,l];}async expandShortcut(t,r,n=5){if(n===0)return;let o=this.config.details?s=>{r.shortcuts=r.shortcuts??[],r.shortcuts.push(s);}:gn,i,a;for(let s of this.config.shortcuts){let l=t;if(s[2]?.prefix){let u=A(s[2].prefix).find(p=>t.startsWith(p));if(u==null)continue;l=t.slice(u.length);}if(pn(s)){if(s[0]===l){i=i||s[2],a=s[1],o(s);break;}}else{let f=l.match(s[0]);if(f&&(a=s[1](f,r)),a){i=i||s[2],o(s);break;}}}if(j(a)&&(a=bn(a.trim()).split(/\s+/g)),!a){let[s,l]=j(t)?await this.matchVariants(t):t;if(s!==l){let f=await this.expandShortcut(l,r,n-1);f&&(a=f[0].map(u=>j(u)?s.replace(l,u):u));}}if(a)return[(await Promise.all(a.map(async s=>(j(s)?(await this.expandShortcut(s,r,n-1))?.[0]:void 0)||[s]))).flat(1).filter(Boolean),i];}async stringifyShortcuts(t,r,n,o={layer:this.config.shortcutsLayer}){let i=new qe,a=(await Promise.all(me(n).map(async u=>{let p=j(u)?await this.parseUtil(u,r,!0,o.prefix):[[Number.POSITIVE_INFINITY,"{inline}",de(u),void 0,[]]];return!p&&this.config.warn&&Y(`unmatched utility "${u}" in shortcut "${t[1]}"`),p||[];}))).flat(1).filter(Boolean).sort((u,p)=>u[0]-p[0]),[s,,l]=t,f=[];for(let u of a){if(zr(u)){f.push([u[0],void 0,u[1],void 0,u[2],r,void 0]);continue;}let{selector:p,entries:h,parent:g,sort:k,noMerge:R}=this.applyVariants(u,[...u[4],...l],s);i.getFallback(p,g,[[],u[0]])[0].push([h,!!(R??u[3]?.noMerge),k??0]);}return f.concat(i.map(([u,p],h,g)=>{let k=(x,$,S)=>{let z=Math.max(...S.map(y=>y[1])),m=S.map(y=>y[0]);return(x?[m.flat(1)]:m).map(y=>{let _=he(y);if(_)return[p,h,_,g,{...o,noMerge:$,sort:z},r,void 0];});};return[[u.filter(([,x])=>x).map(([x,,$])=>[x,$]),!0],[u.filter(([,x])=>!x).map(([x,,$])=>[x,$]),!1]].map(([x,$])=>[...k(!1,$,x.filter(([S])=>S.some(z=>z[0]===Er))),...k(!0,$,x.filter(([S])=>S.every(z=>z[0]!==Er)))]);}).flat(2).filter(Boolean));}isBlocked(t){return!t||this.config.blocklist.some(r=>typeof r=="function"?r(t):j(r)?r===t:r.test(t));}};function Rn(e,t){return new Or(e,t);}var Fa=/\s\$\$\s+/g;function Na(e){return e.match(/\s\$\$\s/);}function Wa(e,t){return Na(e)?e.replace(Fa,t?` ${t} `:" "):t?`${t} ${e}`:e;}var Cn=/^\[(.+?)(~?=)"(.*)"\]$/;function Da(e){return Cn.test(e)?e.replace(Cn,(t,r,n,o)=>`[${He(r)}${n}"${He(o)}"]`):`.${He(e)}`;}function Ba(e,t){return t(e);}var Ia=/\/\/#\s*sourceMappingURL=.*\n?/g;function Tn(e){return e.includes("sourceMappingURL=")?e.replace(Ia,""):e;}var Ga=/(?:[\w&:[\]-]|\[\S+=\S+\])+\[\\?['"]?\S+?['"]\]\]?[\w:-]*/g,Ha=/\[(\\\W|[\w-])+:[^\s:]*?("\S+?"|'\S+?'|`\S+?`|[^\s:]+?)[^\s:]*?\)?\]/g,Ka=/^\[(\\\W|[\w-])+:['"]?\S+?['"]?\]$/;function qa(e){let t=[];for(let r of e.matchAll(Ha))r.index!==0&&!e[r.index-1]?.match(/^[\s'"`]/)||t.push(r[0]);for(let r of e.matchAll(Ga))t.push(r[0]);return e.split(Ze).forEach(r=>{mn(r)&&!Ka.test(r)&&t.push(r);}),t;}var En={name:"@unocss/extractor-arbitrary-variants",order:0,extract({code:e}){return qa(Tn(e));}};var zn=[{layer:"preflights",getCSS(e){if(e.theme.preflightBase){let t=he(Object.entries(e.theme.preflightBase));return A(e.theme.preflightRoot??["*,::before,::after","::backdrop"]).map(n=>`${n}{${t}}`).join("");}}}];var U={l:["-left"],r:["-right"],t:["-top"],b:["-bottom"],s:["-inline-start"],e:["-inline-end"],x:["-left","-right"],y:["-top","-bottom"],"":[""],bs:["-block-start"],be:["-block-end"],is:["-inline-start"],ie:["-inline-end"],block:["-block-start","-block-end"],inline:["-inline-start","-inline-end"]},_r={...U,s:["-inset-inline-start"],start:["-inset-inline-start"],e:["-inset-inline-end"],end:["-inset-inline-end"],bs:["-inset-block-start"],be:["-inset-block-end"],is:["-inset-inline-start"],ie:["-inset-inline-end"],block:["-inset-block-start","-inset-block-end"],inline:["-inset-inline-start","-inset-inline-end"]},Ar={l:["-top-left","-bottom-left"],r:["-top-right","-bottom-right"],t:["-top-left","-top-right"],b:["-bottom-left","-bottom-right"],tl:["-top-left"],lt:["-top-left"],tr:["-top-right"],rt:["-top-right"],bl:["-bottom-left"],lb:["-bottom-left"],br:["-bottom-right"],rb:["-bottom-right"],"":[""],bs:["-start-start","-start-end"],be:["-end-start","-end-end"],s:["-end-start","-start-start"],is:["-end-start","-start-start"],e:["-start-end","-end-end"],ie:["-start-end","-end-end"],ss:["-start-start"],"bs-is":["-start-start"],"is-bs":["-start-start"],se:["-start-end"],"bs-ie":["-start-end"],"ie-bs":["-start-end"],es:["-end-start"],"be-is":["-end-start"],"is-be":["-end-start"],ee:["-end-end"],"be-ie":["-end-end"],"ie-be":["-end-end"]},tt={x:["-x"],y:["-y"],z:["-z"],"":["-x","-y"]},jn=["top","top center","top left","top right","bottom","bottom center","bottom left","bottom right","left","left center","left top","left bottom","right","right center","right top","right bottom","center","center top","center bottom","center left","center right","center center"],M=Object.assign({},...jn.map(e=>({[e.replace(/ /,"-")]:e})),...jn.map(e=>({[e.replace(/\b(\w)\w+/g,"$1").replace(/ /,"")]:e}))),w=["inherit","initial","revert","revert-layer","unset"],On=/^(?:calc|clamp|min|max)\s*\(.*\)/;function ge(e,t,r){if(e==="")return;let n=e.length,o=0,i=!1,a=0;for(let s=0;s<n;s++)switch(e[s]){case t:i||(i=!0,a=s),o++;break;case r:if(--o,o<0)return;if(o===0)return[e.slice(a,s+1),e.slice(s+1),e.slice(0,a)];break;}}function Vr(e,t,r,n){if(e===""||(j(n)&&(n=[n]),n.length===0))return;let o=e.length,i=0;for(let a=0;a<o;a++)switch(e[a]){case t:i++;break;case r:if(--i<0)return;break;default:for(let s of n){let l=s.length;if(l&&s===e.slice(a,a+l)&&i===0)return a===0||a===o-l?void 0:[e.slice(0,a),e.slice(a+l)];}}return[e,""];}function ae(e,t,r){r=r??10;let n=[],o=0;for(;e!=="";){if(++o>r)return;let i=Vr(e,"(",")",t);if(!i)return;let[a,s]=i;n.push(a),e=s;}if(n.length>0)return n;}var Pr=["hsl","hsla","hwb","lab","lch","oklab","oklch","rgb","rgba"],_n=["%alpha","<alpha-value>"],Ya=new RegExp(_n.map(e=>te(e)).join("|"));function X(e=""){let t=Xa(e);if(t==null||t===!1)return;let{type:r,components:n,alpha:o}=t,i=r.toLowerCase();if(n.length!==0&&!(Pr.includes(i)&&![1,3].includes(n.length)))return{type:i,components:n.map(a=>typeof a=="string"?a.trim():a),alpha:typeof o=="string"?o.trim():o};}function Q(e){let t=e.alpha??1;return typeof t=="string"&&_n.includes(t)?1:t;}function V(e,t){if(typeof e=="string")return e.replace(Ya,`${t??1}`);let{components:r}=e,{alpha:n,type:o}=e;return n=t??n,o=o.toLowerCase(),["hsla","rgba"].includes(o)?`${o}(${r.join(", ")}${n==null?"":`, ${n}`})`:(n=n==null?"":` / ${n}`,Pr.includes(o)?`${o}(${r.join(" ")}${n})`:`color(${o} ${r.join(" ")}${n})`);}function Xa(e){if(!e)return;let t=Za(e);if(t!=null||(t=Ja(e),t!=null)||(t=Qa(e),t!=null)||(t=ts(e),t!=null)||(t=rs(e),t!=null))return t;}function Za(e){let[,t]=e.match(/^#([\da-f]+)$/i)||[];if(t)switch(t.length){case 3:case 4:let r=Array.from(t,o=>Number.parseInt(o,16)).map(o=>o<<4|o);return{type:"rgb",components:r.slice(0,3),alpha:t.length===3?void 0:Math.round(r[3]/255*100)/100};case 6:case 8:let n=Number.parseInt(t,16);return{type:"rgb",components:t.length===6?[n>>16&255,n>>8&255,n&255]:[n>>24&255,n>>16&255,n>>8&255],alpha:t.length===6?void 0:Math.round((n&255)/255*100)/100};}}function Ja(e){let t={rebeccapurple:[102,51,153,1]}[e];if(t!=null)return{type:"rgb",components:t.slice(0,3),alpha:t[3]};}function Qa(e){let t=e.match(/^(rgb|rgba|hsl|hsla)\((.+)\)$/i);if(!t)return;let[,r,n]=t,o=ae(n,",",5);if(o){if([3,4].includes(o.length))return{type:r,components:o.slice(0,3),alpha:o[3]};if(o.length!==1)return!1;}}var es=new RegExp(`^(${Pr.join("|")})\\((.+)\\)$`,"i");function ts(e){let t=e.match(es);if(!t)return;let[,r,n]=t,o=An(`${r} ${n}`);if(o){let{alpha:i,components:[a,...s]}=o;return{type:a,components:s,alpha:i};}}function rs(e){let t=e.match(/^color\((.+)\)$/);if(!t)return;let r=An(t[1]);if(r){let{alpha:n,components:[o,...i]}=r;return{type:o,components:i,alpha:n};}}function An(e){let t=ae(e," ");if(!t)return;let r=t.length;if(t[r-2]==="/")return{components:t.slice(0,r-2),alpha:t[r-1]};if(t[r-2]!=null&&(t[r-2].endsWith("/")||t[r-1].startsWith("/"))){let i=t.splice(r-2);t.push(i.join(" ")),--r;}let n=ae(t[r-1],"/",2);if(!n)return;if(n.length===1||n[n.length-1]==="")return{components:t};let o=n.pop();return t[r-1]=n.join("/"),{components:t,alpha:o};}function rt(e){let t=function(n){let o=this.__options?.sequence||[];this.__options.sequence=[];for(let i of o){let a=e[i](n);if(a!=null)return a;}};function r(n,o){return n.__options||(n.__options={sequence:[]}),n.__options.sequence.push(o),n;}for(let n of Object.keys(e))Object.defineProperty(t,n,{enumerable:!0,get(){return r(this,n);}});return t;}function I(e,t){let r;return{name:e,match(n,o){r||(r=new RegExp(`^${te(e)}(?:${o.generator.config.separators.join("|")})`));let i=n.match(r);if(i)return{matcher:n.slice(i[0].length),handle:(a,s)=>s({...a,...t(a)})};},autocomplete:`${e}:`};}function L(e,t){let r;return{name:e,match(n,o){r||(r=new RegExp(`^${te(e)}(?:${o.generator.config.separators.join("|")})`));let i=n.match(r);if(i)return{matcher:n.slice(i[0].length),handle:(a,s)=>s({...a,parent:`${a.parent?`${a.parent} $$ `:""}${t}`})};},autocomplete:`${e}:`};}function re(e,t,r){if(t.startsWith(`${e}[`)){let[n,o]=ge(t.slice(e.length),"[","]")??[];if(n&&o){for(let i of r)if(o.startsWith(i))return[n,o.slice(i.length),i];return[n,o,""];}}}function F(e,t,r){if(t.startsWith(e)){let n=re(e,t,r);if(n){let[o="",i=n[1]]=F("/",n[1],r)??[];return[n[0],i,o];}for(let o of r.filter(i=>i!=="/")){let i=t.indexOf(o,e.length);if(i!==-1){let a=t.indexOf("/",e.length),s=a===-1||i<=a;return[t.slice(e.length,s?i:a),t.slice(i+o.length),s?"":t.slice(a+1,i)];}}}}var ns=",".charCodeAt(0),os=";".charCodeAt(0),Vn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Pn=new Uint8Array(64),is=new Uint8Array(128);for(let e=0;e<Vn.length;e++){let t=Vn.charCodeAt(e);Pn[e]=t,is[t]=e;}var Mr=typeof TextDecoder<"u"?new TextDecoder:typeof Buffer<"u"?{decode(e){return Buffer.from(e.buffer,e.byteOffset,e.byteLength).toString();}}:{decode(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t;}};function Mn(e){let t=new Int32Array(5),r=1024*16,n=r-36,o=new Uint8Array(r),i=o.subarray(0,n),a=0,s="";for(let l=0;l<e.length;l++){let f=e[l];if(l>0&&(a===r&&(s+=Mr.decode(o),a=0),o[a++]=os),f.length!==0){t[0]=0;for(let u=0;u<f.length;u++){let p=f[u];a>n&&(s+=Mr.decode(i),o.copyWithin(0,n,a),a-=n),u>0&&(o[a++]=ns),a=Ee(o,a,t,p,0),p.length!==1&&(a=Ee(o,a,t,p,1),a=Ee(o,a,t,p,2),a=Ee(o,a,t,p,3),p.length!==4&&(a=Ee(o,a,t,p,4)));}}}return s+Mr.decode(o.subarray(0,a));}function Ee(e,t,r,n,o){let i=n[o],a=i-r[o];r[o]=i,a=a<0?-a<<1|1:a<<1;do{let s=a&31;a>>>=5,a>0&&(s|=32),e[t++]=Pn[s];}while(a>0);return t;}var nt=class e{constructor(t){this.bits=t instanceof e?t.bits.slice():[];}add(t){this.bits[t>>5]|=1<<(t&31);}has(t){return!!(this.bits[t>>5]&1<<(t&31));}},ot=class e{constructor(t,r,n){this.start=t,this.end=r,this.original=n,this.intro="",this.outro="",this.content=n,this.storeName=!1,this.edited=!1,this.previous=null,this.next=null;}appendLeft(t){this.outro+=t;}appendRight(t){this.intro=this.intro+t;}clone(){let t=new e(this.start,this.end,this.original);return t.intro=this.intro,t.outro=this.outro,t.content=this.content,t.storeName=this.storeName,t.edited=this.edited,t;}contains(t){return this.start<t&&t<this.end;}eachNext(t){let r=this;for(;r;)t(r),r=r.next;}eachPrevious(t){let r=this;for(;r;)t(r),r=r.previous;}edit(t,r,n){return this.content=t,n||(this.intro="",this.outro=""),this.storeName=r,this.edited=!0,this;}prependLeft(t){this.outro=t+this.outro;}prependRight(t){this.intro=t+this.intro;}split(t){let r=t-this.start,n=this.original.slice(0,r),o=this.original.slice(r);this.original=n;let i=new e(t,this.end,o);return i.outro=this.outro,this.outro="",this.end=t,this.edited?(i.edit("",!1),this.content=""):this.content=n,i.next=this.next,i.next&&(i.next.previous=i),i.previous=this,this.next=i,i;}toString(){return this.intro+this.content+this.outro;}trimEnd(t){if(this.outro=this.outro.replace(t,""),this.outro.length)return!0;let r=this.content.replace(t,"");if(r.length)return r!==this.content&&(this.split(this.start+r.length).edit("",void 0,!0),this.edited&&this.edit(r,this.storeName,!0)),!0;if(this.edit("",void 0,!0),this.intro=this.intro.replace(t,""),this.intro.length)return!0;}trimStart(t){if(this.intro=this.intro.replace(t,""),this.intro.length)return!0;let r=this.content.replace(t,"");if(r.length){if(r!==this.content){let n=this.split(this.end-r.length);this.edited&&n.edit(r,this.storeName,!0),this.edit("",void 0,!0);}return!0;}else if(this.edit("",void 0,!0),this.outro=this.outro.replace(t,""),this.outro.length)return!0;}};function as(){return typeof window<"u"&&typeof window.btoa=="function"?e=>window.btoa(unescape(encodeURIComponent(e))):typeof Buffer=="function"?e=>Buffer.from(e,"utf-8").toString("base64"):()=>{throw new Error("Unsupported environment: `window.btoa` or `Buffer` should be supported.");};}var ss=as(),Ur=class{constructor(t){this.version=3,this.file=t.file,this.sources=t.sources,this.sourcesContent=t.sourcesContent,this.names=t.names,this.mappings=Mn(t.mappings),typeof t.x_google_ignoreList<"u"&&(this.x_google_ignoreList=t.x_google_ignoreList);}toString(){return JSON.stringify(this);}toUrl(){return"data:application/json;charset=utf-8;base64,"+ss(this.toString());}};function cs(e){let t=e.split(`
`),r=t.filter(i=>/^\t+/.test(i)),n=t.filter(i=>/^ {2,}/.test(i));if(r.length===0&&n.length===0)return null;if(r.length>=n.length)return"	";let o=n.reduce((i,a)=>{let s=/^ +/.exec(a)[0].length;return Math.min(s,i);},1/0);return new Array(o+1).join(" ");}function ls(e,t){let r=e.split(/[/\\]/),n=t.split(/[/\\]/);for(r.pop();r[0]===n[0];)r.shift(),n.shift();if(r.length){let o=r.length;for(;o--;)r[o]="..";}return r.concat(n).join("/");}var fs=Object.prototype.toString;function us(e){return fs.call(e)==="[object Object]";}function Un(e){let t=e.split(`
`),r=[];for(let n=0,o=0;n<t.length;n++)r.push(o),o+=t[n].length+1;return function(o){let i=0,a=r.length;for(;i<a;){let f=i+a>>1;o<r[f]?a=f:i=f+1;}let s=i-1,l=o-r[s];return{line:s,column:l};};}var ps=/\w/,Lr=class{constructor(t){this.hires=t,this.generatedCodeLine=0,this.generatedCodeColumn=0,this.raw=[],this.rawSegments=this.raw[this.generatedCodeLine]=[],this.pending=null;}addEdit(t,r,n,o){if(r.length){let i=r.indexOf(`
`,0),a=-1;for(;i>=0;){let l=[this.generatedCodeColumn,t,n.line,n.column];o>=0&&l.push(o),this.rawSegments.push(l),this.generatedCodeLine+=1,this.raw[this.generatedCodeLine]=this.rawSegments=[],this.generatedCodeColumn=0,a=i,i=r.indexOf(`
`,i+1);}let s=[this.generatedCodeColumn,t,n.line,n.column];o>=0&&s.push(o),this.rawSegments.push(s),this.advance(r.slice(a+1));}else this.pending&&(this.rawSegments.push(this.pending),this.advance(r));this.pending=null;}addUneditedChunk(t,r,n,o,i){let a=r.start,s=!0,l=!1;for(;a<r.end;){if(this.hires||s||i.has(a)){let f=[this.generatedCodeColumn,t,o.line,o.column];this.hires==="boundary"?ps.test(n[a])?l||(this.rawSegments.push(f),l=!0):(this.rawSegments.push(f),l=!1):this.rawSegments.push(f);}n[a]===`
`?(o.line+=1,o.column=0,this.generatedCodeLine+=1,this.raw[this.generatedCodeLine]=this.rawSegments=[],this.generatedCodeColumn=0,s=!0):(o.column+=1,this.generatedCodeColumn+=1,s=!1),a+=1;}this.pending=null;}advance(t){if(!t)return;let r=t.split(`
`);if(r.length>1){for(let n=0;n<r.length-1;n++)this.generatedCodeLine++,this.raw[this.generatedCodeLine]=this.rawSegments=[];this.generatedCodeColumn=0;}this.generatedCodeColumn+=r[r.length-1].length;}},ze=`
`,be={insertLeft:!1,insertRight:!1,storeName:!1},it=class e{constructor(t,r={}){let n=new ot(0,t.length,t);Object.defineProperties(this,{original:{writable:!0,value:t},outro:{writable:!0,value:""},intro:{writable:!0,value:""},firstChunk:{writable:!0,value:n},lastChunk:{writable:!0,value:n},lastSearchedChunk:{writable:!0,value:n},byStart:{writable:!0,value:{}},byEnd:{writable:!0,value:{}},filename:{writable:!0,value:r.filename},indentExclusionRanges:{writable:!0,value:r.indentExclusionRanges},sourcemapLocations:{writable:!0,value:new nt},storedNames:{writable:!0,value:{}},indentStr:{writable:!0,value:void 0},ignoreList:{writable:!0,value:r.ignoreList}}),this.byStart[0]=n,this.byEnd[t.length]=n;}addSourcemapLocation(t){this.sourcemapLocations.add(t);}append(t){if(typeof t!="string")throw new TypeError("outro content must be a string");return this.outro+=t,this;}appendLeft(t,r){if(typeof r!="string")throw new TypeError("inserted content must be a string");this._split(t);let n=this.byEnd[t];return n?n.appendLeft(r):this.intro+=r,this;}appendRight(t,r){if(typeof r!="string")throw new TypeError("inserted content must be a string");this._split(t);let n=this.byStart[t];return n?n.appendRight(r):this.outro+=r,this;}clone(){let t=new e(this.original,{filename:this.filename}),r=this.firstChunk,n=t.firstChunk=t.lastSearchedChunk=r.clone();for(;r;){t.byStart[n.start]=n,t.byEnd[n.end]=n;let o=r.next,i=o&&o.clone();i&&(n.next=i,i.previous=n,n=i),r=o;}return t.lastChunk=n,this.indentExclusionRanges&&(t.indentExclusionRanges=this.indentExclusionRanges.slice()),t.sourcemapLocations=new nt(this.sourcemapLocations),t.intro=this.intro,t.outro=this.outro,t;}generateDecodedMap(t){t=t||{};let r=0,n=Object.keys(this.storedNames),o=new Lr(t.hires),i=Un(this.original);return this.intro&&o.advance(this.intro),this.firstChunk.eachNext(a=>{let s=i(a.start);a.intro.length&&o.advance(a.intro),a.edited?o.addEdit(r,a.content,s,a.storeName?n.indexOf(a.original):-1):o.addUneditedChunk(r,a,this.original,s,this.sourcemapLocations),a.outro.length&&o.advance(a.outro);}),{file:t.file?t.file.split(/[/\\]/).pop():void 0,sources:[t.source?ls(t.file||"",t.source):t.file||""],sourcesContent:t.includeContent?[this.original]:void 0,names:n,mappings:o.raw,x_google_ignoreList:this.ignoreList?[r]:void 0};}generateMap(t){return new Ur(this.generateDecodedMap(t));}_ensureindentStr(){this.indentStr===void 0&&(this.indentStr=cs(this.original));}_getRawIndentString(){return this._ensureindentStr(),this.indentStr;}getIndentString(){return this._ensureindentStr(),this.indentStr===null?"	":this.indentStr;}indent(t,r){let n=/^[^\r\n]/gm;if(us(t)&&(r=t,t=void 0),t===void 0&&(this._ensureindentStr(),t=this.indentStr||"	"),t==="")return this;r=r||{};let o={};r.exclude&&(typeof r.exclude[0]=="number"?[r.exclude]:r.exclude).forEach(u=>{for(let p=u[0];p<u[1];p+=1)o[p]=!0;});let i=r.indentStart!==!1,a=f=>i?`${t}${f}`:(i=!0,f);this.intro=this.intro.replace(n,a);let s=0,l=this.firstChunk;for(;l;){let f=l.end;if(l.edited)o[s]||(l.content=l.content.replace(n,a),l.content.length&&(i=l.content[l.content.length-1]===`
`));else for(s=l.start;s<f;){if(!o[s]){let u=this.original[s];u===`
`?i=!0:u!=="\r"&&i&&(i=!1,s===l.start||(this._splitChunk(l,s),l=l.next),l.prependRight(t));}s+=1;}s=l.end,l=l.next;}return this.outro=this.outro.replace(n,a),this;}insert(){throw new Error("magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)");}insertLeft(t,r){return be.insertLeft||(console.warn("magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead"),be.insertLeft=!0),this.appendLeft(t,r);}insertRight(t,r){return be.insertRight||(console.warn("magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead"),be.insertRight=!0),this.prependRight(t,r);}move(t,r,n){if(n>=t&&n<=r)throw new Error("Cannot move a selection inside itself");this._split(t),this._split(r),this._split(n);let o=this.byStart[t],i=this.byEnd[r],a=o.previous,s=i.next,l=this.byStart[n];if(!l&&i===this.lastChunk)return this;let f=l?l.previous:this.lastChunk;return a&&(a.next=s),s&&(s.previous=a),f&&(f.next=o),l&&(l.previous=i),o.previous||(this.firstChunk=i.next),i.next||(this.lastChunk=o.previous,this.lastChunk.next=null),o.previous=f,i.next=l||null,f||(this.firstChunk=o),l||(this.lastChunk=i),this;}overwrite(t,r,n,o){return o=o||{},this.update(t,r,n,{...o,overwrite:!o.contentOnly});}update(t,r,n,o){if(typeof n!="string")throw new TypeError("replacement content must be a string");for(;t<0;)t+=this.original.length;for(;r<0;)r+=this.original.length;if(r>this.original.length)throw new Error("end is out of bounds");if(t===r)throw new Error("Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead");this._split(t),this._split(r),o===!0&&(be.storeName||(console.warn("The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string"),be.storeName=!0),o={storeName:!0});let i=o!==void 0?o.storeName:!1,a=o!==void 0?o.overwrite:!1;if(i){let f=this.original.slice(t,r);Object.defineProperty(this.storedNames,f,{writable:!0,value:!0,enumerable:!0});}let s=this.byStart[t],l=this.byEnd[r];if(s){let f=s;for(;f!==l;){if(f.next!==this.byStart[f.end])throw new Error("Cannot overwrite across a split point");f=f.next,f.edit("",!1);}s.edit(n,i,!a);}else{let f=new ot(t,r,"").edit(n,i);l.next=f,f.previous=l;}return this;}prepend(t){if(typeof t!="string")throw new TypeError("outro content must be a string");return this.intro=t+this.intro,this;}prependLeft(t,r){if(typeof r!="string")throw new TypeError("inserted content must be a string");this._split(t);let n=this.byEnd[t];return n?n.prependLeft(r):this.intro=r+this.intro,this;}prependRight(t,r){if(typeof r!="string")throw new TypeError("inserted content must be a string");this._split(t);let n=this.byStart[t];return n?n.prependRight(r):this.outro=r+this.outro,this;}remove(t,r){for(;t<0;)t+=this.original.length;for(;r<0;)r+=this.original.length;if(t===r)return this;if(t<0||r>this.original.length)throw new Error("Character is out of bounds");if(t>r)throw new Error("end must be greater than start");this._split(t),this._split(r);let n=this.byStart[t];for(;n;)n.intro="",n.outro="",n.edit(""),n=r>n.end?this.byStart[n.end]:null;return this;}lastChar(){if(this.outro.length)return this.outro[this.outro.length-1];let t=this.lastChunk;do{if(t.outro.length)return t.outro[t.outro.length-1];if(t.content.length)return t.content[t.content.length-1];if(t.intro.length)return t.intro[t.intro.length-1];}while(t=t.previous);return this.intro.length?this.intro[this.intro.length-1]:"";}lastLine(){let t=this.outro.lastIndexOf(ze);if(t!==-1)return this.outro.substr(t+1);let r=this.outro,n=this.lastChunk;do{if(n.outro.length>0){if(t=n.outro.lastIndexOf(ze),t!==-1)return n.outro.substr(t+1)+r;r=n.outro+r;}if(n.content.length>0){if(t=n.content.lastIndexOf(ze),t!==-1)return n.content.substr(t+1)+r;r=n.content+r;}if(n.intro.length>0){if(t=n.intro.lastIndexOf(ze),t!==-1)return n.intro.substr(t+1)+r;r=n.intro+r;}}while(n=n.previous);return t=this.intro.lastIndexOf(ze),t!==-1?this.intro.substr(t+1)+r:this.intro+r;}slice(t=0,r=this.original.length){for(;t<0;)t+=this.original.length;for(;r<0;)r+=this.original.length;let n="",o=this.firstChunk;for(;o&&(o.start>t||o.end<=t);){if(o.start<r&&o.end>=r)return n;o=o.next;}if(o&&o.edited&&o.start!==t)throw new Error(`Cannot use replaced character ${t} as slice start anchor.`);let i=o;for(;o;){o.intro&&(i!==o||o.start===t)&&(n+=o.intro);let a=o.start<r&&o.end>=r;if(a&&o.edited&&o.end!==r)throw new Error(`Cannot use replaced character ${r} as slice end anchor.`);let s=i===o?t-o.start:0,l=a?o.content.length+r-o.end:o.content.length;if(n+=o.content.slice(s,l),o.outro&&(!a||o.end===r)&&(n+=o.outro),a)break;o=o.next;}return n;}snip(t,r){let n=this.clone();return n.remove(0,t),n.remove(r,n.original.length),n;}_split(t){if(this.byStart[t]||this.byEnd[t])return;let r=this.lastSearchedChunk,n=t>r.end;for(;r;){if(r.contains(t))return this._splitChunk(r,t);r=n?this.byStart[r.end]:this.byEnd[r.start];}}_splitChunk(t,r){if(t.edited&&t.content.length){let o=Un(this.original)(r);throw new Error(`Cannot split a chunk that has already been edited (${o.line}:${o.column} \u2013 "${t.original}")`);}let n=t.split(r);return this.byEnd[r]=t,this.byStart[r]=n,this.byEnd[n.end]=n,t===this.lastChunk&&(this.lastChunk=n),this.lastSearchedChunk=t,!0;}toString(){let t=this.intro,r=this.firstChunk;for(;r;)t+=r.toString(),r=r.next;return t+this.outro;}isEmpty(){let t=this.firstChunk;do if(t.intro.length&&t.intro.trim()||t.content.length&&t.content.trim()||t.outro.length&&t.outro.trim())return!1;while(t=t.next);return!0;}length(){let t=this.firstChunk,r=0;do r+=t.intro.length+t.content.length+t.outro.length;while(t=t.next);return r;}trimLines(){return this.trim("[\\r\\n]");}trim(t){return this.trimStart(t).trimEnd(t);}trimEndAborted(t){let r=new RegExp((t||"\\s")+"+$");if(this.outro=this.outro.replace(r,""),this.outro.length)return!0;let n=this.lastChunk;do{let o=n.end,i=n.trimEnd(r);if(n.end!==o&&(this.lastChunk===n&&(this.lastChunk=n.next),this.byEnd[n.end]=n,this.byStart[n.next.start]=n.next,this.byEnd[n.next.end]=n.next),i)return!0;n=n.previous;}while(n);return!1;}trimEnd(t){return this.trimEndAborted(t),this;}trimStartAborted(t){let r=new RegExp("^"+(t||"\\s")+"+");if(this.intro=this.intro.replace(r,""),this.intro.length)return!0;let n=this.firstChunk;do{let o=n.end,i=n.trimStart(r);if(n.end!==o&&(n===this.lastChunk&&(this.lastChunk=n.next),this.byEnd[n.end]=n,this.byStart[n.next.start]=n.next,this.byEnd[n.next.end]=n.next),i)return!0;n=n.next;}while(n);return!1;}trimStart(t){return this.trimStartAborted(t),this;}hasChanged(){return this.original!==this.toString();}_replaceRegexp(t,r){function n(i,a){return typeof r=="string"?r.replace(/\$(\$|&|\d+)/g,(s,l)=>l==="$"?"$":l==="&"?i[0]:+l<i.length?i[+l]:`$${l}`):r(...i,i.index,a,i.groups);}function o(i,a){let s,l=[];for(;s=i.exec(a);)l.push(s);return l;}if(t.global)o(t,this.original).forEach(a=>{a.index!=null&&this.overwrite(a.index,a.index+a[0].length,n(a,this.original));});else{let i=this.original.match(t);i&&i.index!=null&&this.overwrite(i.index,i.index+i[0].length,n(i,this.original));}return this;}_replaceString(t,r){let{original:n}=this,o=n.indexOf(t);return o!==-1&&this.overwrite(o,o+t.length,r),this;}replace(t,r){return typeof t=="string"?this._replaceString(t,r):this._replaceRegexp(t,r);}_replaceAllString(t,r){let{original:n}=this,o=t.length;for(let i=n.indexOf(t);i!==-1;i=n.indexOf(t,i+o))this.overwrite(i,i+o,r);return this;}replaceAll(t,r){if(typeof t=="string")return this._replaceAllString(t,r);if(!t.global)throw new TypeError("MagicString.prototype.replaceAll called with a non-global RegExp argument");return this._replaceRegexp(t,r);}};var ms=/theme\(\s*['"]?(.*?)['"]?\s*\)/g;function Ln(e){return e.includes("theme(")&&e.includes(")");}function Fn(e,t,r=!0){let n=Array.from(e.toString().matchAll(ms));if(!n.length)return e;let o=new it(e);for(let i of n){let a=i[1];if(!a)throw new Error("theme() expect exact one argument, but got 0");let[s,l]=a.split("/"),u=s.trim().split(".").reduce((p,h)=>p?.[h],t);if(typeof u=="string"){if(l){let p=X(u);p&&(u=V(p,l));}o.overwrite(i.index,i.index+i[0].length,u);}else if(r)throw new Error(`theme of "${a}" did not found`);}return o.toString();}var Wr={};Ta(Wr,{auto:()=>gs,bracket:()=>$s,bracketOfColor:()=>Ss,bracketOfLength:()=>Cs,bracketOfPosition:()=>Rs,cssvar:()=>Ts,degree:()=>zs,fraction:()=>ws,global:()=>js,number:()=>ys,numberWithUnit:()=>hs,percent:()=>vs,position:()=>_s,properties:()=>Os,px:()=>xs,rem:()=>bs,time:()=>Es});var xe=/^(-?\d*(?:\.\d+)?)(px|pt|pc|%|r?(?:em|ex|lh|cap|ch|ic)|(?:[sld]?v|cq)(?:[whib]|min|max)|in|cm|mm|rpx)?$/i,Fr=/^(-?\d*(?:\.\d+)?)$/i,Nr=/^(px)$/i;var ds=["color","border-color","background-color","flex-grow","flex","flex-shrink","caret-color","font","gap","opacity","visibility","z-index","font-weight","zoom","text-shadow","transform","box-shadow","background-position","left","right","top","bottom","object-position","max-height","min-height","max-width","min-width","height","width","border-width","margin","padding","outline-width","outline-offset","font-size","line-height","text-indent","vertical-align","border-spacing","letter-spacing","word-spacing","stroke","filter","backdrop-filter","fill","mask","mask-size","mask-border","clip-path","clip","border-radius"];function H(e){return e.toFixed(10).replace(/\.0+$/,"").replace(/(\.\d+?)0+$/,"$1");}function hs(e){let t=e.match(xe);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(n&&!Number.isNaN(o))return`${H(o)}${n}`;}function gs(e){if(e==="auto"||e==="a")return"auto";}function bs(e){if(e.match(Nr))return`1${e}`;let t=e.match(xe);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${H(o)}${n}`:`${H(o/4)}rem`;}function xs(e){if(e.match(Nr))return`1${e}`;let t=e.match(xe);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${H(o)}${n}`:`${H(o)}px`;}function ys(e){if(!Fr.test(e))return;let t=Number.parseFloat(e);if(!Number.isNaN(t))return H(t);}function vs(e){if(e.endsWith("%")&&(e=e.slice(0,-1)),!Fr.test(e))return;let t=Number.parseFloat(e);if(!Number.isNaN(t))return`${H(t/100)}`;}function ws(e){if(e==="full")return"100%";let[t,r]=e.split("/"),n=Number.parseFloat(t)/Number.parseFloat(r);if(!Number.isNaN(n))return n===0?"0":`${H(n*100)}%`;}var ks=/^\[(color|length|position|quoted|string):/i;function at(e,t){if(e&&e.startsWith("[")&&e.endsWith("]")){let r,n,o=e.match(ks);if(o?(t||(n=o[1]),r=e.slice(o[0].length,-1)):r=e.slice(1,-1),!r||r==="=\"\"")return;r.startsWith("--")&&(r=`var(${r})`);let i=0;for(let a of r)if(a==="[")i+=1;else if(a==="]"&&(i-=1,i<0))return;if(i)return;switch(n){case"string":return r.replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_");case"quoted":return r.replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_").replace(/(["\\])/g,"\\$1").replace(/^(.+)$/,"\"$1\"");}return r.replace(/(url\(.*?\))/g,a=>a.replace(/_/g,"\\_")).replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_").replace(/(?:calc|clamp|max|min)\((.*)/g,a=>{let s=[];return a.replace(/var\((--.+?)[,)]/g,(l,f)=>(s.push(f),l.replace(f,"--un-calc"))).replace(/(-?\d*\.?\d(?!\b-\d.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g,"$1 $2 ").replace(/--un-calc/g,()=>s.shift());});}}function $s(e){return at(e);}function Ss(e){return at(e,"color");}function Cs(e){return at(e,"length");}function Rs(e){return at(e,"position");}function Ts(e){if(e.match(/^\$[^\s'"`;{}]/))return`var(--${J(e.slice(1))})`;}function Es(e){let t=e.match(/^(-?[0-9.]+)(s|ms)?$/i);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0&&!n?"0s":n?`${H(o)}${n}`:`${H(o)}ms`;}function zs(e){let t=e.match(/^(-?[0-9.]+)(deg|rad|grad|turn)?$/i);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${H(o)}${n}`:`${H(o)}deg`;}function js(e){if(w.includes(e))return e;}function Os(e){if(e.split(",").every(t=>ds.includes(t)))return e;}function _s(e){if(["top","left","right","bottom","center"].includes(e))return e;}var As=rt(Wr),c=As;var Nn={mid:"middle",base:"baseline",btm:"bottom",baseline:"baseline",top:"top",start:"top",middle:"middle",bottom:"bottom",end:"bottom","text-top":"text-top","text-bottom":"text-bottom",sub:"sub",super:"super",...Object.fromEntries(w.map(e=>[e,e]))},st=[[/^(?:vertical|align|v)-([-\w]+%?)$/,([,e])=>({"vertical-align":Nn[e]??c.numberWithUnit(e)}),{autocomplete:[`(vertical|align|v)-(${Object.keys(Nn).join("|")})`,"(vertical|align|v)-<percentage>"]}]],ct=["center","left","right","justify","start","end"].map(e=>[`text-${e}`,{"text-align":e}]);var Wn="$$mini-no-negative";function O(e){return([t,r,n],{theme:o})=>{let i=o.spacing?.[n||"DEFAULT"]??c.bracket.cssvar.global.auto.fraction.rem(n);if(i!=null)return U[r].map(a=>[`${e}${a}`,i]);};}function lt(e,t){let r=e.colors,n=-1;for(let o of t){if(n+=1,r&&typeof r!="string"){let i=t.slice(n).join("-").replace(/(-[a-z])/g,a=>a.slice(1).toUpperCase());if(r[i])return r[i];if(r[o]){r=r[o];continue;}}return;}return r;}function Dr(e,t){let r=e.split(/(?:\/|:)/);return r[0]===`[${t}`?[r.slice(0,2).join(":"),r[2]]:r;}function ye(e,t){let[r,n]=Dr(e,"color"),o=r.replace(/([a-z])([0-9])/g,"$1-$2").split(/-/g),[i]=o;if(!i)return;let a,s=c.bracketOfColor(r),l=s||r;if(c.numberWithUnit(l))return;if(l.match(/^#[\da-fA-F]+/g)?a=l:l.match(/^hex-[\da-fA-F]+/g)?a=`#${l.slice(4)}`:r.startsWith("$")&&(a=c.cssvar(r)),a=a||s,!a){let u=lt(t,[r]);typeof u=="string"&&(a=u);}let f="DEFAULT";if(!a){let u,[p]=o.slice(-1);p.match(/^\d+$/)?(f=p,u=lt(t,o.slice(0,-1)),!u||typeof u=="string"?a=void 0:a=u[f]):(u=lt(t,o),!u&&o.length<=2&&([,f=f]=o,u=lt(t,[i])),typeof u=="string"?a=u:f&&u&&(a=u[f]));}return{opacity:n,name:i,no:f,color:a,cssColor:X(a),alpha:c.bracket.cssvar.percent(n??"")};}function E(e,t,r){return([,n],{theme:o})=>{let i=ye(n,o);if(!i)return;let{alpha:a,color:s,cssColor:l}=i,f={};if(l?a!=null?f[e]=V(l,a):(f[`--un-${t}-opacity`]=Q(l),f[e]=V(l,`var(--un-${t}-opacity)`)):s&&(f[e]=V(s,a)),r?.(f)!==!1)return f;};}function ve(e,t){let r=[];e=A(e);for(let n=0;n<e.length;n++){let o=ae(e[n]," ",6);if(!o||o.length<3)return e;let i=X(o.pop());if(i==null)return e;r.push(`${o.join(" ")} var(${t}, ${V(i)})`);}return r;}function we(e,t){return e!=null&&!!ye(e,t)?.color;}function se({theme:e,generator:t},r="breakpoints"){let n;return t.userConfig&&t.userConfig.theme&&(n=t.userConfig.theme[r]),n||(n=e[r]),n?Object.entries(n).sort((o,i)=>Number.parseInt(o[1].replace(/[a-z]+/gi,""))-Number.parseInt(i[1].replace(/[a-z]+/gi,""))).map(([o,i])=>({point:o,size:i})):void 0;}function b(e,t){return w.map(r=>[`${e}-${r}`,{[t??e]:r}]);}function Dn(e){return On.test(e);}var ft=[[/^outline-(?:width-|size-)?(.+)$/,([,e],{theme:t})=>({"outline-width":t.lineWidth?.[e]??c.bracket.cssvar.global.px(e)}),{autocomplete:"outline-(width|size)-<num>"}],[/^outline-(?:color-)?(.+)$/,E("outline-color","outline-color"),{autocomplete:"outline-$colors"}],[/^outline-offset-(.+)$/,([,e],{theme:t})=>({"outline-offset":t.lineWidth?.[e]??c.bracket.cssvar.global.px(e)}),{autocomplete:"outline-(offset)-<num>"}],["outline",{"outline-style":"solid"}],...["auto","dashed","dotted","double","hidden","solid","groove","ridge","inset","outset",...w].map(e=>[`outline-${e}`,{"outline-style":e}]),["outline-none",{outline:"2px solid transparent","outline-offset":"2px"}]],ut=[["appearance-none",{"-webkit-appearance":"none",appearance:"none"}]];function Vs(e){return c.properties.auto.global(e)??{contents:"contents",scroll:"scroll-position"}[e];}var pt=[[/^will-change-(.+)/,([,e])=>({"will-change":Vs(e)})]];var ce=["solid","dashed","dotted","double","hidden","none","groove","ridge","inset","outset",...w],mt=[[/^(?:border|b)()(?:-(.+))?$/,je,{autocomplete:"(border|b)-<directions>"}],[/^(?:border|b)-([xy])(?:-(.+))?$/,je],[/^(?:border|b)-([rltbse])(?:-(.+))?$/,je],[/^(?:border|b)-(block|inline)(?:-(.+))?$/,je],[/^(?:border|b)-([bi][se])(?:-(.+))?$/,je],[/^(?:border|b)-()(?:width|size)-(.+)$/,ke,{autocomplete:["(border|b)-<num>","(border|b)-<directions>-<num>"]}],[/^(?:border|b)-([xy])-(?:width|size)-(.+)$/,ke],[/^(?:border|b)-([rltbse])-(?:width|size)-(.+)$/,ke],[/^(?:border|b)-(block|inline)-(?:width|size)-(.+)$/,ke],[/^(?:border|b)-([bi][se])-(?:width|size)-(.+)$/,ke],[/^(?:border|b)-()(?:color-)?(.+)$/,Oe,{autocomplete:["(border|b)-$colors","(border|b)-<directions>-$colors"]}],[/^(?:border|b)-([xy])-(?:color-)?(.+)$/,Oe],[/^(?:border|b)-([rltbse])-(?:color-)?(.+)$/,Oe],[/^(?:border|b)-(block|inline)-(?:color-)?(.+)$/,Oe],[/^(?:border|b)-([bi][se])-(?:color-)?(.+)$/,Oe],[/^(?:border|b)-()op(?:acity)?-?(.+)$/,_e,{autocomplete:"(border|b)-(op|opacity)-<percent>"}],[/^(?:border|b)-([xy])-op(?:acity)?-?(.+)$/,_e],[/^(?:border|b)-([rltbse])-op(?:acity)?-?(.+)$/,_e],[/^(?:border|b)-(block|inline)-op(?:acity)?-?(.+)$/,_e],[/^(?:border|b)-([bi][se])-op(?:acity)?-?(.+)$/,_e],[/^(?:border-|b-)?(?:rounded|rd)()(?:-(.+))?$/,Ae,{autocomplete:["(border|b)-(rounded|rd)","(border|b)-(rounded|rd)-<num>","(rounded|rd)","(rounded|rd)-<num>"]}],[/^(?:border-|b-)?(?:rounded|rd)-([rltbse])(?:-(.+))?$/,Ae],[/^(?:border-|b-)?(?:rounded|rd)-([rltb]{2})(?:-(.+))?$/,Ae],[/^(?:border-|b-)?(?:rounded|rd)-([bise][se])(?:-(.+))?$/,Ae],[/^(?:border-|b-)?(?:rounded|rd)-([bi][se]-[bi][se])(?:-(.+))?$/,Ae],[/^(?:border|b)-(?:style-)?()(.+)$/,Ve,{autocomplete:["(border|b)-style",`(border|b)-(${ce.join("|")})`,"(border|b)-<directions>-style",`(border|b)-<directions>-(${ce.join("|")})`,`(border|b)-<directions>-style-(${ce.join("|")})`,`(border|b)-style-(${ce.join("|")})`]}],[/^(?:border|b)-([xy])-(?:style-)?(.+)$/,Ve],[/^(?:border|b)-([rltbse])-(?:style-)?(.+)$/,Ve],[/^(?:border|b)-(block|inline)-(?:style-)?(.+)$/,Ve],[/^(?:border|b)-([bi][se])-(?:style-)?(.+)$/,Ve]];function Ps(e){return([,t],r)=>{let n=ye(t,r);if(!n)return;let{alpha:o,color:i,cssColor:a}=n;if(a)return o!=null?{[`border${e}-color`]:V(a,o)}:e===""?{"--un-border-opacity":Q(a),"border-color":V(a,"var(--un-border-opacity)")}:{"--un-border-opacity":Q(a),[`--un-border${e}-opacity`]:"var(--un-border-opacity)",[`border${e}-color`]:V(a,`var(--un-border${e}-opacity)`)};if(i)return Dn(i)?{"border-width":i}:{[`border${e}-color`]:V(i,o)};};}function je(e,t){return ke(e,t);}function ke([,e="",t],{theme:r}){let n=r.lineWidth?.[t||"DEFAULT"]??c.bracket.cssvar.global.px(t||"1");if(e in U&&n!=null)return U[e].map(o=>[`border${o}-width`,n]);}function Oe([,e="",t],{theme:r}){if(e in U&&we(t,r))return Object.assign({},...U[e].map(n=>Ps(n)(["",t],r)));}function _e([,e="",t]){let r=c.bracket.percent.cssvar(t);if(e in U&&r!=null)return U[e].map(n=>[`--un-border${n}-opacity`,r]);}function Ae([,e="",t],{theme:r}){let n=r.borderRadius?.[t||"DEFAULT"]||c.bracket.cssvar.global.fraction.rem(t||"1");if(e in Ar&&n!=null)return Ar[e].map(o=>[`border${o}-radius`,n]);}function Ve([,e="",t]){if(ce.includes(t)&&e in U)return U[e].map(r=>[`border${r}-style`,t]);}var dt=[[/^op(?:acity)?-?(.+)$/,([,e])=>({opacity:c.bracket.percent.cssvar(e)})]],ht=[[/^(?:color|c)-(.+)$/,E("color","text"),{autocomplete:"(color|c)-$colors"}],[/^text-(.+)$/,E("color","text",e=>!e.color?.toString().match(xe)),{autocomplete:"text-$colors"}],[/^(?:text|color|c)-(.+)$/,([,e])=>w.includes(e)?{color:e}:void 0,{autocomplete:`(text|color|c)-(${w.join("|")})`}],[/^(?:text|color|c)-op(?:acity)?-?(.+)$/,([,e])=>({"--un-text-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"(text|color|c)-(op|opacity)-<percent>"}]],gt=[[/^bg-(.+)$/,E("background-color","bg"),{autocomplete:"bg-$colors"}],[/^bg-op(?:acity)?-?(.+)$/,([,e])=>({"--un-bg-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"bg-(op|opacity)-<percent>"}]],Bn=[[/^color-scheme-(\w+)$/,([,e])=>({"color-scheme":e})]];var bt=[[/^@container(?:\/(\w+))?(?:-(normal))?$/,([,e,t])=>(Y("The container query rule is experimental and may not follow semver."),{"container-type":t??"inline-size","container-name":e})]];var In=["solid","double","dotted","dashed","wavy",...w],xt=[[/^(?:decoration-)?(underline|overline|line-through)$/,([,e])=>({"text-decoration-line":e}),{autocomplete:"decoration-(underline|overline|line-through)"}],[/^(?:underline|decoration)-(?:size-)?(.+)$/,([,e],{theme:t})=>({"text-decoration-thickness":t.lineWidth?.[e]??c.bracket.cssvar.global.px(e)}),{autocomplete:"(underline|decoration)-<num>"}],[/^(?:underline|decoration)-(auto|from-font)$/,([,e])=>({"text-decoration-thickness":e}),{autocomplete:"(underline|decoration)-(auto|from-font)"}],[/^(?:underline|decoration)-(.+)$/,(e,t)=>{let r=E("text-decoration-color","line")(e,t);if(r)return{"-webkit-text-decoration-color":r["text-decoration-color"],...r};},{autocomplete:"(underline|decoration)-$colors"}],[/^(?:underline|decoration)-op(?:acity)?-?(.+)$/,([,e])=>({"--un-line-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"(underline|decoration)-(op|opacity)-<percent>"}],[/^(?:underline|decoration)-offset-(.+)$/,([,e],{theme:t})=>({"text-underline-offset":t.lineWidth?.[e]??c.auto.bracket.cssvar.global.px(e)}),{autocomplete:"(underline|decoration)-(offset)-<num>"}],...In.map(e=>[`underline-${e}`,{"text-decoration-style":e}]),...In.map(e=>[`decoration-${e}`,{"text-decoration-style":e}]),["no-underline",{"text-decoration":"none"}],["decoration-none",{"text-decoration":"none"}]];var yt={all:"all",colors:["color","background-color","border-color","outline-color","text-decoration-color","fill","stroke"].join(","),none:"none",opacity:"opacity",shadow:"box-shadow",transform:"transform"};function Gn(e){return c.properties(e)??yt[e];}var vt=[[/^transition(?:-([a-z-]+(?:,[a-z-]+)*))?(?:-(\d+))?$/,([,e,t],{theme:r})=>{let n=e!=null?Gn(e):[yt.colors,"opacity","box-shadow","transform","filter","backdrop-filter"].join(",");if(n){let o=r.duration?.[t||"DEFAULT"]??c.time(t||"150");return{"transition-property":n,"transition-timing-function":"cubic-bezier(0.4, 0, 0.2, 1)","transition-duration":o};}},{autocomplete:`transition-(${Object.keys(yt).join("|")})`}],[/^(?:transition-)?duration-(.+)$/,([,e],{theme:t})=>({"transition-duration":t.duration?.[e||"DEFAULT"]??c.bracket.cssvar.time(e)}),{autocomplete:["transition-duration-$duration","duration-$duration"]}],[/^(?:transition-)?delay-(.+)$/,([,e],{theme:t})=>({"transition-delay":t.duration?.[e||"DEFAULT"]??c.bracket.cssvar.time(e)}),{autocomplete:["transition-delay-$duration","delay-$duration"]}],[/^(?:transition-)?ease(?:-(.+))?$/,([,e],{theme:t})=>({"transition-timing-function":t.easing?.[e||"DEFAULT"]??c.bracket.cssvar(e)}),{autocomplete:["transition-ease-(linear|in|out|in-out|DEFAULT)","ease-(linear|in|out|in-out|DEFAULT)"]}],[/^(?:transition-)?property-(.+)$/,([,e])=>({"transition-property":c.bracket.global(e)||Gn(e)}),{autocomplete:[`transition-property-(${[...w,...Object.keys(yt)].join("|")})`]}],["transition-none",{transition:"none"}],...b("transition")];var wt=[["flex",{display:"flex"}],["inline-flex",{display:"inline-flex"}],["flex-inline",{display:"inline-flex"}],[/^flex-(.*)$/,([,e])=>({flex:c.bracket(e)!=null?c.bracket(e).split(" ").map(t=>c.cssvar.fraction(t)??t).join(" "):c.cssvar.fraction(e)})],["flex-1",{flex:"1 1 0%"}],["flex-auto",{flex:"1 1 auto"}],["flex-initial",{flex:"0 1 auto"}],["flex-none",{flex:"none"}],[/^(?:flex-)?shrink(?:-(.*))?$/,([,e=""])=>({"flex-shrink":c.bracket.cssvar.number(e)??1}),{autocomplete:["flex-shrink-<num>","shrink-<num>"]}],[/^(?:flex-)?grow(?:-(.*))?$/,([,e=""])=>({"flex-grow":c.bracket.cssvar.number(e)??1}),{autocomplete:["flex-grow-<num>","grow-<num>"]}],[/^(?:flex-)?basis-(.+)$/,([,e],{theme:t})=>({"flex-basis":t.spacing?.[e]??c.bracket.cssvar.auto.fraction.rem(e)}),{autocomplete:["flex-basis-$spacing","basis-$spacing"]}],["flex-row",{"flex-direction":"row"}],["flex-row-reverse",{"flex-direction":"row-reverse"}],["flex-col",{"flex-direction":"column"}],["flex-col-reverse",{"flex-direction":"column-reverse"}],["flex-wrap",{"flex-wrap":"wrap"}],["flex-wrap-reverse",{"flex-wrap":"wrap-reverse"}],["flex-nowrap",{"flex-wrap":"nowrap"}]];function Br(e,t,r){return t[r]?.[e]||c.bracket.cssvar.global.rem(e);}var kt=[[/^text-(.+)$/,([,e="base"],{theme:t})=>{let[r,n]=Dr(e,"length"),o=A(t.fontSize?.[r]),i=n?Br(n,t,"lineHeight"):void 0;if(o?.[0]){let[s,l,f]=o;return typeof l=="object"?{"font-size":s,...l}:{"font-size":s,"line-height":i??l??"1","letter-spacing":f?Br(f,t,"letterSpacing"):void 0};}let a=c.bracketOfLength.rem(r);return i&&a?{"font-size":a,"line-height":i}:{"font-size":c.bracketOfLength.rem(e)};},{autocomplete:"text-$fontSize"}],[/^(?:text|font)-size-(.+)$/,([,e],{theme:t})=>{let n=A(t.fontSize?.[e])?.[0]??c.bracket.cssvar.global.rem(e);if(n!=null)return{"font-size":n};},{autocomplete:"text-size-$fontSize"}],[/^(?:font|fw)-?([^-]+)$/,([,e],{theme:t})=>({"font-weight":t.fontWeight?.[e]||c.bracket.global.number(e)}),{autocomplete:["(font|fw)-(100|200|300|400|500|600|700|800|900)","(font|fw)-$fontWeight"]}],[/^(?:font-)?(?:leading|lh|line-height)-(.+)$/,([,e],{theme:t})=>({"line-height":Br(e,t,"lineHeight")}),{autocomplete:"(leading|lh|line-height)-$lineHeight"}],["font-synthesis-weight",{"font-synthesis":"weight"}],["font-synthesis-style",{"font-synthesis":"style"}],["font-synthesis-small-caps",{"font-synthesis":"small-caps"}],["font-synthesis-none",{"font-synthesis":"none"}],[/^font-synthesis-(.+)$/,([,e])=>({"font-synthesis":c.bracket.cssvar.global(e)})],[/^(?:font-)?tracking-(.+)$/,([,e],{theme:t})=>({"letter-spacing":t.letterSpacing?.[e]||c.bracket.cssvar.global.rem(e)}),{autocomplete:"tracking-$letterSpacing"}],[/^(?:font-)?word-spacing-(.+)$/,([,e],{theme:t})=>({"word-spacing":t.wordSpacing?.[e]||c.bracket.cssvar.global.rem(e)}),{autocomplete:"word-spacing-$wordSpacing"}],[/^font-(.+)$/,([,e],{theme:t})=>({"font-family":t.fontFamily?.[e]||c.bracket.cssvar.global(e)}),{autocomplete:"font-$fontFamily"}]],$t=[[/^tab(?:-(.+))?$/,([,e])=>{let t=c.bracket.cssvar.global.number(e||"4");if(t!=null)return{"-moz-tab-size":t,"-o-tab-size":t,"tab-size":t};}]],St=[[/^indent(?:-(.+))?$/,([,e],{theme:t})=>({"text-indent":t.textIndent?.[e||"DEFAULT"]||c.bracket.cssvar.global.fraction.rem(e)}),{autocomplete:"indent-$textIndent"}]],Ct=[[/^text-stroke(?:-(.+))?$/,([,e],{theme:t})=>({"-webkit-text-stroke-width":t.textStrokeWidth?.[e||"DEFAULT"]||c.bracket.cssvar.px(e)}),{autocomplete:"text-stroke-$textStrokeWidth"}],[/^text-stroke-(.+)$/,E("-webkit-text-stroke-color","text-stroke"),{autocomplete:"text-stroke-$colors"}],[/^text-stroke-op(?:acity)?-?(.+)$/,([,e])=>({"--un-text-stroke-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"text-stroke-(op|opacity)-<percent>"}]],Rt=[[/^text-shadow(?:-(.+))?$/,([,e],{theme:t})=>{let r=t.textShadow?.[e||"DEFAULT"];return r!=null?{"--un-text-shadow":ve(r,"--un-text-shadow-color").join(","),"text-shadow":"var(--un-text-shadow)"}:{"text-shadow":c.bracket.cssvar.global(e)};},{autocomplete:"text-shadow-$textShadow"}],[/^text-shadow-color-(.+)$/,E("--un-text-shadow-color","text-shadow"),{autocomplete:"text-shadow-color-$colors"}],[/^text-shadow-color-op(?:acity)?-?(.+)$/,([,e])=>({"--un-text-shadow-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"text-shadow-color-(op|opacity)-<percent>"}]];var Ms={"":"",x:"column-",y:"row-"};function Hn([,e="",t],{theme:r}){let n=r.spacing?.[t]??c.bracket.cssvar.global.rem(t);if(n!=null)return{[`${Ms[e]}gap`]:n};}var Tt=[[/^(?:flex-|grid-)?gap-?()(.+)$/,Hn,{autocomplete:["gap-$spacing","gap-<num>"]}],[/^(?:flex-|grid-)?gap-([xy])-?(.+)$/,Hn,{autocomplete:["gap-(x|y)-$spacing","gap-(x|y)-<num>"]}]];function Z(e){return e.replace("col","column");}function Ir(e){return e[0]==="r"?"Row":"Column";}function Us(e,t,r){let n=t[`gridAuto${Ir(e)}`]?.[r];if(n!=null)return n;switch(r){case"min":return"min-content";case"max":return"max-content";case"fr":return"minmax(0,1fr)";}return c.bracket.cssvar.auto.rem(r);}var Et=[["grid",{display:"grid"}],["inline-grid",{display:"inline-grid"}],[/^(?:grid-)?(row|col)-(.+)$/,([,e,t],{theme:r})=>({[`grid-${Z(e)}`]:r[`grid${Ir(e)}`]?.[t]??c.bracket.cssvar.auto(t)})],[/^(?:grid-)?(row|col)-span-(.+)$/,([,e,t])=>{if(t==="full")return{[`grid-${Z(e)}`]:"1/-1"};let r=c.bracket.number(t);if(r!=null)return{[`grid-${Z(e)}`]:`span ${r}/span ${r}`};},{autocomplete:["grid-(row|col)-span-<num>","(row|col)-span-<num>"]}],[/^(?:grid-)?(row|col)-start-(.+)$/,([,e,t])=>({[`grid-${Z(e)}-start`]:c.bracket.cssvar(t)??t})],[/^(?:grid-)?(row|col)-end-(.+)$/,([,e,t])=>({[`grid-${Z(e)}-end`]:c.bracket.cssvar(t)??t}),{autocomplete:["grid-(row|col)-(start|end)-<num>"]}],[/^(?:grid-)?auto-(rows|cols)-(.+)$/,([,e,t],{theme:r})=>({[`grid-auto-${Z(e)}`]:Us(e,r,t)}),{autocomplete:["grid-auto-(rows|cols)-<num>"]}],[/^(?:grid-auto-flow|auto-flow|grid-flow)-(.+)$/,([,e])=>({"grid-auto-flow":c.bracket.cssvar(e)})],[/^(?:grid-auto-flow|auto-flow|grid-flow)-(row|col|dense|row-dense|col-dense)$/,([,e])=>({"grid-auto-flow":Z(e).replace("-"," ")}),{autocomplete:["(grid-auto-flow|auto-flow|grid-flow)-(row|col|dense|row-dense|col-dense)"]}],[/^grid-(rows|cols)-(.+)$/,([,e,t],{theme:r})=>({[`grid-template-${Z(e)}`]:r[`gridTemplate${Ir(e)}`]?.[t]??c.bracket.cssvar(t)})],[/^grid-(rows|cols)-minmax-([\w.-]+)$/,([,e,t])=>({[`grid-template-${Z(e)}`]:`repeat(auto-fill,minmax(${t},1fr))`})],[/^grid-(rows|cols)-(\d+)$/,([,e,t])=>({[`grid-template-${Z(e)}`]:`repeat(${t},minmax(0,1fr))`}),{autocomplete:["grid-(rows|cols)-<num>","grid-(rows|cols)-none"]}],[/^grid-area(s)?-(.+)$/,([,e,t])=>e!=null?{"grid-template-areas":c.cssvar(t)??t.split("-").map(r=>`"${c.bracket(r)}"`).join(" ")}:{"grid-area":c.bracket.cssvar(t)}],["grid-rows-none",{"grid-template-rows":"none"}],["grid-cols-none",{"grid-template-columns":"none"}]];var zt=["auto","hidden","clip","visible","scroll","overlay",...w],jt=[[/^(?:overflow|of)-(.+)$/,([,e])=>zt.includes(e)?{overflow:e}:void 0,{autocomplete:[`(overflow|of)-(${zt.join("|")})`,`(overflow|of)-(x|y)-(${zt.join("|")})`]}],[/^(?:overflow|of)-([xy])-(.+)$/,([,e,t])=>zt.includes(t)?{[`overflow-${e}`]:t}:void 0]];var Ot=[[/^(?:position-|pos-)?(relative|absolute|fixed|sticky)$/,([,e])=>({position:e}),{autocomplete:["(position|pos)-<position>","(position|pos)-<globalKeyword>","<position>"]}],[/^(?:position-|pos-)([-\w]+)$/,([,e])=>w.includes(e)?{position:e}:void 0],[/^(?:position-|pos-)?(static)$/,([,e])=>({position:e})]],Me=[["justify-start",{"justify-content":"flex-start"}],["justify-end",{"justify-content":"flex-end"}],["justify-center",{"justify-content":"center"}],["justify-between",{"justify-content":"space-between"}],["justify-around",{"justify-content":"space-around"}],["justify-evenly",{"justify-content":"space-evenly"}],["justify-stretch",{"justify-content":"stretch"}],["justify-left",{"justify-content":"left"}],["justify-right",{"justify-content":"right"}],...b("justify","justify-content"),["justify-items-start",{"justify-items":"start"}],["justify-items-end",{"justify-items":"end"}],["justify-items-center",{"justify-items":"center"}],["justify-items-stretch",{"justify-items":"stretch"}],...b("justify-items"),["justify-self-auto",{"justify-self":"auto"}],["justify-self-start",{"justify-self":"start"}],["justify-self-end",{"justify-self":"end"}],["justify-self-center",{"justify-self":"center"}],["justify-self-stretch",{"justify-self":"stretch"}],...b("justify-self")],_t=[[/^order-(.+)$/,([,e])=>({order:c.bracket.cssvar.number(e)})],["order-first",{order:"-9999"}],["order-last",{order:"9999"}],["order-none",{order:"0"}]],Ue=[["content-center",{"align-content":"center"}],["content-start",{"align-content":"flex-start"}],["content-end",{"align-content":"flex-end"}],["content-between",{"align-content":"space-between"}],["content-around",{"align-content":"space-around"}],["content-evenly",{"align-content":"space-evenly"}],...b("content","align-content"),["items-start",{"align-items":"flex-start"}],["items-end",{"align-items":"flex-end"}],["items-center",{"align-items":"center"}],["items-baseline",{"align-items":"baseline"}],["items-stretch",{"align-items":"stretch"}],...b("items","align-items"),["self-auto",{"align-self":"auto"}],["self-start",{"align-self":"flex-start"}],["self-end",{"align-self":"flex-end"}],["self-center",{"align-self":"center"}],["self-stretch",{"align-self":"stretch"}],["self-baseline",{"align-self":"baseline"}],...b("self","align-self")],At=[["place-content-center",{"place-content":"center"}],["place-content-start",{"place-content":"start"}],["place-content-end",{"place-content":"end"}],["place-content-between",{"place-content":"space-between"}],["place-content-around",{"place-content":"space-around"}],["place-content-evenly",{"place-content":"space-evenly"}],["place-content-stretch",{"place-content":"stretch"}],...b("place-content"),["place-items-start",{"place-items":"start"}],["place-items-end",{"place-items":"end"}],["place-items-center",{"place-items":"center"}],["place-items-stretch",{"place-items":"stretch"}],...b("place-items"),["place-self-auto",{"place-self":"auto"}],["place-self-start",{"place-self":"start"}],["place-self-end",{"place-self":"end"}],["place-self-center",{"place-self":"center"}],["place-self-stretch",{"place-self":"stretch"}],...b("place-self")],Vt=[...Me,...Ue].flatMap(([e,t])=>[[`flex-${e}`,t],[`grid-${e}`,t]]);function Gr(e,{theme:t}){return t.spacing?.[e]??c.bracket.cssvar.global.auto.fraction.rem(e);}function Pe([,e,t],r){let n=Gr(t,r);if(n!=null&&e in _r)return _r[e].map(o=>[o.slice(1),n]);}var Pt=[[/^(?:position-|pos-)?inset-(.+)$/,([,e],t)=>({inset:Gr(e,t)}),{autocomplete:["(position|pos)-inset-<directions>-$spacing","(position|pos)-inset-(block|inline)-$spacing","(position|pos)-inset-(bs|be|is|ie)-$spacing","(position|pos)-(top|left|right|bottom)-$spacing"]}],[/^(?:position-|pos-)?(start|end)-(.+)$/,Pe],[/^(?:position-|pos-)?inset-([xy])-(.+)$/,Pe],[/^(?:position-|pos-)?inset-([rltbse])-(.+)$/,Pe],[/^(?:position-|pos-)?inset-(block|inline)-(.+)$/,Pe],[/^(?:position-|pos-)?inset-([bi][se])-(.+)$/,Pe],[/^(?:position-|pos-)?(top|left|right|bottom)-(.+)$/,([,e,t],r)=>({[e]:Gr(t,r)})]],Mt=[["float-left",{float:"left"}],["float-right",{float:"right"}],["float-none",{float:"none"}],...b("float"),["clear-left",{clear:"left"}],["clear-right",{clear:"right"}],["clear-both",{clear:"both"}],["clear-none",{clear:"none"}],...b("clear")],Ut=[[/^(?:position-|pos-)?z([\d.]+)$/,([,e])=>({"z-index":c.number(e)})],[/^(?:position-|pos-)?z-(.+)$/,([,e],{theme:t})=>({"z-index":t.zIndex?.[e]??c.bracket.cssvar.global.auto.number(e)}),{autocomplete:"z-<num>"}]],Lt=[["box-border",{"box-sizing":"border-box"}],["box-content",{"box-sizing":"content-box"}],...b("box","box-sizing")];var Ls=["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","copy","move","no-drop","not-allowed","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out"],Fs=["none","strict","content","size","inline-size","layout","style","paint"],T=" ",Ft=[["inline",{display:"inline"}],["block",{display:"block"}],["inline-block",{display:"inline-block"}],["contents",{display:"contents"}],["flow-root",{display:"flow-root"}],["list-item",{display:"list-item"}],["hidden",{display:"none"}],[/^display-(.+)$/,([,e])=>({display:c.bracket.cssvar.global(e)})]],Nt=[["visible",{visibility:"visible"}],["invisible",{visibility:"hidden"}],["backface-visible",{"backface-visibility":"visible"}],["backface-hidden",{"backface-visibility":"hidden"}],...b("backface","backface-visibility")],Wt=[[/^cursor-(.+)$/,([,e])=>({cursor:c.bracket.cssvar.global(e)})],...Ls.map(e=>[`cursor-${e}`,{cursor:e}])],Dt=[[/^contain-(.*)$/,([,e])=>c.bracket(e)!=null?{contain:c.bracket(e).split(" ").map(t=>c.cssvar.fraction(t)??t).join(" ")}:Fs.includes(e)?{contain:e}:void 0]],Bt=[["pointer-events-auto",{"pointer-events":"auto"}],["pointer-events-none",{"pointer-events":"none"}],...b("pointer-events")],It=[["resize-x",{resize:"horizontal"}],["resize-y",{resize:"vertical"}],["resize",{resize:"both"}],["resize-none",{resize:"none"}],...b("resize")],Gt=[["select-auto",{"-webkit-user-select":"auto","user-select":"auto"}],["select-all",{"-webkit-user-select":"all","user-select":"all"}],["select-text",{"-webkit-user-select":"text","user-select":"text"}],["select-none",{"-webkit-user-select":"none","user-select":"none"}],...b("select","user-select")],Ht=[[/^(?:whitespace-|ws-)([-\w]+)$/,([,e])=>["normal","nowrap","pre","pre-line","pre-wrap","break-spaces",...w].includes(e)?{"white-space":e}:void 0,{autocomplete:"(whitespace|ws)-(normal|nowrap|pre|pre-line|pre-wrap|break-spaces)"}]],Kt=[[/^intrinsic-size-(.+)$/,([,e])=>({"contain-intrinsic-size":c.bracket.cssvar.global.fraction.rem(e)}),{autocomplete:"intrinsic-size-<num>"}],["content-visibility-visible",{"content-visibility":"visible"}],["content-visibility-hidden",{"content-visibility":"hidden"}],["content-visibility-auto",{"content-visibility":"auto"}],...b("content-visibility")],qt=[[/^content-(.+)$/,([,e])=>({content:c.bracket.cssvar(e)})],["content-empty",{content:"\"\""}],["content-none",{content:"none"}]],Yt=[["break-normal",{"overflow-wrap":"normal","word-break":"normal"}],["break-words",{"overflow-wrap":"break-word"}],["break-all",{"word-break":"break-all"}],["break-keep",{"word-break":"keep-all"}],["break-anywhere",{"overflow-wrap":"anywhere"}]],Xt=[["text-wrap",{"text-wrap":"wrap"}],["text-nowrap",{"text-wrap":"nowrap"}],["text-balance",{"text-wrap":"balance"}]],Zt=[["truncate",{overflow:"hidden","text-overflow":"ellipsis","white-space":"nowrap"}],["text-truncate",{overflow:"hidden","text-overflow":"ellipsis","white-space":"nowrap"}],["text-ellipsis",{"text-overflow":"ellipsis"}],["text-clip",{"text-overflow":"clip"}]],Jt=[["case-upper",{"text-transform":"uppercase"}],["case-lower",{"text-transform":"lowercase"}],["case-capital",{"text-transform":"capitalize"}],["case-normal",{"text-transform":"none"}],...b("case","text-transform")],Qt=[["italic",{"font-style":"italic"}],["not-italic",{"font-style":"normal"}],["font-italic",{"font-style":"italic"}],["font-not-italic",{"font-style":"normal"}],["oblique",{"font-style":"oblique"}],["not-oblique",{"font-style":"normal"}],["font-oblique",{"font-style":"oblique"}],["font-not-oblique",{"font-style":"normal"}]],er=[["antialiased",{"-webkit-font-smoothing":"antialiased","-moz-osx-font-smoothing":"grayscale"}],["subpixel-antialiased",{"-webkit-font-smoothing":"auto","-moz-osx-font-smoothing":"auto"}]];var tr={"--un-ring-inset":T,"--un-ring-offset-width":"0px","--un-ring-offset-color":"#fff","--un-ring-width":"0px","--un-ring-color":"rgb(147 197 253 / 0.5)","--un-shadow":"0 0 rgb(0 0 0 / 0)"},rr=[[/^ring(?:-(.+))?$/,([,e],{theme:t})=>{let r=t.ringWidth?.[e||"DEFAULT"]??c.px(e||"1");if(r)return{"--un-ring-width":r,"--un-ring-offset-shadow":"var(--un-ring-inset) 0 0 0 var(--un-ring-offset-width) var(--un-ring-offset-color)","--un-ring-shadow":"var(--un-ring-inset) 0 0 0 calc(var(--un-ring-width) + var(--un-ring-offset-width)) var(--un-ring-color)","box-shadow":"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)"};},{autocomplete:"ring-$ringWidth"}],[/^ring-(?:width-|size-)(.+)$/,([,e],{theme:t})=>({"--un-ring-width":t.lineWidth?.[e]??c.bracket.cssvar.px(e)}),{autocomplete:"ring-(width|size)-$lineWidth"}],["ring-offset",{"--un-ring-offset-width":"1px"}],[/^ring-offset-(?:width-|size-)?(.+)$/,([,e],{theme:t})=>({"--un-ring-offset-width":t.lineWidth?.[e]??c.bracket.cssvar.px(e)}),{autocomplete:"ring-offset-(width|size)-$lineWidth"}],[/^ring-(.+)$/,E("--un-ring-color","ring"),{autocomplete:"ring-$colors"}],[/^ring-op(?:acity)?-?(.+)$/,([,e])=>({"--un-ring-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"ring-(op|opacity)-<percent>"}],[/^ring-offset-(.+)$/,E("--un-ring-offset-color","ring-offset"),{autocomplete:"ring-offset-$colors"}],[/^ring-offset-op(?:acity)?-?(.+)$/,([,e])=>({"--un-ring-offset-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"ring-offset-(op|opacity)-<percent>"}],["ring-inset",{"--un-ring-inset":"inset"}]];var nr={"--un-ring-offset-shadow":"0 0 rgb(0 0 0 / 0)","--un-ring-shadow":"0 0 rgb(0 0 0 / 0)","--un-shadow-inset":T,"--un-shadow":"0 0 rgb(0 0 0 / 0)"},or=[[/^shadow(?:-(.+))?$/,(e,t)=>{let[,r]=e,{theme:n}=t,o=n.boxShadow?.[r||"DEFAULT"],i=r?c.bracket.cssvar(r):void 0;return(o!=null||i!=null)&&!we(i,n)?{"--un-shadow":ve(o||i,"--un-shadow-color").join(","),"box-shadow":"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)"}:E("--un-shadow-color","shadow")(e,t);},{autocomplete:["shadow-$colors","shadow-$boxShadow"]}],[/^shadow-op(?:acity)?-?(.+)$/,([,e])=>({"--un-shadow-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"shadow-(op|opacity)-<percent>"}],["shadow-inset",{"--un-shadow-inset":"inset"}]];var Ns={h:"height",w:"width",inline:"inline-size",block:"block-size"};function Le(e,t){return`${e||""}${Ns[t]}`;}function Kn(e,t,r,n){let o=Le(e,t).replace(/-(\w)/g,(a,s)=>s.toUpperCase()),i=r[o]?.[n];if(i!=null)return i;switch(n){case"fit":case"max":case"min":return`${n}-content`;}return c.bracket.cssvar.global.auto.fraction.rem(n);}var ir=[[/^(?:size-)?(min-|max-)?([wh])-?(.+)$/,([,e,t,r],{theme:n})=>({[Le(e,t)]:Kn(e,t,n,r)})],[/^(?:size-)?(min-|max-)?(block|inline)-(.+)$/,([,e,t,r],{theme:n})=>({[Le(e,t)]:Kn(e,t,n,r)}),{autocomplete:["(w|h)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize","(block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize","(max|min)-(w|h|block|inline)","(max|min)-(w|h|block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize","(w|h)-full","(max|min)-(w|h)-full"]}],[/^(?:size-)?(min-|max-)?(h)-screen-(.+)$/,([,e,t,r],n)=>({[Le(e,t)]:qn(n,r,"verticalBreakpoints")})],[/^(?:size-)?(min-|max-)?(w)-screen-(.+)$/,([,e,t,r],n)=>({[Le(e,t)]:qn(n,r)}),{autocomplete:["(w|h)-screen","(min|max)-(w|h)-screen","h-screen-$verticalBreakpoints","(min|max)-h-screen-$verticalBreakpoints","w-screen-$breakpoints","(min|max)-w-screen-$breakpoints"]}]];function qn(e,t,r="breakpoints"){let n=se(e,r);if(n)return n.find(o=>o.point===t)?.size;}function Ws(e){if(/^\d+\/\d+$/.test(e))return e;switch(e){case"square":return"1/1";case"video":return"16/9";}return c.bracket.cssvar.global.auto.number(e);}var ar=[[/^(?:size-)?aspect-(?:ratio-)?(.+)$/,([,e])=>({"aspect-ratio":Ws(e)}),{autocomplete:["aspect-(square|video|ratio)","aspect-ratio-(square|video)"]}]];var sr=[[/^pa?()-?(-?.+)$/,O("padding"),{autocomplete:["(m|p)<num>","(m|p)-<num>"]}],[/^p-?xy()()$/,O("padding"),{autocomplete:"(m|p)-(xy)"}],[/^p-?([xy])(?:-?(-?.+))?$/,O("padding")],[/^p-?([rltbse])(?:-?(-?.+))?$/,O("padding"),{autocomplete:"(m|p)<directions>-<num>"}],[/^p-(block|inline)(?:-(-?.+))?$/,O("padding"),{autocomplete:"(m|p)-(block|inline)-<num>"}],[/^p-?([bi][se])(?:-?(-?.+))?$/,O("padding"),{autocomplete:"(m|p)-(bs|be|is|ie)-<num>"}]],cr=[[/^ma?()-?(-?.+)$/,O("margin")],[/^m-?xy()()$/,O("margin")],[/^m-?([xy])(?:-?(-?.+))?$/,O("margin")],[/^m-?([rltbse])(?:-?(-?.+))?$/,O("margin")],[/^m-(block|inline)(?:-(-?.+))?$/,O("margin")],[/^m-?([bi][se])(?:-?(-?.+))?$/,O("margin")]];var lr=["translate","rotate","scale"],le=["translateX(var(--un-translate-x))","translateY(var(--un-translate-y))","translateZ(var(--un-translate-z))","rotate(var(--un-rotate))","rotateX(var(--un-rotate-x))","rotateY(var(--un-rotate-y))","rotateZ(var(--un-rotate-z))","skewX(var(--un-skew-x))","skewY(var(--un-skew-y))","scaleX(var(--un-scale-x))","scaleY(var(--un-scale-y))","scaleZ(var(--un-scale-z))"].join(" "),Ds=["translate3d(var(--un-translate-x), var(--un-translate-y), var(--un-translate-z))","rotate(var(--un-rotate))","rotateX(var(--un-rotate-x))","rotateY(var(--un-rotate-y))","rotateZ(var(--un-rotate-z))","skewX(var(--un-skew-x))","skewY(var(--un-skew-y))","scaleX(var(--un-scale-x))","scaleY(var(--un-scale-y))","scaleZ(var(--un-scale-z))"].join(" "),fr={"--un-rotate":0,"--un-rotate-x":0,"--un-rotate-y":0,"--un-rotate-z":0,"--un-scale-x":1,"--un-scale-y":1,"--un-scale-z":1,"--un-skew-x":0,"--un-skew-y":0,"--un-translate-x":0,"--un-translate-y":0,"--un-translate-z":0},ur=[[/^(?:transform-)?origin-(.+)$/,([,e])=>({"transform-origin":M[e]??c.bracket.cssvar(e)}),{autocomplete:[`transform-origin-(${Object.keys(M).join("|")})`,`origin-(${Object.keys(M).join("|")})`]}],[/^(?:transform-)?perspect(?:ive)?-(.+)$/,([,e])=>{let t=c.bracket.cssvar.px.numberWithUnit(e);if(t!=null)return{"-webkit-perspective":t,perspective:t};}],[/^(?:transform-)?perspect(?:ive)?-origin-(.+)$/,([,e])=>{let t=c.bracket.cssvar(e)??(e.length>=3?M[e]:void 0);if(t!=null)return{"-webkit-perspective-origin":t,"perspective-origin":t};}],[/^(?:transform-)?translate-()(.+)$/,Yn],[/^(?:transform-)?translate-([xyz])-(.+)$/,Yn],[/^(?:transform-)?rotate-()(.+)$/,Zn],[/^(?:transform-)?rotate-([xyz])-(.+)$/,Zn],[/^(?:transform-)?skew-()(.+)$/,Jn],[/^(?:transform-)?skew-([xy])-(.+)$/,Jn,{autocomplete:["transform-skew-(x|y)-<percent>","skew-(x|y)-<percent>"]}],[/^(?:transform-)?scale-()(.+)$/,Xn],[/^(?:transform-)?scale-([xyz])-(.+)$/,Xn,{autocomplete:[`transform-(${lr.join("|")})-<percent>`,`transform-(${lr.join("|")})-(x|y|z)-<percent>`,`(${lr.join("|")})-<percent>`,`(${lr.join("|")})-(x|y|z)-<percent>`]}],[/^(?:transform-)?preserve-3d$/,()=>({"transform-style":"preserve-3d"})],[/^(?:transform-)?preserve-flat$/,()=>({"transform-style":"flat"})],["transform",{transform:le}],["transform-cpu",{transform:le}],["transform-gpu",{transform:Ds}],["transform-none",{transform:"none"}],...b("transform")];function Yn([,e,t],{theme:r}){let n=r.spacing?.[t]??c.bracket.cssvar.fraction.rem(t);if(n!=null)return[...tt[e].map(o=>[`--un-translate${o}`,n]),["transform",le]];}function Xn([,e,t]){let r=c.bracket.cssvar.fraction.percent(t);if(r!=null)return[...tt[e].map(n=>[`--un-scale${n}`,r]),["transform",le]];}function Zn([,e="",t]){let r=c.bracket.cssvar.degree(t);if(r!=null)return e?{"--un-rotate":0,[`--un-rotate-${e}`]:r,transform:le}:{"--un-rotate-x":0,"--un-rotate-y":0,"--un-rotate-z":0,"--un-rotate":r,transform:le};}function Jn([,e,t]){let r=c.bracket.cssvar.degree(t);if(r!=null)return[...tt[e].map(n=>[`--un-skew${n}`,r]),["transform",le]];}var Bs={backface:"backface-visibility",break:"word-break",case:"text-transform",content:"align-content",fw:"font-weight",items:"align-items",justify:"justify-content",select:"user-select",self:"align-self",vertical:"vertical-align",visible:"visibility",whitespace:"white-space",ws:"white-space"},pr=[[/^(.+?)-(\$.+)$/,([,e,t])=>{let r=Bs[e];if(r)return{[r]:c.cssvar(t)};}]],mr=[[/^\[(.*)\]$/,([e,t],{theme:r})=>{if(!t.includes(":"))return;let[n,...o]=t.split(":"),i=o.join(":");if(!Gs(t)&&n.match(/^[a-z-]+$/)&&Is(i)){let a;if(Ln(i)&&(a=Fn(i,r)),(!a||a===i)&&(a=c.bracket(`[${i}]`)),a)return{[n]:a};}}]];function Is(e){let t=0;function r(n){for(;t<e.length;)if(t+=1,e[t]===n)return!0;return!1;}for(t=0;t<e.length;t++){let n=e[t];if("\"`'".includes(n)){if(!r(n))return!1;}else if(n==="("){if(!r(")"))return!1;}else if("[]{}:".includes(n))return!1;}return!0;}function Gs(e){if(!e.includes("://"))return!1;try{return new URL(e).host!=="";}catch{return!1;}}var dr=[[/^(where|\?)$/,(e,{constructCSS:t,generator:r})=>{if(r.userConfig.envMode==="dev")return`@keyframes __un_qm{0%{box-shadow:inset 4px 4px #ff1e90, inset -4px -4px #ff1e90}100%{box-shadow:inset 8px 8px #3399ff, inset -8px -8px #3399ff}}
${t({animation:"__un_qm 0.5s ease-in-out alternate infinite"})}`;}]];var hr=[[/^fill-(.+)$/,E("fill","fill"),{autocomplete:"fill-$colors"}],[/^fill-op(?:acity)?-?(.+)$/,([,e])=>({"--un-fill-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"fill-(op|opacity)-<percent>"}],["fill-none",{fill:"none"}],[/^stroke-(?:width-|size-)?(.+)$/,([,e],{theme:t})=>({"stroke-width":t.lineWidth?.[e]??c.bracket.cssvar.fraction.px.number(e)}),{autocomplete:["stroke-width-$lineWidth","stroke-size-$lineWidth"]}],[/^stroke-dash-(.+)$/,([,e])=>({"stroke-dasharray":c.bracket.cssvar.number(e)}),{autocomplete:"stroke-dash-<num>"}],[/^stroke-offset-(.+)$/,([,e],{theme:t})=>({"stroke-dashoffset":t.lineWidth?.[e]??c.bracket.cssvar.px.numberWithUnit(e)}),{autocomplete:"stroke-offset-$lineWidth"}],[/^stroke-(.+)$/,E("stroke","stroke"),{autocomplete:"stroke-$colors"}],[/^stroke-op(?:acity)?-?(.+)$/,([,e])=>({"--un-stroke-opacity":c.bracket.percent.cssvar(e)}),{autocomplete:"stroke-(op|opacity)-<percent>"}],["stroke-cap-square",{"stroke-linecap":"square"}],["stroke-cap-round",{"stroke-linecap":"round"}],["stroke-cap-auto",{"stroke-linecap":"butt"}],["stroke-join-arcs",{"stroke-linejoin":"arcs"}],["stroke-join-bevel",{"stroke-linejoin":"bevel"}],["stroke-join-clip",{"stroke-linejoin":"miter-clip"}],["stroke-join-round",{"stroke-linejoin":"round"}],["stroke-join-auto",{"stroke-linejoin":"miter"}],["stroke-none",{stroke:"none"}]];var Qn=[pr,mr,sr,cr,Ft,dt,gt,Bn,hr,mt,Kt,qt,kt,$t,St,Zt,xt,Ct,Rt,Jt,ct,ht,Qt,er,or,rr,wt,Et,Tt,Ot,ir,ar,Wt,Nt,Bt,It,st,Gt,Ht,Yt,jt,ft,ut,_t,Me,Ue,At,Vt,Pt,Mt,Ut,Lt,vt,ur,pt,bt,Dt,Xt,dr].flat(1);var Hr={inherit:"inherit",current:"currentColor",transparent:"transparent",black:"#000",white:"#fff",rose:{50:"#fff1f2",100:"#ffe4e6",200:"#fecdd3",300:"#fda4af",400:"#fb7185",500:"#f43f5e",600:"#e11d48",700:"#be123c",800:"#9f1239",900:"#881337",950:"#4c0519"},pink:{50:"#fdf2f8",100:"#fce7f3",200:"#fbcfe8",300:"#f9a8d4",400:"#f472b6",500:"#ec4899",600:"#db2777",700:"#be185d",800:"#9d174d",900:"#831843",950:"#500724"},fuchsia:{50:"#fdf4ff",100:"#fae8ff",200:"#f5d0fe",300:"#f0abfc",400:"#e879f9",500:"#d946ef",600:"#c026d3",700:"#a21caf",800:"#86198f",900:"#701a75",950:"#4a044e"},purple:{50:"#faf5ff",100:"#f3e8ff",200:"#e9d5ff",300:"#d8b4fe",400:"#c084fc",500:"#a855f7",600:"#9333ea",700:"#7e22ce",800:"#6b21a8",900:"#581c87",950:"#3b0764"},violet:{50:"#f5f3ff",100:"#ede9fe",200:"#ddd6fe",300:"#c4b5fd",400:"#a78bfa",500:"#8b5cf6",600:"#7c3aed",700:"#6d28d9",800:"#5b21b6",900:"#4c1d95",950:"#2e1065"},indigo:{50:"#eef2ff",100:"#e0e7ff",200:"#c7d2fe",300:"#a5b4fc",400:"#818cf8",500:"#6366f1",600:"#4f46e5",700:"#4338ca",800:"#3730a3",900:"#312e81",950:"#1e1b4b"},blue:{50:"#eff6ff",100:"#dbeafe",200:"#bfdbfe",300:"#93c5fd",400:"#60a5fa",500:"#3b82f6",600:"#2563eb",700:"#1d4ed8",800:"#1e40af",900:"#1e3a8a",950:"#172554"},sky:{50:"#f0f9ff",100:"#e0f2fe",200:"#bae6fd",300:"#7dd3fc",400:"#38bdf8",500:"#0ea5e9",600:"#0284c7",700:"#0369a1",800:"#075985",900:"#0c4a6e",950:"#082f49"},cyan:{50:"#ecfeff",100:"#cffafe",200:"#a5f3fc",300:"#67e8f9",400:"#22d3ee",500:"#06b6d4",600:"#0891b2",700:"#0e7490",800:"#155e75",900:"#164e63",950:"#083344"},teal:{50:"#f0fdfa",100:"#ccfbf1",200:"#99f6e4",300:"#5eead4",400:"#2dd4bf",500:"#14b8a6",600:"#0d9488",700:"#0f766e",800:"#115e59",900:"#134e4a",950:"#042f2e"},emerald:{50:"#ecfdf5",100:"#d1fae5",200:"#a7f3d0",300:"#6ee7b7",400:"#34d399",500:"#10b981",600:"#059669",700:"#047857",800:"#065f46",900:"#064e3b",950:"#022c22"},green:{50:"#f0fdf4",100:"#dcfce7",200:"#bbf7d0",300:"#86efac",400:"#4ade80",500:"#22c55e",600:"#16a34a",700:"#15803d",800:"#166534",900:"#14532d",950:"#052e16"},lime:{50:"#f7fee7",100:"#ecfccb",200:"#d9f99d",300:"#bef264",400:"#a3e635",500:"#84cc16",600:"#65a30d",700:"#4d7c0f",800:"#3f6212",900:"#365314",950:"#1a2e05"},yellow:{50:"#fefce8",100:"#fef9c3",200:"#fef08a",300:"#fde047",400:"#facc15",500:"#eab308",600:"#ca8a04",700:"#a16207",800:"#854d0e",900:"#713f12",950:"#422006"},amber:{50:"#fffbeb",100:"#fef3c7",200:"#fde68a",300:"#fcd34d",400:"#fbbf24",500:"#f59e0b",600:"#d97706",700:"#b45309",800:"#92400e",900:"#78350f",950:"#451a03"},orange:{50:"#fff7ed",100:"#ffedd5",200:"#fed7aa",300:"#fdba74",400:"#fb923c",500:"#f97316",600:"#ea580c",700:"#c2410c",800:"#9a3412",900:"#7c2d12",950:"#431407"},red:{50:"#fef2f2",100:"#fee2e2",200:"#fecaca",300:"#fca5a5",400:"#f87171",500:"#ef4444",600:"#dc2626",700:"#b91c1c",800:"#991b1b",900:"#7f1d1d",950:"#450a0a"},gray:{50:"#f9fafb",100:"#f3f4f6",200:"#e5e7eb",300:"#d1d5db",400:"#9ca3af",500:"#6b7280",600:"#4b5563",700:"#374151",800:"#1f2937",900:"#111827",950:"#030712"},slate:{50:"#f8fafc",100:"#f1f5f9",200:"#e2e8f0",300:"#cbd5e1",400:"#94a3b8",500:"#64748b",600:"#475569",700:"#334155",800:"#1e293b",900:"#0f172a",950:"#020617"},zinc:{50:"#fafafa",100:"#f4f4f5",200:"#e4e4e7",300:"#d4d4d8",400:"#a1a1aa",500:"#71717a",600:"#52525b",700:"#3f3f46",800:"#27272a",900:"#18181b",950:"#09090b"},neutral:{50:"#fafafa",100:"#f5f5f5",200:"#e5e5e5",300:"#d4d4d4",400:"#a3a3a3",500:"#737373",600:"#525252",700:"#404040",800:"#262626",900:"#171717",950:"#0a0a0a"},stone:{50:"#fafaf9",100:"#f5f5f4",200:"#e7e5e4",300:"#d6d3d1",400:"#a8a29e",500:"#78716c",600:"#57534e",700:"#44403c",800:"#292524",900:"#1c1917",950:"#0c0a09"},light:{50:"#fdfdfd",100:"#fcfcfc",200:"#fafafa",300:"#f8f9fa",400:"#f6f6f6",500:"#f2f2f2",600:"#f1f3f5",700:"#e9ecef",800:"#dee2e6",900:"#dde1e3",950:"#d8dcdf"},dark:{50:"#4a4a4a",100:"#3c3c3c",200:"#323232",300:"#2d2d2d",400:"#222222",500:"#1f1f1f",600:"#1c1c1e",700:"#1b1b1b",800:"#181818",900:"#0f0f0f",950:"#080808"},get lightblue(){return this.sky;},get lightBlue(){return this.sky;},get warmgray(){return this.stone;},get warmGray(){return this.stone;},get truegray(){return this.neutral;},get trueGray(){return this.neutral;},get coolgray(){return this.gray;},get coolGray(){return this.gray;},get bluegray(){return this.slate;},get blueGray(){return this.slate;}};Object.values(Hr).forEach(e=>{typeof e!="string"&&e!==void 0&&(e.DEFAULT=e.DEFAULT||e[400],Object.keys(e).forEach(t=>{let r=+t/100;r===Math.round(r)&&(e[r]=e[t]);}));});var eo={sans:["ui-sans-serif","system-ui","-apple-system","BlinkMacSystemFont","\"Segoe UI\"","Roboto","\"Helvetica Neue\"","Arial","\"Noto Sans\"","sans-serif","\"Apple Color Emoji\"","\"Segoe UI Emoji\"","\"Segoe UI Symbol\"","\"Noto Color Emoji\""].join(","),serif:["ui-serif","Georgia","Cambria","\"Times New Roman\"","Times","serif"].join(","),mono:["ui-monospace","SFMono-Regular","Menlo","Monaco","Consolas","\"Liberation Mono\"","\"Courier New\"","monospace"].join(",")},to={xs:["0.75rem","1rem"],sm:["0.875rem","1.25rem"],base:["1rem","1.5rem"],lg:["1.125rem","1.75rem"],xl:["1.25rem","1.75rem"],"2xl":["1.5rem","2rem"],"3xl":["1.875rem","2.25rem"],"4xl":["2.25rem","2.5rem"],"5xl":["3rem","1"],"6xl":["3.75rem","1"],"7xl":["4.5rem","1"],"8xl":["6rem","1"],"9xl":["8rem","1"]},ro={DEFAULT:"1.5rem",xs:"0.5rem",sm:"1rem",md:"1.5rem",lg:"2rem",xl:"2.5rem","2xl":"3rem","3xl":"4rem"},no={DEFAULT:"1.5rem",none:"0",sm:"thin",md:"medium",lg:"thick"},oo={DEFAULT:["0 0 1px rgb(0 0 0 / 0.2)","0 0 1px rgb(1 0 5 / 0.1)"],none:"0 0 rgb(0 0 0 / 0)",sm:"1px 1px 3px rgb(36 37 47 / 0.25)",md:["0 1px 2px rgb(30 29 39 / 0.19)","1px 2px 4px rgb(54 64 147 / 0.18)"],lg:["3px 3px 6px rgb(0 0 0 / 0.26)","0 0 5px rgb(15 3 86 / 0.22)"],xl:["1px 1px 3px rgb(0 0 0 / 0.29)","2px 4px 7px rgb(73 64 125 / 0.35)"]},io={none:"1",tight:"1.25",snug:"1.375",normal:"1.5",relaxed:"1.625",loose:"2"},Kr={tighter:"-0.05em",tight:"-0.025em",normal:"0em",wide:"0.025em",wider:"0.05em",widest:"0.1em"},ao={thin:"100",extralight:"200",light:"300",normal:"400",medium:"500",semibold:"600",bold:"700",extrabold:"800",black:"900"},so=Kr;var qr={sm:"640px",md:"768px",lg:"1024px",xl:"1280px","2xl":"1536px"},co={...qr},lo={DEFAULT:"1px",none:"0"},fo={DEFAULT:"1rem",none:"0",xs:"0.75rem",sm:"0.875rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem","5xl":"3rem","6xl":"3.75rem","7xl":"4.5rem","8xl":"6rem","9xl":"8rem"},uo={DEFAULT:"150ms",none:"0s",75:"75ms",100:"100ms",150:"150ms",200:"200ms",300:"300ms",500:"500ms",700:"700ms",1e3:"1000ms"},po={DEFAULT:"0.25rem",none:"0",sm:"0.125rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},mo={DEFAULT:["var(--un-shadow-inset) 0 1px 3px 0 rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 1px 2px -1px rgb(0 0 0 / 0.1)"],none:"0 0 rgb(0 0 0 / 0)",sm:"var(--un-shadow-inset) 0 1px 2px 0 rgb(0 0 0 / 0.05)",md:["var(--un-shadow-inset) 0 4px 6px -1px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 2px 4px -2px rgb(0 0 0 / 0.1)"],lg:["var(--un-shadow-inset) 0 10px 15px -3px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 4px 6px -4px rgb(0 0 0 / 0.1)"],xl:["var(--un-shadow-inset) 0 20px 25px -5px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 8px 10px -6px rgb(0 0 0 / 0.1)"],"2xl":"var(--un-shadow-inset) 0 25px 50px -12px rgb(0 0 0 / 0.25)",inner:"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)"},ho={DEFAULT:"cubic-bezier(0.4, 0, 0.2, 1)",linear:"linear",in:"cubic-bezier(0.4, 0, 1, 1)",out:"cubic-bezier(0, 0, 0.2, 1)","in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},go={DEFAULT:"1px",none:"0"},bo={auto:"auto"},xo={mouse:"(hover) and (pointer: fine)"};var yo={DEFAULT:"8px",0:"0",sm:"4px",md:"12px",lg:"16px",xl:"24px","2xl":"40px","3xl":"64px"},vo={DEFAULT:["0 1px 2px rgb(0 0 0 / 0.1)","0 1px 1px rgb(0 0 0 / 0.06)"],sm:"0 1px 1px rgb(0 0 0 / 0.05)",md:["0 4px 3px rgb(0 0 0 / 0.07)","0 2px 2px rgb(0 0 0 / 0.06)"],lg:["0 10px 8px rgb(0 0 0 / 0.04)","0 4px 3px rgb(0 0 0 / 0.1)"],xl:["0 20px 13px rgb(0 0 0 / 0.03)","0 8px 5px rgb(0 0 0 / 0.08)"],"2xl":"0 25px 25px rgb(0 0 0 / 0.15)",none:"0 0 rgb(0 0 0 / 0)"};var Fe={xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem",prose:"65ch"},Yr={auto:"auto",...Fe,screen:"100vw"},Ne={none:"none",...Fe,screen:"100vw"},Xr={auto:"auto",...Fe,screen:"100vh"},We={none:"none",...Fe,screen:"100vh"},wo=Object.fromEntries(Object.entries(Fe).map(([e,t])=>[e,`(min-width: ${t})`]));var ko={...fr,...nr,...tr};var $o={width:Yr,height:Xr,maxWidth:Ne,maxHeight:We,minWidth:Ne,minHeight:We,inlineSize:Yr,blockSize:Xr,maxInlineSize:Ne,maxBlockSize:We,minInlineSize:Ne,minBlockSize:We,colors:Hr,fontFamily:eo,fontSize:to,fontWeight:ao,breakpoints:qr,verticalBreakpoints:co,borderRadius:po,lineHeight:io,letterSpacing:Kr,wordSpacing:so,boxShadow:mo,textIndent:ro,textShadow:oo,textStrokeWidth:no,blur:yo,dropShadow:vo,easing:ho,lineWidth:lo,spacing:fo,duration:uo,ringWidth:go,preflightBase:ko,containers:wo,zIndex:bo,media:xo};var So={name:"aria",match(e,t){let r=F("aria-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??t.theme.aria?.[n]??"";if(i)return{matcher:o,selector:a=>`${a}[aria-${i}]`};}}};function Co(e){let t=e.match(/^-?[0-9]+\.?[0-9]*/)?.[0]||"",r=e.slice(t.length);if(r==="px"){let n=Number.parseFloat(t)-.1;return Number.isNaN(n)?e:`${n}${r}`;}return`calc(${e} - 0.1px)`;}function Ro(){let e={};return{name:"breakpoints",match(t,r){let n=(se(r)??[]).map(({point:o,size:i},a)=>[o,i,a]);for(let[o,i,a]of n){e[o]||(e[o]=new RegExp(`^((?:([al]t-|[<~]|max-))?${o}(?:${r.generator.config.separators.join("|")}))`));let s=t.match(e[o]);if(!s)continue;let[,l]=s,f=t.slice(l.length);if(f==="container")continue;let u=l.startsWith("lt-")||l.startsWith("<")||l.startsWith("max-"),p=l.startsWith("at-")||l.startsWith("~"),h=1e3;return u?(h-=a+1,{matcher:f,handle:(g,k)=>k({...g,parent:`${g.parent?`${g.parent} $$ `:""}@media (max-width: ${Co(i)})`,parentOrder:h})}):(h+=a+1,p&&a<n.length-1?{matcher:f,handle:(g,k)=>k({...g,parent:`${g.parent?`${g.parent} $$ `:""}@media (min-width: ${i}) and (max-width: ${Co(n[a+1][1])})`,parentOrder:h})}:{matcher:f,handle:(g,k)=>k({...g,parent:`${g.parent?`${g.parent} $$ `:""}@media (min-width: ${i})`,parentOrder:h})});}},multiPass:!0,autocomplete:"(at-|lt-|max-|)$breakpoints:"};}function De(e,t){return{name:`combinator:${e}`,match(r,n){if(!r.startsWith(e))return;let o=n.generator.config.separators,i=re(`${e}-`,r,o);if(!i){for(let s of o)if(r.startsWith(`${e}${s}`)){i=["",r.slice(e.length+s.length)];break;}if(!i)return;}let a=c.bracket(i[0])??"";return a===""&&(a="*"),{matcher:i[1],selector:s=>`${s}${t}${a}`};},multiPass:!0};}var To=[De("all"," "),De("children",">"),De("next","+"),De("sibling","+"),De("siblings","~")];var Eo={name:"@",match(e,t){if(e.startsWith("@container"))return;let r=F("@",e,t.generator.config.separators);if(r){let[n,o,i]=r,a=c.bracket(n),s;if(a){let l=c.numberWithUnit(a);l&&(s=`(min-width: ${l})`);}else s=t.theme.containers?.[n]??"";if(s)return Y("The container query variant is experimental and may not follow semver."),{matcher:o,handle:(l,f)=>f({...l,parent:`${l.parent?`${l.parent} $$ `:""}@container${i?` ${i} `:" "}${s}`})};}},multiPass:!0};function zo(e={}){if(e?.dark==="class"||typeof e.dark=="object"){let{dark:t=".dark",light:r=".light"}=typeof e.dark=="string"?{}:e.dark;return[I("dark",n=>({prefix:`${t} $$ ${n.prefix}`})),I("light",n=>({prefix:`${r} $$ ${n.prefix}`}))];}return[L("dark","@media (prefers-color-scheme: dark)"),L("light","@media (prefers-color-scheme: light)")];}var jo={name:"data",match(e,t){let r=F("data-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??t.theme.data?.[n]??"";if(i)return{matcher:o,selector:a=>`${a}[data-${i}]`};}}},Oo={name:"group-data",match(e,t){let r=F("group-data-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??t.theme.data?.[n]??"";if(i)return{matcher:`group-[[data-${i}]]:${o}`};}}};var _o=[I("rtl",e=>({prefix:`[dir="rtl"] $$ ${e.prefix}`})),I("ltr",e=>({prefix:`[dir="ltr"] $$ ${e.prefix}`}))];var Ao={name:"selector",match(e,t){let r=re("selector-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n);if(i)return{matcher:o,selector:()=>i};}}},Vo={name:"layer",match(e,t){let r=F("layer-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??n;if(i)return{matcher:o,handle:(a,s)=>s({...a,parent:`${a.parent?`${a.parent} $$ `:""}@layer ${i}`})};}}},Po={name:"uno-layer",match(e,t){let r=F("uno-layer-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??n;if(i)return{matcher:o,layer:i};}}},Mo={name:"scope",match(e,t){let r=re("scope-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n);if(i)return{matcher:o,selector:a=>`${i} $$ ${a}`};}}},Uo={name:"variables",match(e,t){if(!e.startsWith("["))return;let[r,n]=ge(e,"[","]")??[];if(!(r&&n))return;let o;for(let s of t.generator.config.separators)if(n.startsWith(s)){o=n.slice(s.length);break;}if(o==null)return;let i=c.bracket(r)??"",a=i.startsWith("@");if(a||i.includes("&"))return{matcher:o,handle(s,l){let f=a?{parent:`${s.parent?`${s.parent} $$ `:""}${i}`}:{selector:i.replace(/&/g,s.selector)};return l({...s,...f});}};},multiPass:!0};var Lo=/[0-9.]+(?:[a-z]+|%)?/,Hs=[/opacity|color|flex/];function Ks(e){let t=e.match(/^(calc|clamp|max|min)\s*(\(.*)/);if(t){let[r,n]=Vr(t[2],"(",")"," ")??[];if(r)return`calc(${t[1]}${r} * -1)${n?` ${n}`:""}`;}}var Fo={name:"negative",match(e){if(e.startsWith("-"))return{matcher:e.slice(1),body:t=>{if(t.find(n=>n[0]===Wn))return;let r=!1;return t.forEach(n=>{let o=n[1]?.toString();if(!o||o==="0"||Hs.some(a=>n[0].match(a)))return;let i=Ks(o);i?(n[1]=i,r=!0):Lo.test(o)&&(n[1]=o.replace(Lo,a=>`-${a}`),r=!0);}),r?t:[];}};}};function No(){let e;return{name:"important",match(t,r){e||(e=new RegExp(`^(important(?:${r.generator.config.separators.join("|")})|!)`));let n,o=t.match(e);if(o?n=t.slice(o[0].length):t.endsWith("!")&&(n=t.slice(0,-1)),n)return{matcher:n,body:i=>(i.forEach(a=>{a[1]&&(a[1]+=" !important");}),i)};}};}var Wo=L("print","@media print"),Do={name:"media",match(e,t){let r=F("media-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??"";if(i===""&&(i=t.theme.media?.[n]??""),i)return{matcher:o,handle:(a,s)=>s({...a,parent:`${a.parent?`${a.parent} $$ `:""}@media ${i}`})};}},multiPass:!0};var Bo={name:"supports",match(e,t){let r=F("supports-",e,t.generator.config.separators);if(r){let[n,o]=r,i=c.bracket(n)??"";if(i===""&&(i=t.theme.supports?.[n]??""),i)return{matcher:o,handle:(a,s)=>s({...a,parent:`${a.parent?`${a.parent} $$ `:""}@supports ${i}`})};}},multiPass:!0};var $e=Object.fromEntries([["first-letter","::first-letter"],["first-line","::first-line"],"any-link","link","visited","target",["open","[open]"],"default","checked","indeterminate","placeholder-shown","autofill","optional","required","valid","invalid","user-valid","user-invalid","in-range","out-of-range","read-only","read-write","empty","focus-within","hover","focus","focus-visible","active","enabled","disabled","root","empty",["even-of-type",":nth-of-type(even)"],["even",":nth-child(even)"],["odd-of-type",":nth-of-type(odd)"],["odd",":nth-child(odd)"],"first-of-type",["first",":first-child"],"last-of-type",["last",":last-child"],"only-child","only-of-type",["backdrop-element","::backdrop"],["placeholder","::placeholder"],["before","::before"],["after","::after"],["selection","::selection"],["marker","::marker"],["file","::file-selector-button"]].map(e=>Array.isArray(e)?e:[e,`:${e}`])),Ho=Object.keys($e),Se=Object.fromEntries([["backdrop","::backdrop"]].map(e=>Array.isArray(e)?e:[e,`:${e}`])),Ko=Object.keys(Se),qs=["not","is","where","has"],Zr=Object.entries($e).filter(([,e])=>!e.startsWith("::")).map(([e])=>e).sort((e,t)=>t.length-e.length).join("|"),Jr=Object.entries(Se).filter(([,e])=>!e.startsWith("::")).map(([e])=>e).sort((e,t)=>t.length-e.length).join("|"),fe=qs.join("|");function gr(e,t,r){let n=new RegExp(`^(${te(t)}:)(\\S+)${te(r)}\\1`),o,i,a,s,l=p=>{let h=re(`${e}-`,p,[]);if(!h)return;let[g,k]=h,R=c.bracket(g);if(R==null)return;let x=k.split(o,1)?.[0]??"",$=`${t}${J(x)}`;return[x,p.slice(p.length-(k.length-x.length-1)),R.includes("&")?R.replace(/&/g,$):`${$}${R}`];},f=p=>{let h=p.match(i)||p.match(a);if(!h)return;let[g,k,R]=h,x=h[3]??"",$=$e[R]||Se[R]||`:${R}`;return k&&($=`:${k}(${$})`),[x,p.slice(g.length),`${t}${J(x)}${$}`,R];},u=p=>{let h=p.match(s);if(!h)return;let[g,k,R]=h,x=h[3]??"",$=`:${k}(${R})`;return[x,p.slice(g.length),`${t}${J(x)}${$}`];};return{name:`pseudo:${e}`,match(p,h){if(o&&i&&a||(o=new RegExp(`(?:${h.generator.config.separators.join("|")})`),i=new RegExp(`^${e}-(?:(?:(${fe})-)?(${Zr}))(?:(/\\w+))?(?:${h.generator.config.separators.join("|")})`),a=new RegExp(`^${e}-(?:(?:(${fe})-)?(${Jr}))(?:(/\\w+))?(?:${h.generator.config.separators.filter(S=>S!=="-").join("|")})`),s=new RegExp(`^${e}-(?:(${fe})-)?\\[(.+)\\](?:(/\\w+))?(?:${h.generator.config.separators.filter(S=>S!=="-").join("|")})`)),!p.startsWith(e))return;let g=l(p)||f(p)||u(p);if(!g)return;let[k,R,x,$=""]=g;return k!==""&&Y("The labeled variant is experimental and may not follow semver."),{matcher:R,handle:(S,z)=>z({...S,prefix:`${x}${r}${S.prefix}`.replace(n,"$1$2:"),sort:Ho.indexOf($)??Ko.indexOf($)})};},multiPass:!0};}var Ys=["::-webkit-resizer","::-webkit-scrollbar","::-webkit-scrollbar-button","::-webkit-scrollbar-corner","::-webkit-scrollbar-thumb","::-webkit-scrollbar-track","::-webkit-scrollbar-track-piece","::file-selector-button"],Io=Object.entries($e).map(([e])=>e).sort((e,t)=>t.length-e.length).join("|"),Go=Object.entries(Se).map(([e])=>e).sort((e,t)=>t.length-e.length).join("|");function qo(){let e,t;return{name:"pseudo",match(r,n){e&&e||(e=new RegExp(`^(${Io})(?:${n.generator.config.separators.join("|")})`),t=new RegExp(`^(${Go})(?:${n.generator.config.separators.filter(i=>i!=="-").join("|")})`));let o=r.match(e)||r.match(t);if(o){let i=$e[o[1]]||Se[o[1]]||`:${o[1]}`,a=Ho.indexOf(o[1]);return a===-1&&(a=Ko.indexOf(o[1])),a===-1&&(a=void 0),{matcher:r.slice(o[0].length),handle:(s,l)=>{let f=i.startsWith("::")&&!Ys.includes(i)?{pseudo:`${s.pseudo}${i}`}:{selector:`${s.selector}${i}`};return l({...s,...f,sort:a,noMerge:!0});}};}},multiPass:!0,autocomplete:`(${Io}|${Go}):`};}function Yo(){let e,t,r;return{match(n,o){e&&t||(e=new RegExp(`^(${fe})-(${Zr})(?:${o.generator.config.separators.join("|")})`),t=new RegExp(`^(${fe})-(${Jr})(?:${o.generator.config.separators.filter(a=>a!=="-").join("|")})`),r=new RegExp(`^(${fe})-(\\[.+\\])(?:${o.generator.config.separators.filter(a=>a!=="-").join("|")})`));let i=n.match(e)||n.match(t)||n.match(r);if(i){let a=i[1],l=ge(i[2],"[","]")?c.bracket(i[2]):$e[i[2]]||Se[i[2]]||`:${i[2]}`;return{matcher:n.slice(i[0].length),selector:f=>`${f}:${a}(${l})`};}},multiPass:!0,autocomplete:`(${fe})-(${Zr}|${Jr}):`};}function Xo(e={}){let t=!!e?.attributifyPseudo;return[gr("group",t?"[group=\"\"]":".group"," "),gr("peer",t?"[peer=\"\"]":".peer","~"),gr("parent",t?"[parent=\"\"]":".parent",">"),gr("previous",t?"[previous=\"\"]":".previous","+")];}var Xs=/(part-\[(.+)]:)(.+)/,Zo={match(e){let t=e.match(Xs);if(t){let r=`part(${t[2]})`;return{matcher:e.slice(t[1].length),selector:n=>`${n}::${r}`};}},multiPass:!0};function br(e){return[So,jo,Vo,Ao,Po,Fo,No(),Bo,Wo,Do,Ro(),...To,qo(),Yo(),...Xo(e),Zo,...zo(e),..._o,Mo,Eo,Uo,Oo];}var Jo={position:["relative","absolute","fixed","sticky","static"],globalKeyword:w};var Qo=(e={})=>(e.dark=e.dark??"class",e.attributifyPseudo=e.attributifyPseudo??!1,e.preflight=e.preflight??!0,e.variablePrefix=e.variablePrefix??"un-",{name:"@unocss/preset-mini",theme:$o,rules:Qn,variants:br(e),options:e,prefix:e.prefix,postprocess:Zs(e.variablePrefix),preflights:e.preflight?Js(zn,e.variablePrefix):[],extractorDefault:e.arbitraryVariants===!1?void 0:En,autocomplete:{shorthands:Jo}});function Zs(e){if(e!=="un-")return t=>{t.entries.forEach(r=>{r[0]=r[0].replace(/^--un-/,`--${e}`),typeof r[1]=="string"&&(r[1]=r[1].replace(/var\(--un-/g,`var(--${e}`));});};}function Js(e,t){return t!=="un-"?e.map(r=>({...r,getCSS:(()=>async n=>{let o=await r.getCSS(n);if(o)return o.replace(/--un-/g,`--${t}`);})()})):e;}var ei=[[/^(?:animate-)?keyframes-(.+)$/,([,e],{theme:t})=>{let r=t.animation?.keyframes?.[e];if(r)return[`@keyframes ${e}${r}`,{animation:e}];},{autocomplete:["animate-keyframes-$animation.keyframes","keyframes-$animation.keyframes"]}],[/^animate-(.+)$/,([,e],{theme:t})=>{let r=t.animation?.keyframes?.[e];if(r){let n=t.animation?.durations?.[e]??"1s",o=t.animation?.timingFns?.[e]??"linear",i=t.animation?.counts?.[e]??1,a=t.animation?.properties?.[e];return[`@keyframes ${e}${r}`,{animation:`${e} ${n} ${o} ${i}`,...a}];}return{animation:c.bracket.cssvar(e)};},{autocomplete:"animate-$animation.keyframes"}],[/^animate-name-(.+)/,([,e])=>({"animation-name":c.bracket.cssvar(e)??e})],[/^animate-duration-(.+)$/,([,e],{theme:t})=>({"animation-duration":t.duration?.[e||"DEFAULT"]??c.bracket.cssvar.time(e)}),{autocomplete:["animate-duration","animate-duration-$duration"]}],[/^animate-delay-(.+)$/,([,e],{theme:t})=>({"animation-delay":t.duration?.[e||"DEFAULT"]??c.bracket.cssvar.time(e)}),{autocomplete:["animate-delay","animate-delay-$duration"]}],[/^animate-ease(?:-(.+))?$/,([,e],{theme:t})=>({"animation-timing-function":t.easing?.[e||"DEFAULT"]??c.bracket.cssvar(e)}),{autocomplete:["animate-ease","animate-ease-$easing"]}],[/^animate-(fill-mode-|fill-|mode-)?(.+)$/,([,e,t])=>["none","forwards","backwards","both",e?w:[]].includes(t)?{"animation-fill-mode":t}:void 0,{autocomplete:["animate-(fill|mode|fill-mode)","animate-(fill|mode|fill-mode)-(none|forwards|backwards|both|inherit|initial|revert|revert-layer|unset)","animate-(none|forwards|backwards|both|inherit|initial|revert|revert-layer|unset)"]}],[/^animate-(direction-)?(.+)$/,([,e,t])=>["normal","reverse","alternate","alternate-reverse",e?w:[]].includes(t)?{"animation-direction":t}:void 0,{autocomplete:["animate-direction","animate-direction-(normal|reverse|alternate|alternate-reverse|inherit|initial|revert|revert-layer|unset)","animate-(normal|reverse|alternate|alternate-reverse|inherit|initial|revert|revert-layer|unset)"]}],[/^animate-(?:iteration-count-|iteration-|count-)(.+)$/,([,e])=>({"animation-iteration-count":c.bracket.cssvar(e)??e.replace(/\-/g,",")}),{autocomplete:["animate-(iteration|count|iteration-count)","animate-(iteration|count|iteration-count)-<num>"]}],[/^animate-(play-state-|play-|state-)?(.+)$/,([,e,t])=>["paused","running",e?w:[]].includes(t)?{"animation-play-state":t}:void 0,{autocomplete:["animate-(play|state|play-state)","animate-(play|state|play-state)-(paused|running|inherit|initial|revert|revert-layer|unset)","animate-(paused|running|inherit|initial|revert|revert-layer|unset)"]}],["animate-none",{animation:"none"}],...b("animate","animation")];function ti(e){return e?V(e,0):"rgb(255 255 255 / 0)";}function Qs(e,t,r,n){return t?n!=null?V(t,n):V(t,`var(--un-${e}-opacity, ${Q(t)})`):V(r,n);}function Qr(){return([,e,t],{theme:r})=>{let n=ye(t,r);if(!n)return;let{alpha:o,color:i,cssColor:a}=n;if(!i)return;let s=Qs(e,a,i,o);switch(e){case"from":return{"--un-gradient-from-position":"0%","--un-gradient-from":`${s} var(--un-gradient-from-position)`,"--un-gradient-to-position":"100%","--un-gradient-to":`${ti(a)} var(--un-gradient-to-position)`,"--un-gradient-stops":"var(--un-gradient-from), var(--un-gradient-to)"};case"via":return{"--un-gradient-via-position":"50%","--un-gradient-to":ti(a),"--un-gradient-stops":`var(--un-gradient-from), ${s} var(--un-gradient-via-position), var(--un-gradient-to)`};case"to":return{"--un-gradient-to-position":"100%","--un-gradient-to":`${s} var(--un-gradient-to-position)`};}};}function ec(){return([,e,t])=>({[`--un-gradient-${e}-position`]:`${Number(c.bracket.cssvar.percent(t))*100}%`});}var tc=/^\[url\(.+\)\]$/,rc=/^\[length:.+\]$/,nc=/^\[position:.+\]$/,ri=[[/^bg-(.+)$/,([,e])=>{if(tc.test(e))return{"--un-url":c.bracket(e),"background-image":"var(--un-url)"};if(rc.test(e)&&c.bracketOfLength(e)!=null)return{"background-size":c.bracketOfLength(e).split(" ").map(t=>c.fraction.auto.px.cssvar(t)??t).join(" ")};if(nc.test(e)&&c.bracketOfPosition(e)!=null)return{"background-position":c.bracketOfPosition(e).split(" ").map(t=>c.position.fraction.auto.px.cssvar(t)??t).join(" ")};}],[/^bg-gradient-(.+)$/,([,e])=>({"--un-gradient":c.bracket(e)}),{autocomplete:["bg-gradient","bg-gradient-(from|to|via)","bg-gradient-(from|to|via)-$colors","bg-gradient-(from|to|via)-(op|opacity)","bg-gradient-(from|to|via)-(op|opacity)-<percent>"]}],[/^(?:bg-gradient-)?stops-(\[.+\])$/,([,e])=>({"--un-gradient-stops":c.bracket(e)})],[/^(?:bg-gradient-)?(from)-(.+)$/,Qr()],[/^(?:bg-gradient-)?(via)-(.+)$/,Qr()],[/^(?:bg-gradient-)?(to)-(.+)$/,Qr()],[/^(?:bg-gradient-)?(from|via|to)-op(?:acity)?-?(.+)$/,([,e,t])=>({[`--un-${e}-opacity`]:c.bracket.percent(t)})],[/^(from|via|to)-([\d\.]+)%$/,ec()],[/^bg-gradient-((?:repeating-)?(?:linear|radial|conic))$/,([,e])=>({"background-image":`${e}-gradient(var(--un-gradient, var(--un-gradient-stops, rgb(255 255 255 / 0))))`}),{autocomplete:["bg-gradient-repeating","bg-gradient-(linear|radial|conic)","bg-gradient-repeating-(linear|radial|conic)"]}],[/^bg-gradient-to-([rltb]{1,2})$/,([,e])=>{if(e in M)return{"--un-gradient-shape":`to ${M[e]}`,"--un-gradient":"var(--un-gradient-shape), var(--un-gradient-stops)","background-image":"linear-gradient(var(--un-gradient))"};},{autocomplete:`bg-gradient-to-(${Object.keys(M).filter(e=>e.length<=2&&Array.from(e).every(t=>"rltb".includes(t))).join("|")})`}],[/^(?:bg-gradient-)?shape-(.+)$/,([,e])=>{let t=e in M?`to ${M[e]}`:c.bracket(e);if(t!=null)return{"--un-gradient-shape":t,"--un-gradient":"var(--un-gradient-shape), var(--un-gradient-stops)"};},{autocomplete:["bg-gradient-shape",`bg-gradient-shape-(${Object.keys(M).join("|")})`,`shape-(${Object.keys(M).join("|")})`]}],["bg-none",{"background-image":"none"}],["box-decoration-slice",{"box-decoration-break":"slice"}],["box-decoration-clone",{"box-decoration-break":"clone"}],...b("box-decoration","box-decoration-break"),["bg-auto",{"background-size":"auto"}],["bg-cover",{"background-size":"cover"}],["bg-contain",{"background-size":"contain"}],["bg-fixed",{"background-attachment":"fixed"}],["bg-local",{"background-attachment":"local"}],["bg-scroll",{"background-attachment":"scroll"}],["bg-clip-border",{"-webkit-background-clip":"border-box","background-clip":"border-box"}],["bg-clip-content",{"-webkit-background-clip":"content-box","background-clip":"content-box"}],["bg-clip-padding",{"-webkit-background-clip":"padding-box","background-clip":"padding-box"}],["bg-clip-text",{"-webkit-background-clip":"text","background-clip":"text"}],...w.map(e=>[`bg-clip-${e}`,{"-webkit-background-clip":e,"background-clip":e}]),[/^bg-([-\w]{3,})$/,([,e])=>({"background-position":M[e]})],["bg-repeat",{"background-repeat":"repeat"}],["bg-no-repeat",{"background-repeat":"no-repeat"}],["bg-repeat-x",{"background-repeat":"repeat-x"}],["bg-repeat-y",{"background-repeat":"repeat-y"}],["bg-repeat-round",{"background-repeat":"round"}],["bg-repeat-space",{"background-repeat":"space"}],...b("bg-repeat","background-repeat"),["bg-origin-border",{"background-origin":"border-box"}],["bg-origin-padding",{"background-origin":"padding-box"}],["bg-origin-content",{"background-origin":"content-box"}],...b("bg-origin","background-origin")];var en={disc:"disc",circle:"circle",square:"square",decimal:"decimal","zero-decimal":"decimal-leading-zero",greek:"lower-greek",roman:"lower-roman","upper-roman":"upper-roman",alpha:"lower-alpha","upper-alpha":"upper-alpha",latin:"lower-latin","upper-latin":"upper-latin"},ni=[[/^list-(.+?)(?:-(outside|inside))?$/,([,e,t])=>{let r=en[e];if(r)return t?{"list-style-position":t,"list-style-type":r}:{"list-style-type":r};},{autocomplete:[`list-(${Object.keys(en).join("|")})`,`list-(${Object.keys(en).join("|")})-(outside|inside)`]}],["list-outside",{"list-style-position":"outside"}],["list-inside",{"list-style-position":"inside"}],["list-none",{"list-style-type":"none"}],[/^list-image-(.+)$/,([,e])=>{if(/^\[url\(.+\)\]$/.test(e))return{"list-style-image":c.bracket(e)};}],["list-image-none",{"list-style-image":"none"}],...b("list","list-style-type")],oi=[[/^accent-(.+)$/,E("accent-color","accent"),{autocomplete:"accent-$colors"}],[/^accent-op(?:acity)?-?(.+)$/,([,e])=>({"--un-accent-opacity":c.bracket.percent(e)}),{autocomplete:["accent-(op|opacity)","accent-(op|opacity)-<percent>"]}]],ii=[[/^caret-(.+)$/,E("caret-color","caret"),{autocomplete:"caret-$colors"}],[/^caret-op(?:acity)?-?(.+)$/,([,e])=>({"--un-caret-opacity":c.bracket.percent(e)}),{autocomplete:["caret-(op|opacity)","caret-(op|opacity)-<percent>"]}]],ai=[["image-render-auto",{"image-rendering":"auto"}],["image-render-edge",{"image-rendering":"crisp-edges"}],["image-render-pixel",[["-ms-interpolation-mode","nearest-neighbor"],["image-rendering","-webkit-optimize-contrast"],["image-rendering","-moz-crisp-edges"],["image-rendering","-o-pixelated"],["image-rendering","pixelated"]]]],si=[["overscroll-auto",{"overscroll-behavior":"auto"}],["overscroll-contain",{"overscroll-behavior":"contain"}],["overscroll-none",{"overscroll-behavior":"none"}],...b("overscroll","overscroll-behavior"),["overscroll-x-auto",{"overscroll-behavior-x":"auto"}],["overscroll-x-contain",{"overscroll-behavior-x":"contain"}],["overscroll-x-none",{"overscroll-behavior-x":"none"}],...b("overscroll-x","overscroll-behavior-x"),["overscroll-y-auto",{"overscroll-behavior-y":"auto"}],["overscroll-y-contain",{"overscroll-behavior-y":"contain"}],["overscroll-y-none",{"overscroll-behavior-y":"none"}],...b("overscroll-y","overscroll-behavior-y")],ci=[["scroll-auto",{"scroll-behavior":"auto"}],["scroll-smooth",{"scroll-behavior":"smooth"}],...b("scroll","scroll-behavior")];var li=[[/^columns-(.+)$/,([,e])=>({columns:c.bracket.global.number.auto.numberWithUnit(e)}),{autocomplete:"columns-<num>"}],["break-before-auto",{"break-before":"auto"}],["break-before-avoid",{"break-before":"avoid"}],["break-before-all",{"break-before":"all"}],["break-before-avoid-page",{"break-before":"avoid-page"}],["break-before-page",{"break-before":"page"}],["break-before-left",{"break-before":"left"}],["break-before-right",{"break-before":"right"}],["break-before-column",{"break-before":"column"}],...b("break-before"),["break-inside-auto",{"break-inside":"auto"}],["break-inside-avoid",{"break-inside":"avoid"}],["break-inside-avoid-page",{"break-inside":"avoid-page"}],["break-inside-avoid-column",{"break-inside":"avoid-column"}],...b("break-inside"),["break-after-auto",{"break-after":"auto"}],["break-after-avoid",{"break-after":"avoid"}],["break-after-all",{"break-after":"all"}],["break-after-avoid-page",{"break-after":"avoid-page"}],["break-after-page",{"break-after":"page"}],["break-after-left",{"break-after":"left"}],["break-after-right",{"break-after":"right"}],["break-after-column",{"break-after":"column"}],...b("break-after")];var oc=/@media \(min-width: (.+)\)/,fi=[[/^__container$/,(e,t)=>{let{theme:r,variantHandlers:n}=t,o=r.container?.padding,i;j(o)?i=o:i=o?.DEFAULT;let a=r.container?.maxWidth,s;for(let f of n){let u=f.handle?.({},p=>p)?.parent;if(j(u)){let p=u.match(oc)?.[1];if(p){let g=(se(t)??[]).find(k=>k.size===p)?.point;a?g&&(s=a?.[g]):s=p,g&&!j(o)&&(i=o?.[g]??i);}}}let l={"max-width":s};return n.length||(l.width="100%"),r.container?.center&&(l["margin-left"]="auto",l["margin-right"]="auto"),o&&(l["padding-left"]=i,l["padding-right"]=i),l;},{internal:!0}]],ui=[[/^(?:(\w+)[:-])?container$/,([,e],t)=>{let r=(se(t)??[]).map(o=>o.point);if(e){if(!r.includes(e))return;r=r.slice(r.indexOf(e));}let n=r.map(o=>`${o}:__container`);return e||n.unshift("__container"),n;}]];var pi={"--un-blur":T,"--un-brightness":T,"--un-contrast":T,"--un-drop-shadow":T,"--un-grayscale":T,"--un-hue-rotate":T,"--un-invert":T,"--un-saturate":T,"--un-sepia":T},xr="var(--un-blur) var(--un-brightness) var(--un-contrast) var(--un-drop-shadow) var(--un-grayscale) var(--un-hue-rotate) var(--un-invert) var(--un-saturate) var(--un-sepia)",mi={"--un-backdrop-blur":T,"--un-backdrop-brightness":T,"--un-backdrop-contrast":T,"--un-backdrop-grayscale":T,"--un-backdrop-hue-rotate":T,"--un-backdrop-invert":T,"--un-backdrop-opacity":T,"--un-backdrop-saturate":T,"--un-backdrop-sepia":T},yr="var(--un-backdrop-blur) var(--un-backdrop-brightness) var(--un-backdrop-contrast) var(--un-backdrop-grayscale) var(--un-backdrop-hue-rotate) var(--un-backdrop-invert) var(--un-backdrop-opacity) var(--un-backdrop-saturate) var(--un-backdrop-sepia)";function tn(e){let t=c.bracket.cssvar(e||"");if(t!=null||(t=e?c.percent(e):"1",t!=null&&Number.parseFloat(t)<=1))return t;}function ee(e,t){return([,r,n],{theme:o})=>{let i=t(n,o)??(n==="none"?"0":"");if(i!=="")return r?{[`--un-${r}${e}`]:`${e}(${i})`,"-webkit-backdrop-filter":yr,"backdrop-filter":yr}:{[`--un-${e}`]:`${e}(${i})`,filter:xr};};}function ic([,e],{theme:t}){let r=t.dropShadow?.[e||"DEFAULT"];if(r!=null)return{"--un-drop-shadow":`drop-shadow(${ve(r,"--un-drop-shadow-color").join(") drop-shadow(")})`,filter:xr};if(r=c.bracket.cssvar(e),r!=null)return{"--un-drop-shadow":`drop-shadow(${r})`,filter:xr};}var di=[[/^(?:(backdrop-)|filter-)?blur(?:-(.+))?$/,ee("blur",(e,t)=>t.blur?.[e||"DEFAULT"]||c.bracket.cssvar.px(e)),{autocomplete:["(backdrop|filter)-blur-$blur","blur-$blur","filter-blur"]}],[/^(?:(backdrop-)|filter-)?brightness-(.+)$/,ee("brightness",e=>c.bracket.cssvar.percent(e)),{autocomplete:["(backdrop|filter)-brightness-<percent>","brightness-<percent>"]}],[/^(?:(backdrop-)|filter-)?contrast-(.+)$/,ee("contrast",e=>c.bracket.cssvar.percent(e)),{autocomplete:["(backdrop|filter)-contrast-<percent>","contrast-<percent>"]}],[/^(?:filter-)?drop-shadow(?:-(.+))?$/,ic,{autocomplete:["filter-drop","filter-drop-shadow","filter-drop-shadow-color","drop-shadow","drop-shadow-color","filter-drop-shadow-$dropShadow","drop-shadow-$dropShadow","filter-drop-shadow-color-$colors","drop-shadow-color-$colors","filter-drop-shadow-color-(op|opacity)","drop-shadow-color-(op|opacity)","filter-drop-shadow-color-(op|opacity)-<percent>","drop-shadow-color-(op|opacity)-<percent>"]}],[/^(?:filter-)?drop-shadow-color-(.+)$/,E("--un-drop-shadow-color","drop-shadow")],[/^(?:filter-)?drop-shadow-color-op(?:acity)?-?(.+)$/,([,e])=>({"--un-drop-shadow-opacity":c.bracket.percent(e)})],[/^(?:(backdrop-)|filter-)?grayscale(?:-(.+))?$/,ee("grayscale",tn),{autocomplete:["(backdrop|filter)-grayscale","(backdrop|filter)-grayscale-<percent>","grayscale-<percent>"]}],[/^(?:(backdrop-)|filter-)?hue-rotate-(.+)$/,ee("hue-rotate",e=>c.bracket.cssvar.degree(e))],[/^(?:(backdrop-)|filter-)?invert(?:-(.+))?$/,ee("invert",tn),{autocomplete:["(backdrop|filter)-invert","(backdrop|filter)-invert-<percent>","invert-<percent>"]}],[/^(backdrop-)op(?:acity)-(.+)$/,ee("opacity",e=>c.bracket.cssvar.percent(e)),{autocomplete:["backdrop-(op|opacity)","backdrop-(op|opacity)-<percent>"]}],[/^(?:(backdrop-)|filter-)?saturate-(.+)$/,ee("saturate",e=>c.bracket.cssvar.percent(e)),{autocomplete:["(backdrop|filter)-saturate","(backdrop|filter)-saturate-<percent>","saturate-<percent>"]}],[/^(?:(backdrop-)|filter-)?sepia(?:-(.+))?$/,ee("sepia",tn),{autocomplete:["(backdrop|filter)-sepia","(backdrop|filter)-sepia-<percent>","sepia-<percent>"]}],["filter",{filter:xr}],["backdrop-filter",{"-webkit-backdrop-filter":yr,"backdrop-filter":yr}],["filter-none",{filter:"none"}],["backdrop-filter-none",{"-webkit-backdrop-filter":"none","backdrop-filter":"none"}],...w.map(e=>[`filter-${e}`,{filter:e}]),...w.map(e=>[`backdrop-filter-${e}`,{"-webkit-backdrop-filter":e,"backdrop-filter":e}])];var gi=[[/^space-([xy])-(-?.+)$/,hi,{autocomplete:["space-(x|y|block|inline)","space-(x|y|block|inline)-reverse","space-(x|y|block|inline)-$spacing"]}],[/^space-([xy])-reverse$/,([,e])=>({[`--un-space-${e}-reverse`]:1})],[/^space-(block|inline)-(-?.+)$/,hi],[/^space-(block|inline)-reverse$/,([,e])=>({[`--un-space-${e}-reverse`]:1})]];function hi([,e,t],{theme:r}){let n=r.spacing?.[t||"DEFAULT"]??c.bracket.cssvar.auto.fraction.rem(t||"1");if(n!=null){n==="0"&&(n="0px");let o=U[e].map(i=>{let a=`margin${i}`,s=i.endsWith("right")||i.endsWith("bottom")?`calc(${n} * var(--un-space-${e}-reverse))`:`calc(${n} * calc(1 - var(--un-space-${e}-reverse)))`;return[a,s];});if(o)return[[`--un-space-${e}-reverse`,0],...o];}}var bi=[["uppercase",{"text-transform":"uppercase"}],["lowercase",{"text-transform":"lowercase"}],["capitalize",{"text-transform":"capitalize"}],["normal-case",{"text-transform":"none"}]],xi=[...["manual","auto","none",...w].map(e=>[`hyphens-${e}`,{"-webkit-hyphens":e,"-ms-hyphens":e,hyphens:e}])],yi=[["write-vertical-right",{"writing-mode":"vertical-rl"}],["write-vertical-left",{"writing-mode":"vertical-lr"}],["write-normal",{"writing-mode":"horizontal-tb"}],...b("write","writing-mode")],vi=[["write-orient-mixed",{"text-orientation":"mixed"}],["write-orient-sideways",{"text-orientation":"sideways"}],["write-orient-upright",{"text-orientation":"upright"}],...b("write-orient","text-orientation")],wi=[["sr-only",{position:"absolute",width:"1px",height:"1px",padding:"0",margin:"-1px",overflow:"hidden",clip:"rect(0,0,0,0)","white-space":"nowrap","border-width":0}],["not-sr-only",{position:"static",width:"auto",height:"auto",padding:"0",margin:"0",overflow:"visible",clip:"auto","white-space":"normal"}]],ki=[["isolate",{isolation:"isolate"}],["isolate-auto",{isolation:"auto"}],["isolation-auto",{isolation:"auto"}]],$i=[["object-cover",{"object-fit":"cover"}],["object-contain",{"object-fit":"contain"}],["object-fill",{"object-fit":"fill"}],["object-scale-down",{"object-fit":"scale-down"}],["object-none",{"object-fit":"none"}],[/^object-(.+)$/,([,e])=>{if(M[e])return{"object-position":M[e]};if(c.bracketOfPosition(e)!=null)return{"object-position":c.bracketOfPosition(e).split(" ").map(t=>c.position.fraction.auto.px.cssvar(t)??t).join(" ")};},{autocomplete:`object-(${Object.keys(M).join("|")})`}]],Si=[["bg-blend-multiply",{"background-blend-mode":"multiply"}],["bg-blend-screen",{"background-blend-mode":"screen"}],["bg-blend-overlay",{"background-blend-mode":"overlay"}],["bg-blend-darken",{"background-blend-mode":"darken"}],["bg-blend-lighten",{"background-blend-mode":"lighten"}],["bg-blend-color-dodge",{"background-blend-mode":"color-dodge"}],["bg-blend-color-burn",{"background-blend-mode":"color-burn"}],["bg-blend-hard-light",{"background-blend-mode":"hard-light"}],["bg-blend-soft-light",{"background-blend-mode":"soft-light"}],["bg-blend-difference",{"background-blend-mode":"difference"}],["bg-blend-exclusion",{"background-blend-mode":"exclusion"}],["bg-blend-hue",{"background-blend-mode":"hue"}],["bg-blend-saturation",{"background-blend-mode":"saturation"}],["bg-blend-color",{"background-blend-mode":"color"}],["bg-blend-luminosity",{"background-blend-mode":"luminosity"}],["bg-blend-normal",{"background-blend-mode":"normal"}],...b("bg-blend","background-blend")],Ci=[["mix-blend-multiply",{"mix-blend-mode":"multiply"}],["mix-blend-screen",{"mix-blend-mode":"screen"}],["mix-blend-overlay",{"mix-blend-mode":"overlay"}],["mix-blend-darken",{"mix-blend-mode":"darken"}],["mix-blend-lighten",{"mix-blend-mode":"lighten"}],["mix-blend-color-dodge",{"mix-blend-mode":"color-dodge"}],["mix-blend-color-burn",{"mix-blend-mode":"color-burn"}],["mix-blend-hard-light",{"mix-blend-mode":"hard-light"}],["mix-blend-soft-light",{"mix-blend-mode":"soft-light"}],["mix-blend-difference",{"mix-blend-mode":"difference"}],["mix-blend-exclusion",{"mix-blend-mode":"exclusion"}],["mix-blend-hue",{"mix-blend-mode":"hue"}],["mix-blend-saturation",{"mix-blend-mode":"saturation"}],["mix-blend-color",{"mix-blend-mode":"color"}],["mix-blend-luminosity",{"mix-blend-mode":"luminosity"}],["mix-blend-plus-lighter",{"mix-blend-mode":"plus-lighter"}],["mix-blend-normal",{"mix-blend-mode":"normal"}],...b("mix-blend")];var Ti={"--un-border-spacing-x":0,"--un-border-spacing-y":0},Ri="var(--un-border-spacing-x) var(--un-border-spacing-y)",Ei=[["inline-table",{display:"inline-table"}],["table",{display:"table"}],["table-caption",{display:"table-caption"}],["table-cell",{display:"table-cell"}],["table-column",{display:"table-column"}],["table-column-group",{display:"table-column-group"}],["table-footer-group",{display:"table-footer-group"}],["table-header-group",{display:"table-header-group"}],["table-row",{display:"table-row"}],["table-row-group",{display:"table-row-group"}],["border-collapse",{"border-collapse":"collapse"}],["border-separate",{"border-collapse":"separate"}],[/^border-spacing-(.+)$/,([,e],{theme:t})=>{let r=t.spacing?.[e]??c.bracket.cssvar.global.auto.fraction.rem(e);if(r!=null)return{"--un-border-spacing-x":r,"--un-border-spacing-y":r,"border-spacing":Ri};},{autocomplete:["border-spacing","border-spacing-$spacing"]}],[/^border-spacing-([xy])-(.+)$/,([,e,t],{theme:r})=>{let n=r.spacing?.[t]??c.bracket.cssvar.global.auto.fraction.rem(t);if(n!=null)return{[`--un-border-spacing-${e}`]:n,"border-spacing":Ri};},{autocomplete:["border-spacing-(x|y)","border-spacing-(x|y)-$spacing"]}],["caption-top",{"caption-side":"top"}],["caption-bottom",{"caption-side":"bottom"}],["table-auto",{"table-layout":"auto"}],["table-fixed",{"table-layout":"fixed"}],["table-empty-cells-visible",{"empty-cells":"show"}],["table-empty-cells-hidden",{"empty-cells":"hide"}]];var ac={"bg-blend":"background-blend-mode","bg-clip":"-webkit-background-clip","bg-gradient":"linear-gradient","bg-image":"background-image","bg-origin":"background-origin","bg-position":"background-position","bg-repeat":"background-repeat","bg-size":"background-size","mix-blend":"mix-blend-mode",object:"object-fit","object-position":"object-position",write:"writing-mode","write-orient":"text-orientation"},zi=[[/^(.+?)-(\$.+)$/,([,e,t])=>{let r=ac[e];if(r)return{[r]:c.cssvar(t)};}]];var ji=[[/^divide-?([xy])$/,vr,{autocomplete:["divide-(x|y|block|inline)","divide-(x|y|block|inline)-reverse","divide-(x|y|block|inline)-$lineWidth"]}],[/^divide-?([xy])-?(-?.+)$/,vr],[/^divide-?([xy])-reverse$/,([,e])=>({[`--un-divide-${e}-reverse`]:1})],[/^divide-(block|inline)$/,vr],[/^divide-(block|inline)-(-?.+)$/,vr],[/^divide-(block|inline)-reverse$/,([,e])=>({[`--un-divide-${e}-reverse`]:1})],[/^divide-(.+)$/,E("border-color","divide"),{autocomplete:"divide-$colors"}],[/^divide-op(?:acity)?-?(.+)$/,([,e])=>({"--un-divide-opacity":c.bracket.percent(e)}),{autocomplete:["divide-(op|opacity)","divide-(op|opacity)-<percent>"]}],...ce.map(e=>[`divide-${e}`,{"border-style":e}])];function vr([,e,t],{theme:r}){let n=r.lineWidth?.[t||"DEFAULT"]??c.bracket.cssvar.px(t||"1");if(n!=null){n==="0"&&(n="0px");let o=U[e].map(i=>{let a=`border${i}-width`,s=i.endsWith("right")||i.endsWith("bottom")?`calc(${n} * var(--un-divide-${e}-reverse))`:`calc(${n} * calc(1 - var(--un-divide-${e}-reverse)))`;return[a,s];});if(o)return[[`--un-divide-${e}-reverse`,0],...o];}}var Oi=[[/^line-clamp-(\d+)$/,([,e])=>({overflow:"hidden",display:"-webkit-box","-webkit-box-orient":"vertical","-webkit-line-clamp":e,"line-clamp":e}),{autocomplete:["line-clamp","line-clamp-<num>"]}],...["none",...w].map(e=>[`line-clamp-${e}`,{overflow:"visible",display:"block","-webkit-box-orient":"horizontal","-webkit-line-clamp":e,"line-clamp":e}])];var _i={"--un-ordinal":T,"--un-slashed-zero":T,"--un-numeric-figure":T,"--un-numeric-spacing":T,"--un-numeric-fraction":T};function ne(e){return{...e,"font-variant-numeric":"var(--un-ordinal) var(--un-slashed-zero) var(--un-numeric-figure) var(--un-numeric-spacing) var(--un-numeric-fraction)"};}var Ai=[[/^ordinal$/,()=>ne({"--un-ordinal":"ordinal"}),{autocomplete:"ordinal"}],[/^slashed-zero$/,()=>ne({"--un-slashed-zero":"slashed-zero"}),{autocomplete:"slashed-zero"}],[/^lining-nums$/,()=>ne({"--un-numeric-figure":"lining-nums"}),{autocomplete:"lining-nums"}],[/^oldstyle-nums$/,()=>ne({"--un-numeric-figure":"oldstyle-nums"}),{autocomplete:"oldstyle-nums"}],[/^proportional-nums$/,()=>ne({"--un-numeric-spacing":"proportional-nums"}),{autocomplete:"proportional-nums"}],[/^tabular-nums$/,()=>ne({"--un-numeric-spacing":"tabular-nums"}),{autocomplete:"tabular-nums"}],[/^diagonal-fractions$/,()=>ne({"--un-numeric-fraction":"diagonal-fractions"}),{autocomplete:"diagonal-fractions"}],[/^stacked-fractions$/,()=>ne({"--un-numeric-fraction":"stacked-fractions"}),{autocomplete:"stacked-fractions"}],["normal-nums",{"font-variant-numeric":"normal"}]];var Vi={"--un-pan-x":T,"--un-pan-y":T,"--un-pinch-zoom":T},rn="var(--un-pan-x) var(--un-pan-y) var(--un-pinch-zoom)",Pi=[[/^touch-pan-(x|left|right)$/,([,e])=>({"--un-pan-x":`pan-${e}`,"touch-action":rn}),{autocomplete:["touch-pan","touch-pan-(x|left|right|y|up|down)"]}],[/^touch-pan-(y|up|down)$/,([,e])=>({"--un-pan-y":`pan-${e}`,"touch-action":rn})],["touch-pinch-zoom",{"--un-pinch-zoom":"pinch-zoom","touch-action":rn}],["touch-auto",{"touch-action":"auto"}],["touch-manipulation",{"touch-action":"manipulation"}],["touch-none",{"touch-action":"none"}],...b("touch","touch-action")];var Mi={"--un-scroll-snap-strictness":"proximity"},Ui=[[/^snap-(x|y)$/,([,e])=>({"scroll-snap-type":`${e} var(--un-scroll-snap-strictness)`}),{autocomplete:"snap-(x|y|both)"}],[/^snap-both$/,()=>({"scroll-snap-type":"both var(--un-scroll-snap-strictness)"})],["snap-mandatory",{"--un-scroll-snap-strictness":"mandatory"}],["snap-proximity",{"--un-scroll-snap-strictness":"proximity"}],["snap-none",{"scroll-snap-type":"none"}],["snap-start",{"scroll-snap-align":"start"}],["snap-end",{"scroll-snap-align":"end"}],["snap-center",{"scroll-snap-align":"center"}],["snap-align-none",{"scroll-snap-align":"none"}],["snap-normal",{"scroll-snap-stop":"normal"}],["snap-always",{"scroll-snap-stop":"always"}],[/^scroll-ma?()-?(-?.+)$/,O("scroll-margin"),{autocomplete:["scroll-(m|p|ma|pa|block|inline)","scroll-(m|p|ma|pa|block|inline)-$spacing","scroll-(m|p|ma|pa|block|inline)-(x|y|r|l|t|b|bs|be|is|ie)","scroll-(m|p|ma|pa|block|inline)-(x|y|r|l|t|b|bs|be|is|ie)-$spacing"]}],[/^scroll-m-?([xy])-?(-?.+)$/,O("scroll-margin")],[/^scroll-m-?([rltb])-?(-?.+)$/,O("scroll-margin")],[/^scroll-m-(block|inline)-(-?.+)$/,O("scroll-margin")],[/^scroll-m-?([bi][se])-?(-?.+)$/,O("scroll-margin")],[/^scroll-pa?()-?(-?.+)$/,O("scroll-padding")],[/^scroll-p-?([xy])-?(-?.+)$/,O("scroll-padding")],[/^scroll-p-?([rltb])-?(-?.+)$/,O("scroll-padding")],[/^scroll-p-(block|inline)-(-?.+)$/,O("scroll-padding")],[/^scroll-p-?([bi][se])-?(-?.+)$/,O("scroll-padding")]];var Li=[[/^\$ placeholder-(.+)$/,E("color","placeholder"),{autocomplete:"placeholder-$colors"}],[/^\$ placeholder-op(?:acity)?-?(.+)$/,([,e])=>({"--un-placeholder-opacity":c.bracket.percent(e)}),{autocomplete:["placeholder-(op|opacity)","placeholder-(op|opacity)-<percent>"]}]];var Fi=[[/^view-transition-([\w_-]+)$/,([,e])=>({"view-transition-name":e})]];var Ni=[pr,zi,mr,fi,Dt,wi,Bt,Nt,Ot,Pt,Oi,ki,Ut,_t,Et,Mt,cr,Lt,Ft,ar,ir,wt,Ei,ur,ei,Wt,Pi,Gt,It,Ui,ni,ut,li,At,Ue,Me,Tt,Vt,gi,ji,jt,si,ci,Zt,Ht,Yt,mt,gt,ri,hr,$i,sr,ct,St,Xt,st,kt,Jt,bi,Qt,Ai,ht,xt,er,$t,Ct,Rt,xi,yi,vi,ii,oi,dt,Si,Ci,or,ft,rr,ai,di,vt,pt,Kt,qt,Li,bt,Fi,dr].flat(1);var Wi=[...ui];var nn={inherit:"inherit",current:"currentColor",transparent:"transparent",black:"#000",white:"#fff",rose:{50:"#fff1f2",100:"#ffe4e6",200:"#fecdd3",300:"#fda4af",400:"#fb7185",500:"#f43f5e",600:"#e11d48",700:"#be123c",800:"#9f1239",900:"#881337",950:"#4c0519"},pink:{50:"#fdf2f8",100:"#fce7f3",200:"#fbcfe8",300:"#f9a8d4",400:"#f472b6",500:"#ec4899",600:"#db2777",700:"#be185d",800:"#9d174d",900:"#831843",950:"#500724"},fuchsia:{50:"#fdf4ff",100:"#fae8ff",200:"#f5d0fe",300:"#f0abfc",400:"#e879f9",500:"#d946ef",600:"#c026d3",700:"#a21caf",800:"#86198f",900:"#701a75",950:"#4a044e"},purple:{50:"#faf5ff",100:"#f3e8ff",200:"#e9d5ff",300:"#d8b4fe",400:"#c084fc",500:"#a855f7",600:"#9333ea",700:"#7e22ce",800:"#6b21a8",900:"#581c87",950:"#3b0764"},violet:{50:"#f5f3ff",100:"#ede9fe",200:"#ddd6fe",300:"#c4b5fd",400:"#a78bfa",500:"#8b5cf6",600:"#7c3aed",700:"#6d28d9",800:"#5b21b6",900:"#4c1d95",950:"#2e1065"},indigo:{50:"#eef2ff",100:"#e0e7ff",200:"#c7d2fe",300:"#a5b4fc",400:"#818cf8",500:"#6366f1",600:"#4f46e5",700:"#4338ca",800:"#3730a3",900:"#312e81",950:"#1e1b4b"},blue:{50:"#eff6ff",100:"#dbeafe",200:"#bfdbfe",300:"#93c5fd",400:"#60a5fa",500:"#3b82f6",600:"#2563eb",700:"#1d4ed8",800:"#1e40af",900:"#1e3a8a",950:"#172554"},sky:{50:"#f0f9ff",100:"#e0f2fe",200:"#bae6fd",300:"#7dd3fc",400:"#38bdf8",500:"#0ea5e9",600:"#0284c7",700:"#0369a1",800:"#075985",900:"#0c4a6e",950:"#082f49"},cyan:{50:"#ecfeff",100:"#cffafe",200:"#a5f3fc",300:"#67e8f9",400:"#22d3ee",500:"#06b6d4",600:"#0891b2",700:"#0e7490",800:"#155e75",900:"#164e63",950:"#083344"},teal:{50:"#f0fdfa",100:"#ccfbf1",200:"#99f6e4",300:"#5eead4",400:"#2dd4bf",500:"#14b8a6",600:"#0d9488",700:"#0f766e",800:"#115e59",900:"#134e4a",950:"#042f2e"},emerald:{50:"#ecfdf5",100:"#d1fae5",200:"#a7f3d0",300:"#6ee7b7",400:"#34d399",500:"#10b981",600:"#059669",700:"#047857",800:"#065f46",900:"#064e3b",950:"#022c22"},green:{50:"#f0fdf4",100:"#dcfce7",200:"#bbf7d0",300:"#86efac",400:"#4ade80",500:"#22c55e",600:"#16a34a",700:"#15803d",800:"#166534",900:"#14532d",950:"#052e16"},lime:{50:"#f7fee7",100:"#ecfccb",200:"#d9f99d",300:"#bef264",400:"#a3e635",500:"#84cc16",600:"#65a30d",700:"#4d7c0f",800:"#3f6212",900:"#365314",950:"#1a2e05"},yellow:{50:"#fefce8",100:"#fef9c3",200:"#fef08a",300:"#fde047",400:"#facc15",500:"#eab308",600:"#ca8a04",700:"#a16207",800:"#854d0e",900:"#713f12",950:"#422006"},amber:{50:"#fffbeb",100:"#fef3c7",200:"#fde68a",300:"#fcd34d",400:"#fbbf24",500:"#f59e0b",600:"#d97706",700:"#b45309",800:"#92400e",900:"#78350f",950:"#451a03"},orange:{50:"#fff7ed",100:"#ffedd5",200:"#fed7aa",300:"#fdba74",400:"#fb923c",500:"#f97316",600:"#ea580c",700:"#c2410c",800:"#9a3412",900:"#7c2d12",950:"#431407"},red:{50:"#fef2f2",100:"#fee2e2",200:"#fecaca",300:"#fca5a5",400:"#f87171",500:"#ef4444",600:"#dc2626",700:"#b91c1c",800:"#991b1b",900:"#7f1d1d",950:"#450a0a"},gray:{50:"#f9fafb",100:"#f3f4f6",200:"#e5e7eb",300:"#d1d5db",400:"#9ca3af",500:"#6b7280",600:"#4b5563",700:"#374151",800:"#1f2937",900:"#111827",950:"#030712"},slate:{50:"#f8fafc",100:"#f1f5f9",200:"#e2e8f0",300:"#cbd5e1",400:"#94a3b8",500:"#64748b",600:"#475569",700:"#334155",800:"#1e293b",900:"#0f172a",950:"#020617"},zinc:{50:"#fafafa",100:"#f4f4f5",200:"#e4e4e7",300:"#d4d4d8",400:"#a1a1aa",500:"#71717a",600:"#52525b",700:"#3f3f46",800:"#27272a",900:"#18181b",950:"#09090b"},neutral:{50:"#fafafa",100:"#f5f5f5",200:"#e5e5e5",300:"#d4d4d4",400:"#a3a3a3",500:"#737373",600:"#525252",700:"#404040",800:"#262626",900:"#171717",950:"#0a0a0a"},stone:{50:"#fafaf9",100:"#f5f5f4",200:"#e7e5e4",300:"#d6d3d1",400:"#a8a29e",500:"#78716c",600:"#57534e",700:"#44403c",800:"#292524",900:"#1c1917",950:"#0c0a09"},light:{50:"#fdfdfd",100:"#fcfcfc",200:"#fafafa",300:"#f8f9fa",400:"#f6f6f6",500:"#f2f2f2",600:"#f1f3f5",700:"#e9ecef",800:"#dee2e6",900:"#dde1e3",950:"#d8dcdf"},dark:{50:"#4a4a4a",100:"#3c3c3c",200:"#323232",300:"#2d2d2d",400:"#222222",500:"#1f1f1f",600:"#1c1c1e",700:"#1b1b1b",800:"#181818",900:"#0f0f0f",950:"#080808"},get lightblue(){return this.sky;},get lightBlue(){return this.sky;},get warmgray(){return this.stone;},get warmGray(){return this.stone;},get truegray(){return this.neutral;},get trueGray(){return this.neutral;},get coolgray(){return this.gray;},get coolGray(){return this.gray;},get bluegray(){return this.slate;},get blueGray(){return this.slate;}};Object.values(nn).forEach(e=>{typeof e!="string"&&e!==void 0&&(e.DEFAULT=e.DEFAULT||e[400],Object.keys(e).forEach(t=>{let r=+t/100;r===Math.round(r)&&(e[r]=e[t]);}));});var sc={l:["-left"],r:["-right"],t:["-top"],b:["-bottom"],s:["-inline-start"],e:["-inline-end"],x:["-left","-right"],y:["-top","-bottom"],"":[""],bs:["-block-start"],be:["-block-end"],is:["-inline-start"],ie:["-inline-end"],block:["-block-start","-block-end"],inline:["-inline-start","-inline-end"]},Zm={...sc,s:["-inset-inline-start"],start:["-inset-inline-start"],e:["-inset-inline-end"],end:["-inset-inline-end"],bs:["-inset-block-start"],be:["-inset-block-end"],is:["-inset-inline-start"],ie:["-inset-inline-end"],block:["-inset-block-start","-inset-block-end"],inline:["-inset-inline-start","-inset-inline-end"]};var kr={x:["-x"],y:["-y"],z:["-z"],"":["-x","-y"]},Di=["top","top center","top left","top right","bottom","bottom center","bottom left","bottom right","left","left center","left top","left bottom","right","right center","right top","right bottom","center","center top","center bottom","center left","center right","center center"],Be=Object.assign({},...Di.map(e=>({[e.replace(/ /,"-")]:e})),...Di.map(e=>({[e.replace(/\b(\w)\w+/g,"$1").replace(/ /,"")]:e}))),on=["inherit","initial","revert","revert-layer","unset"];var an=/^(-?\d*(?:\.\d+)?)(px|pt|pc|%|r?(?:em|ex|lh|cap|ch|ic)|(?:[sld]?v|cq)(?:[whib]|min|max)|in|cm|mm|rpx)?$/i,Bi=/^(-?\d*(?:\.\d+)?)$/i,Ii=/^(px)$/i,cc=["color","border-color","background-color","flex-grow","flex","flex-shrink","caret-color","font","gap","opacity","visibility","z-index","font-weight","zoom","text-shadow","transform","box-shadow","background-position","left","right","top","bottom","object-position","max-height","min-height","max-width","min-width","height","width","border-width","margin","padding","outline-width","outline-offset","font-size","line-height","text-indent","vertical-align","border-spacing","letter-spacing","word-spacing","stroke","filter","backdrop-filter","fill","mask","mask-size","mask-border","clip-path","clip","border-radius"];function K(e){return e.toFixed(10).replace(/\.0+$/,"").replace(/(\.\d+?)0+$/,"$1");}function lc(e){let t=e.match(an);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(n&&!Number.isNaN(o))return`${K(o)}${n}`;}function fc(e){if(e==="auto"||e==="a")return"auto";}function uc(e){if(e.match(Ii))return`1${e}`;let t=e.match(an);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${K(o)}${n}`:`${K(o/4)}rem`;}function pc(e){if(e.match(Ii))return`1${e}`;let t=e.match(an);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${K(o)}${n}`:`${K(o)}px`;}function mc(e){if(!Bi.test(e))return;let t=Number.parseFloat(e);if(!Number.isNaN(t))return K(t);}function dc(e){if(e.endsWith("%")&&(e=e.slice(0,-1)),!Bi.test(e))return;let t=Number.parseFloat(e);if(!Number.isNaN(t))return`${K(t/100)}`;}function hc(e){if(e==="full")return"100%";let[t,r]=e.split("/"),n=Number.parseFloat(t)/Number.parseFloat(r);if(!Number.isNaN(n))return n===0?"0":`${K(n*100)}%`;}var gc=/^\[(color|length|position|quoted|string):/i;function $r(e,t){if(e&&e.startsWith("[")&&e.endsWith("]")){let r,n,o=e.match(gc);if(o?(t||(n=o[1]),r=e.slice(o[0].length,-1)):r=e.slice(1,-1),!r||r==="=\"\"")return;r.startsWith("--")&&(r=`var(${r})`);let i=0;for(let a of r)if(a==="[")i+=1;else if(a==="]"&&(i-=1,i<0))return;if(i)return;switch(n){case"string":return r.replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_");case"quoted":return r.replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_").replace(/(["\\])/g,"\\$1").replace(/^(.+)$/,"\"$1\"");}return r.replace(/(url\(.*?\))/g,a=>a.replace(/_/g,"\\_")).replace(/(^|[^\\])_/g,"$1 ").replace(/\\_/g,"_").replace(/(?:calc|clamp|max|min)\((.*)/g,a=>{let s=[];return a.replace(/var\((--.+?)[,)]/g,(l,f)=>(s.push(f),l.replace(f,"--un-calc"))).replace(/(-?\d*\.?\d(?!\b-\d.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g,"$1 $2 ").replace(/--un-calc/g,()=>s.shift());});}}function bc(e){return $r(e);}function xc(e){return $r(e,"color");}function yc(e){return $r(e,"length");}function vc(e){return $r(e,"position");}function wc(e){if(e.match(/^\$[^\s'"`;{}]/))return`var(--${J(e.slice(1))})`;}function kc(e){let t=e.match(/^(-?[0-9.]+)(s|ms)?$/i);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0&&!n?"0s":n?`${K(o)}${n}`:`${K(o)}ms`;}function $c(e){let t=e.match(/^(-?[0-9.]+)(deg|rad|grad|turn)?$/i);if(!t)return;let[,r,n]=t,o=Number.parseFloat(r);if(!Number.isNaN(o))return o===0?"0":n?`${K(o)}${n}`:`${K(o)}deg`;}function Sc(e){if(on.includes(e))return e;}function Cc(e){if(e.split(",").every(t=>cc.includes(t)))return e;}function Rc(e){if(["top","left","right","bottom","center"].includes(e))return e;}var Tc={__proto__:null,auto:fc,bracket:bc,bracketOfColor:xc,bracketOfLength:yc,bracketOfPosition:vc,cssvar:wc,degree:$c,fraction:hc,global:Sc,number:mc,numberWithUnit:lc,percent:dc,position:Rc,properties:Cc,px:pc,rem:uc,time:kc},Ec=rt(Tc),P=Ec;function wr(e,t){let r=e.colors,n=-1;for(let o of t){if(n+=1,r&&typeof r!="string"){let i=t.slice(n).join("-").replace(/(-[a-z])/g,a=>a.slice(1).toUpperCase());if(r[i])return r[i];if(r[o]){r=r[o];continue;}}return;}return r;}function zc(e,t){let r=e.split(/(?:\/|:)/);return r[0]===`[${t}`?[r.slice(0,2).join(":"),r[2]]:r;}function jc(e,t){let[r,n]=zc(e,"color"),o=r.replace(/([a-z])([0-9])/g,"$1-$2").split(/-/g),[i]=o;if(!i)return;let a,s=P.bracketOfColor(r),l=s||r;if(P.numberWithUnit(l))return;if(l.match(/^#[\da-fA-F]+/g)?a=l:l.match(/^hex-[\da-fA-F]+/g)?a=`#${l.slice(4)}`:r.startsWith("$")&&(a=P.cssvar(r)),a=a||s,!a){let u=wr(t,[r]);typeof u=="string"&&(a=u);}let f="DEFAULT";if(!a){let u,[p]=o.slice(-1);p.match(/^\d+$/)?(f=p,u=wr(t,o.slice(0,-1)),!u||typeof u=="string"?a=void 0:a=u[f]):(u=wr(t,o),!u&&o.length<=2&&([,f=f]=o,u=wr(t,[i])),typeof u=="string"?a=u:f&&u&&(a=u[f]));}return{opacity:n,name:i,no:f,color:a,cssColor:X(a),alpha:P.bracket.cssvar.percent(n??"")};}function sn(e,t,r){return([,n],{theme:o})=>{let i=jc(n,o);if(!i)return;let{alpha:a,color:s,cssColor:l}=i,f={};if(l?a!=null?f[e]=V(l,a):(f[`--un-${t}-opacity`]=Q(l),f[e]=V(l,`var(--un-${t}-opacity)`)):s&&(f[e]=V(s,a)),r?.(f)!==!1)return f;};}function oe(e,t){return on.map(r=>[`${e}-${r}`,{[t??e]:r}]);}var Oc=["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","copy","move","no-drop","not-allowed","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out"];var Yi=" ";var rd=[["visible",{visibility:"visible"}],["invisible",{visibility:"hidden"}],["backface-visible",{"backface-visibility":"visible"}],["backface-hidden",{"backface-visibility":"hidden"}],...oe("backface","backface-visibility")],nd=[[/^cursor-(.+)$/,([,e])=>({cursor:P.bracket.cssvar.global(e)})],...Oc.map(e=>[`cursor-${e}`,{cursor:e}])];var od=[["pointer-events-auto",{"pointer-events":"auto"}],["pointer-events-none",{"pointer-events":"none"}],...oe("pointer-events")],id=[["resize-x",{resize:"horizontal"}],["resize-y",{resize:"vertical"}],["resize",{resize:"both"}],["resize-none",{resize:"none"}],...oe("resize")],ad=[["select-auto",{"-webkit-user-select":"auto","user-select":"auto"}],["select-all",{"-webkit-user-select":"all","user-select":"all"}],["select-text",{"-webkit-user-select":"text","user-select":"text"}],["select-none",{"-webkit-user-select":"none","user-select":"none"}],...oe("select","user-select")];var sd=[[/^intrinsic-size-(.+)$/,([,e])=>({"contain-intrinsic-size":P.bracket.cssvar.global.fraction.rem(e)}),{autocomplete:"intrinsic-size-<num>"}],["content-visibility-visible",{"content-visibility":"visible"}],["content-visibility-hidden",{"content-visibility":"hidden"}],["content-visibility-auto",{"content-visibility":"auto"}],...oe("content-visibility")];var cd=[["case-upper",{"text-transform":"uppercase"}],["case-lower",{"text-transform":"lowercase"}],["case-capital",{"text-transform":"capitalize"}],["case-normal",{"text-transform":"none"}],...oe("case","text-transform")];var Xi={"--un-ring-inset":Yi,"--un-ring-offset-width":"0px","--un-ring-offset-color":"#fff","--un-ring-width":"0px","--un-ring-color":"rgb(147 197 253 / 0.5)","--un-shadow":"0 0 rgb(0 0 0 / 0)"},ld=[[/^ring(?:-(.+))?$/,([,e],{theme:t})=>{let r=t.ringWidth?.[e||"DEFAULT"]??P.px(e||"1");if(r)return{"--un-ring-width":r,"--un-ring-offset-shadow":"var(--un-ring-inset) 0 0 0 var(--un-ring-offset-width) var(--un-ring-offset-color)","--un-ring-shadow":"var(--un-ring-inset) 0 0 0 calc(var(--un-ring-width) + var(--un-ring-offset-width)) var(--un-ring-color)","box-shadow":"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)"};},{autocomplete:"ring-$ringWidth"}],[/^ring-(?:width-|size-)(.+)$/,([,e],{theme:t})=>({"--un-ring-width":t.lineWidth?.[e]??P.bracket.cssvar.px(e)}),{autocomplete:"ring-(width|size)-$lineWidth"}],["ring-offset",{"--un-ring-offset-width":"1px"}],[/^ring-offset-(?:width-|size-)?(.+)$/,([,e],{theme:t})=>({"--un-ring-offset-width":t.lineWidth?.[e]??P.bracket.cssvar.px(e)}),{autocomplete:"ring-offset-(width|size)-$lineWidth"}],[/^ring-(.+)$/,sn("--un-ring-color","ring"),{autocomplete:"ring-$colors"}],[/^ring-op(?:acity)?-?(.+)$/,([,e])=>({"--un-ring-opacity":P.bracket.percent.cssvar(e)}),{autocomplete:"ring-(op|opacity)-<percent>"}],[/^ring-offset-(.+)$/,sn("--un-ring-offset-color","ring-offset"),{autocomplete:"ring-offset-$colors"}],[/^ring-offset-op(?:acity)?-?(.+)$/,([,e])=>({"--un-ring-offset-opacity":P.bracket.percent.cssvar(e)}),{autocomplete:"ring-offset-(op|opacity)-<percent>"}],["ring-inset",{"--un-ring-inset":"inset"}]],Zi={"--un-ring-offset-shadow":"0 0 rgb(0 0 0 / 0)","--un-ring-shadow":"0 0 rgb(0 0 0 / 0)","--un-shadow-inset":Yi,"--un-shadow":"0 0 rgb(0 0 0 / 0)"};var Sr=["translate","rotate","scale"],ue=["translateX(var(--un-translate-x))","translateY(var(--un-translate-y))","translateZ(var(--un-translate-z))","rotate(var(--un-rotate))","rotateX(var(--un-rotate-x))","rotateY(var(--un-rotate-y))","rotateZ(var(--un-rotate-z))","skewX(var(--un-skew-x))","skewY(var(--un-skew-y))","scaleX(var(--un-scale-x))","scaleY(var(--un-scale-y))","scaleZ(var(--un-scale-z))"].join(" "),_c=["translate3d(var(--un-translate-x), var(--un-translate-y), var(--un-translate-z))","rotate(var(--un-rotate))","rotateX(var(--un-rotate-x))","rotateY(var(--un-rotate-y))","rotateZ(var(--un-rotate-z))","skewX(var(--un-skew-x))","skewY(var(--un-skew-y))","scaleX(var(--un-scale-x))","scaleY(var(--un-scale-y))","scaleZ(var(--un-scale-z))"].join(" "),Ji={"--un-rotate":0,"--un-rotate-x":0,"--un-rotate-y":0,"--un-rotate-z":0,"--un-scale-x":1,"--un-scale-y":1,"--un-scale-z":1,"--un-skew-x":0,"--un-skew-y":0,"--un-translate-x":0,"--un-translate-y":0,"--un-translate-z":0},fd=[[/^(?:transform-)?origin-(.+)$/,([,e])=>({"transform-origin":Be[e]??P.bracket.cssvar(e)}),{autocomplete:[`transform-origin-(${Object.keys(Be).join("|")})`,`origin-(${Object.keys(Be).join("|")})`]}],[/^(?:transform-)?perspect(?:ive)?-(.+)$/,([,e])=>{let t=P.bracket.cssvar.px.numberWithUnit(e);if(t!=null)return{"-webkit-perspective":t,perspective:t};}],[/^(?:transform-)?perspect(?:ive)?-origin-(.+)$/,([,e])=>{let t=P.bracket.cssvar(e)??(e.length>=3?Be[e]:void 0);if(t!=null)return{"-webkit-perspective-origin":t,"perspective-origin":t};}],[/^(?:transform-)?translate-()(.+)$/,Gi],[/^(?:transform-)?translate-([xyz])-(.+)$/,Gi],[/^(?:transform-)?rotate-()(.+)$/,Ki],[/^(?:transform-)?rotate-([xyz])-(.+)$/,Ki],[/^(?:transform-)?skew-()(.+)$/,qi],[/^(?:transform-)?skew-([xy])-(.+)$/,qi,{autocomplete:["transform-skew-(x|y)-<percent>","skew-(x|y)-<percent>"]}],[/^(?:transform-)?scale-()(.+)$/,Hi],[/^(?:transform-)?scale-([xyz])-(.+)$/,Hi,{autocomplete:[`transform-(${Sr.join("|")})-<percent>`,`transform-(${Sr.join("|")})-(x|y|z)-<percent>`,`(${Sr.join("|")})-<percent>`,`(${Sr.join("|")})-(x|y|z)-<percent>`]}],[/^(?:transform-)?preserve-3d$/,()=>({"transform-style":"preserve-3d"})],[/^(?:transform-)?preserve-flat$/,()=>({"transform-style":"flat"})],["transform",{transform:ue}],["transform-cpu",{transform:ue}],["transform-gpu",{transform:_c}],["transform-none",{transform:"none"}],...oe("transform")];function Gi([,e,t],{theme:r}){let n=r.spacing?.[t]??P.bracket.cssvar.fraction.rem(t);if(n!=null)return[...kr[e].map(o=>[`--un-translate${o}`,n]),["transform",ue]];}function Hi([,e,t]){let r=P.bracket.cssvar.fraction.percent(t);if(r!=null)return[...kr[e].map(n=>[`--un-scale${n}`,r]),["transform",ue]];}function Ki([,e="",t]){let r=P.bracket.cssvar.degree(t);if(r!=null)return e?{"--un-rotate":0,[`--un-rotate-${e}`]:r,transform:ue}:{"--un-rotate-x":0,"--un-rotate-y":0,"--un-rotate-z":0,"--un-rotate":r,transform:ue};}function qi([,e,t]){let r=P.bracket.cssvar.degree(t);if(r!=null)return[...kr[e].map(n=>[`--un-skew${n}`,r]),["transform",ue]];}var Ac={sans:["ui-sans-serif","system-ui","-apple-system","BlinkMacSystemFont","\"Segoe UI\"","Roboto","\"Helvetica Neue\"","Arial","\"Noto Sans\"","sans-serif","\"Apple Color Emoji\"","\"Segoe UI Emoji\"","\"Segoe UI Symbol\"","\"Noto Color Emoji\""].join(","),serif:["ui-serif","Georgia","Cambria","\"Times New Roman\"","Times","serif"].join(","),mono:["ui-monospace","SFMono-Regular","Menlo","Monaco","Consolas","\"Liberation Mono\"","\"Courier New\"","monospace"].join(",")},Vc={xs:["0.75rem","1rem"],sm:["0.875rem","1.25rem"],base:["1rem","1.5rem"],lg:["1.125rem","1.75rem"],xl:["1.25rem","1.75rem"],"2xl":["1.5rem","2rem"],"3xl":["1.875rem","2.25rem"],"4xl":["2.25rem","2.5rem"],"5xl":["3rem","1"],"6xl":["3.75rem","1"],"7xl":["4.5rem","1"],"8xl":["6rem","1"],"9xl":["8rem","1"]},Pc={DEFAULT:"1.5rem",xs:"0.5rem",sm:"1rem",md:"1.5rem",lg:"2rem",xl:"2.5rem","2xl":"3rem","3xl":"4rem"},Mc={DEFAULT:"1.5rem",none:"0",sm:"thin",md:"medium",lg:"thick"},Uc={DEFAULT:["0 0 1px rgb(0 0 0 / 0.2)","0 0 1px rgb(1 0 5 / 0.1)"],none:"0 0 rgb(0 0 0 / 0)",sm:"1px 1px 3px rgb(36 37 47 / 0.25)",md:["0 1px 2px rgb(30 29 39 / 0.19)","1px 2px 4px rgb(54 64 147 / 0.18)"],lg:["3px 3px 6px rgb(0 0 0 / 0.26)","0 0 5px rgb(15 3 86 / 0.22)"],xl:["1px 1px 3px rgb(0 0 0 / 0.29)","2px 4px 7px rgb(73 64 125 / 0.35)"]},Lc={none:"1",tight:"1.25",snug:"1.375",normal:"1.5",relaxed:"1.625",loose:"2"},ta={tighter:"-0.05em",tight:"-0.025em",normal:"0em",wide:"0.025em",wider:"0.05em",widest:"0.1em"},Fc={thin:"100",extralight:"200",light:"300",normal:"400",medium:"500",semibold:"600",bold:"700",extrabold:"800",black:"900"},Nc=ta,ra={sm:"640px",md:"768px",lg:"1024px",xl:"1280px","2xl":"1536px"},Wc={...ra},Dc={DEFAULT:"1px",none:"0"},Bc={DEFAULT:"1rem",none:"0",xs:"0.75rem",sm:"0.875rem",lg:"1.125rem",xl:"1.25rem","2xl":"1.5rem","3xl":"1.875rem","4xl":"2.25rem","5xl":"3rem","6xl":"3.75rem","7xl":"4.5rem","8xl":"6rem","9xl":"8rem"},Ic={DEFAULT:"150ms",none:"0s",75:"75ms",100:"100ms",150:"150ms",200:"200ms",300:"300ms",500:"500ms",700:"700ms",1e3:"1000ms"},Gc={DEFAULT:"0.25rem",none:"0",sm:"0.125rem",md:"0.375rem",lg:"0.5rem",xl:"0.75rem","2xl":"1rem","3xl":"1.5rem",full:"9999px"},Hc={DEFAULT:["var(--un-shadow-inset) 0 1px 3px 0 rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 1px 2px -1px rgb(0 0 0 / 0.1)"],none:"0 0 rgb(0 0 0 / 0)",sm:"var(--un-shadow-inset) 0 1px 2px 0 rgb(0 0 0 / 0.05)",md:["var(--un-shadow-inset) 0 4px 6px -1px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 2px 4px -2px rgb(0 0 0 / 0.1)"],lg:["var(--un-shadow-inset) 0 10px 15px -3px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 4px 6px -4px rgb(0 0 0 / 0.1)"],xl:["var(--un-shadow-inset) 0 20px 25px -5px rgb(0 0 0 / 0.1)","var(--un-shadow-inset) 0 8px 10px -6px rgb(0 0 0 / 0.1)"],"2xl":"var(--un-shadow-inset) 0 25px 50px -12px rgb(0 0 0 / 0.25)",inner:"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)"},Kc={DEFAULT:"cubic-bezier(0.4, 0, 0.2, 1)",linear:"linear",in:"cubic-bezier(0.4, 0, 1, 1)",out:"cubic-bezier(0, 0, 0.2, 1)","in-out":"cubic-bezier(0.4, 0, 0.2, 1)"},qc={DEFAULT:"1px",none:"0"},Yc={auto:"auto"},Xc={mouse:"(hover) and (pointer: fine)"},Zc={DEFAULT:"8px",0:"0",sm:"4px",md:"12px",lg:"16px",xl:"24px","2xl":"40px","3xl":"64px"},Jc={DEFAULT:["0 1px 2px rgb(0 0 0 / 0.1)","0 1px 1px rgb(0 0 0 / 0.06)"],sm:"0 1px 1px rgb(0 0 0 / 0.05)",md:["0 4px 3px rgb(0 0 0 / 0.07)","0 2px 2px rgb(0 0 0 / 0.06)"],lg:["0 10px 8px rgb(0 0 0 / 0.04)","0 4px 3px rgb(0 0 0 / 0.1)"],xl:["0 20px 13px rgb(0 0 0 / 0.03)","0 8px 5px rgb(0 0 0 / 0.08)"],"2xl":"0 25px 25px rgb(0 0 0 / 0.15)",none:"0 0 rgb(0 0 0 / 0)"},Ie={xs:"20rem",sm:"24rem",md:"28rem",lg:"32rem",xl:"36rem","2xl":"42rem","3xl":"48rem","4xl":"56rem","5xl":"64rem","6xl":"72rem","7xl":"80rem",prose:"65ch"},Qi={auto:"auto",...Ie,screen:"100vw"},Cr={none:"none",...Ie,screen:"100vw"},ea={auto:"auto",...Ie,screen:"100vh"},Rr={none:"none",...Ie,screen:"100vh"},Qc=Object.fromEntries(Object.entries(Ie).map(([e,t])=>[e,`(min-width: ${t})`])),el={...Ji,...Zi,...Xi},na={width:Qi,height:ea,maxWidth:Cr,maxHeight:Rr,minWidth:Cr,minHeight:Rr,inlineSize:Qi,blockSize:ea,maxInlineSize:Cr,maxBlockSize:Rr,minInlineSize:Cr,minBlockSize:Rr,colors:nn,fontFamily:Ac,fontSize:Vc,fontWeight:Fc,breakpoints:ra,verticalBreakpoints:Wc,borderRadius:Gc,lineHeight:Lc,letterSpacing:ta,wordSpacing:Nc,boxShadow:Hc,textIndent:Pc,textShadow:Uc,textStrokeWidth:Mc,blur:Zc,dropShadow:Jc,easing:Kc,lineWidth:Dc,spacing:Bc,duration:Ic,ringWidth:qc,preflightBase:el,containers:Qc,zIndex:Yc,media:Xc};var oa={...na,aria:{busy:"busy=\"true\"",checked:"checked=\"true\"",disabled:"disabled=\"true\"",expanded:"expanded=\"true\"",hidden:"hidden=\"true\"",pressed:"pressed=\"true\"",readonly:"readonly=\"true\"",required:"required=\"true\"",selected:"selected=\"true\""},animation:{keyframes:{pulse:"{0%, 100% {opacity:1} 50% {opacity:.5}}",bounce:"{0%, 100% {transform:translateY(-25%);animation-timing-function:cubic-bezier(0.8,0,1,1)} 50% {transform:translateY(0);animation-timing-function:cubic-bezier(0,0,0.2,1)}}",spin:"{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}",ping:"{0%{transform:scale(1);opacity:1}75%,100%{transform:scale(2);opacity:0}}","bounce-alt":"{from,20%,53%,80%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1);transform:translate3d(0,0,0)}40%,43%{animation-timing-function:cubic-bezier(0.755,0.05,0.855,0.06);transform:translate3d(0,-30px,0)}70%{animation-timing-function:cubic-bezier(0.755,0.05,0.855,0.06);transform:translate3d(0,-15px,0)}90%{transform:translate3d(0,-4px,0)}}",flash:"{from,50%,to{opacity:1}25%,75%{opacity:0}}","pulse-alt":"{from{transform:scale3d(1,1,1)}50%{transform:scale3d(1.05,1.05,1.05)}to{transform:scale3d(1,1,1)}}","rubber-band":"{from{transform:scale3d(1,1,1)}30%{transform:scale3d(1.25,0.75,1)}40%{transform:scale3d(0.75,1.25,1)}50%{transform:scale3d(1.15,0.85,1)}65%{transform:scale3d(0.95,1.05,1)}75%{transform:scale3d(1.05,0.95,1)}to{transform:scale3d(1,1,1)}}","shake-x":"{from,to{transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{transform:translate3d(-10px,0,0)}20%,40%,60%,80%{transform:translate3d(10px,0,0)}}","shake-y":"{from,to{transform:translate3d(0,0,0)}10%,30%,50%,70%,90%{transform:translate3d(0,-10px,0)}20%,40%,60%,80%{transform:translate3d(0,10px,0)}}","head-shake":"{0%{transform:translateX(0)}6.5%{transform:translateX(-6px) rotateY(-9deg)}18.5%{transform:translateX(5px) rotateY(7deg)}31.5%{transform:translateX(-3px) rotateY(-5deg)}43.5%{transform:translateX(2px) rotateY(3deg)}50%{transform:translateX(0)}}",swing:"{20%{transform:rotate3d(0,0,1,15deg)}40%{transform:rotate3d(0,0,1,-10deg)}60%{transform:rotate3d(0,0,1,5deg)}80%{transform:rotate3d(0,0,1,-5deg)}to{transform:rotate3d(0,0,1,0deg)}}",tada:"{from{transform:scale3d(1,1,1)}10%,20%{transform:scale3d(0.9,0.9,0.9) rotate3d(0,0,1,-3deg)}30%,50%,70%,90%{transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,3deg)}40%,60%,80%{transform:scale3d(1.1,1.1,1.1) rotate3d(0,0,1,-3deg)}to{transform:scale3d(1,1,1)}}",wobble:"{from{transform:translate3d(0,0,0)}15%{transform:translate3d(-25%,0,0) rotate3d(0,0,1,-5deg)}30%{transform:translate3d(20%,0,0) rotate3d(0,0,1,3deg)}45%{transform:translate3d(-15%,0,0) rotate3d(0,0,1,-3deg)}60%{transform:translate3d(10%,0,0) rotate3d(0,0,1,2deg)}75%{transform:translate3d(-5%,0,0) rotate3d(0,0,1,-1deg)}to{transform:translate3d(0,0,0)}}",jello:"{from,11.1% to{transform:translate3d(0,0,0)}22.2%{transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{transform:skewX(6.25deg) skewY(6.25deg)}44.4%{transform:skewX(-3.125deg)skewY(-3.125deg)}55.5%{transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{transform:skewX(-0.78125deg) skewY(-0.78125deg)}77.7%{transform:skewX(0.390625deg) skewY(0.390625deg)}88.8%{transform:skewX(-0.1953125deg) skewY(-0.1953125deg)}}","heart-beat":"{0%{transform:scale(1)}14%{transform:scale(1.3)}28%{transform:scale(1)}42%{transform:scale(1.3)}70%{transform:scale(1)}}",hinge:"{0%{transform-origin:top left;animation-timing-function:ease-in-out}20%,60%{transform:rotate3d(0,0,1,80deg);transform-origin:top left;animation-timing-function:ease-in-out}40%,80%{transform:rotate3d(0,0,1,60deg);transform-origin:top left;animation-timing-function:ease-in-out}to{transform:translate3d(0,700px,0);opacity:0}}","jack-in-the-box":"{from{opacity:0;transform-origin:center bottom;transform:scale(0.1) rotate(30deg)}50%{transform:rotate(-10deg)}70%{transform:rotate(3deg)}to{transform:scale(1)}}","light-speed-in-left":"{from{opacity:0;transform:translate3d(-100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translate3d(0,0,0)}}","light-speed-in-right":"{from{opacity:0;transform:translate3d(100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translate3d(0,0,0)}}","light-speed-out-left":"{from{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0) skewX(30deg)}}","light-speed-out-right":"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) skewX(30deg)}}",flip:"{from{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,0) rotate3d(0,1,0,-360deg);animation-timing-function:ease-out}40%{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,150px) rotate3d(0,1,0,-190deg);animation-timing-function:ease-out}50%{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,150px) rotate3d(0,1,0,-170deg);animation-timing-function:ease-in}80%{transform:perspective(400px) scale3d(0.95,0.95,0.95) translate3d(0,0,0) rotate3d(0,1,0,0deg);animation-timing-function:ease-in}to{transform:perspective(400px) scale3d(1,1,1) translate3d(0,0,0) rotate3d(0,1,0,0deg);animation-timing-function:ease-in}}","flip-in-x":"{from{transform:perspective(400px) rotate3d(1,0,0,90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(1,0,0,-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(1,0,0,-5deg)}to{transform:perspective(400px)}}","flip-in-y":"{from{transform:perspective(400px) rotate3d(0,1,0,90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(0,1,0,-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(0,1,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(0,1,0,-5deg)}to{transform:perspective(400px)}}","flip-out-x":"{from{transform:perspective(400px)}30%{transform:perspective(400px) rotate3d(1,0,0,-20deg);opacity:1}to{transform:perspective(400px) rotate3d(1,0,0,90deg);opacity:0}}","flip-out-y":"{from{transform:perspective(400px)}30%{transform:perspective(400px) rotate3d(0,1,0,-15deg);opacity:1}to{transform:perspective(400px) rotate3d(0,1,0,90deg);opacity:0}}","rotate-in":"{from{transform-origin:center;transform:rotate3d(0,0,1,-200deg);opacity:0}to{transform-origin:center;transform:translate3d(0,0,0);opacity:1}}","rotate-in-down-left":"{from{transform-origin:left bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}to{transform-origin:left bottom;transform:translate3d(0,0,0);opacity:1}}","rotate-in-down-right":"{from{transform-origin:right bottom;transform:rotate3d(0,0,1,45deg);opacity:0}to{transform-origin:right bottom;transform:translate3d(0,0,0);opacity:1}}","rotate-in-up-left":"{from{transform-origin:left top;transform:rotate3d(0,0,1,45deg);opacity:0}to{transform-origin:left top;transform:translate3d(0,0,0);opacity:1}}","rotate-in-up-right":"{from{transform-origin:right bottom;transform:rotate3d(0,0,1,-90deg);opacity:0}to{transform-origin:right bottom;transform:translate3d(0,0,0);opacity:1}}","rotate-out":"{from{transform-origin:center;opacity:1}to{transform-origin:center;transform:rotate3d(0,0,1,200deg);opacity:0}}","rotate-out-down-left":"{from{transform-origin:left bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,45deg);opacity:0}}","rotate-out-down-right":"{from{transform-origin:right bottom;opacity:1}to{transform-origin:right bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}}","rotate-out-up-left":"{from{transform-origin:left bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,-45deg);opacity:0}}","rotate-out-up-right":"{from{transform-origin:right bottom;opacity:1}to{transform-origin:left bottom;transform:rotate3d(0,0,1,90deg);opacity:0}}","roll-in":"{from{opacity:0;transform:translate3d(-100%,0,0) rotate3d(0,0,1,-120deg)}to{opacity:1;transform:translate3d(0,0,0)}}","roll-out":"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) rotate3d(0,0,1,120deg)}}","zoom-in":"{from{opacity:0;transform:scale3d(0.3,0.3,0.3)}50%{opacity:1}}","zoom-in-down":"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,-1000px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,60px,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","zoom-in-left":"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(-1000px,0,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(10px,0,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","zoom-in-right":"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(1000px,0,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(-10px,0,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","zoom-in-up":"{from{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,1000px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}60%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,-60px,0);animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","zoom-out":"{from{opacity:1}50%{opacity:0;transform:scale3d(0.3,0.3,0.3)}to{opacity:0}}","zoom-out-down":"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,-60px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}to{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,2000px,0);transform-origin:center bottom;animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","zoom-out-left":"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(42px,0,0)}to{opacity:0;transform:scale(0.1) translate3d(-2000px,0,0);transform-origin:left center}}","zoom-out-right":"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(-42px,0,0)}to{opacity:0;transform:scale(0.1) translate3d(2000px,0,0);transform-origin:right center}}","zoom-out-up":"{40%{opacity:1;transform:scale3d(0.475,0.475,0.475) translate3d(0,60px,0);animation-timing-function:cubic-bezier(0.55,0.055,0.675,0.19)}to{opacity:0;transform:scale3d(0.1,0.1,0.1) translate3d(0,-2000px,0);transform-origin:center bottom;animation-timing-function:cubic-bezier(0.175,0.885,0.32,1)}}","bounce-in":"{from,20%,40%,60%,80%,to{animation-timing-function:ease-in-out}0%{opacity:0;transform:scale3d(0.3,0.3,0.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(0.9,0.9,0.9)}60%{transform:scale3d(1.03,1.03,1.03);opacity:1}80%{transform:scale3d(0.97,0.97,0.97)}to{opacity:1;transform:scale3d(1,1,1)}}","bounce-in-down":"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:translate3d(0,0,0)}}","bounce-in-left":"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:translate3d(0,0,0)}}","bounce-in-right":"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:translate3d(0,0,0)}}","bounce-in-up":"{from,60%,75%,90%,to{animation-timing-function:cubic-bezier(0.215,0.61,0.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translate3d(0,0,0)}}","bounce-out":"{20%{transform:scale3d(0.9,0.9,0.9)}50%,55%{opacity:1;transform:scale3d(1.1,1.1,1.1)}to{opacity:0;transform:scale3d(0.3,0.3,0.3)}}","bounce-out-down":"{20%{transform:translate3d(0,10px,0)}40%,45%{opacity:1;transform:translate3d(0,-20px,0)}to{opacity:0;transform:translate3d(0,2000px,0)}}","bounce-out-left":"{20%{opacity:1;transform:translate3d(20px,0,0)}to{opacity:0;transform:translate3d(-2000px,0,0)}}","bounce-out-right":"{20%{opacity:1;transform:translate3d(-20px,0,0)}to{opacity:0;transform:translate3d(2000px,0,0)}}","bounce-out-up":"{20%{transform:translate3d(0,-10px,0)}40%,45%{opacity:1;transform:translate3d(0,20px,0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}","slide-in-down":"{from{transform:translate3d(0,-100%,0);visibility:visible}to{transform:translate3d(0,0,0)}}","slide-in-left":"{from{transform:translate3d(-100%,0,0);visibility:visible}to{transform:translate3d(0,0,0)}}","slide-in-right":"{from{transform:translate3d(100%,0,0);visibility:visible}to{transform:translate3d(0,0,0)}}","slide-in-up":"{from{transform:translate3d(0,100%,0);visibility:visible}to{transform:translate3d(0,0,0)}}","slide-out-down":"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(0,100%,0)}}","slide-out-left":"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(-100%,0,0)}}","slide-out-right":"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(100%,0,0)}}","slide-out-up":"{from{transform:translate3d(0,0,0)}to{visibility:hidden;transform:translate3d(0,-100%,0)}}","fade-in":"{from{opacity:0}to{opacity:1}}","fade-in-down":"{from{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-down-big":"{from{opacity:0;transform:translate3d(0,-2000px,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-left":"{from{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-left-big":"{from{opacity:0;transform:translate3d(-2000px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-right":"{from{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-right-big":"{from{opacity:0;transform:translate3d(2000px,0,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-up":"{from{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-up-big":"{from{opacity:0;transform:translate3d(0,2000px,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-top-left":"{from{opacity:0;transform:translate3d(-100%,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-top-right":"{from{opacity:0;transform:translate3d(100%,-100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-bottom-left":"{from{opacity:0;transform:translate3d(-100%,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-in-bottom-right":"{from{opacity:0;transform:translate3d(100%,100%,0)}to{opacity:1;transform:translate3d(0,0,0)}}","fade-out":"{from{opacity:1}to{opacity:0}}","fade-out-down":"{from{opacity:1}to{opacity:0;transform:translate3d(0,100%,0)}}","fade-out-down-big":"{from{opacity:1}to{opacity:0;transform:translate3d(0,2000px,0)}}","fade-out-left":"{from{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0)}}","fade-out-left-big":"{from{opacity:1}to{opacity:0;transform:translate3d(-2000px,0,0)}}","fade-out-right":"{from{opacity:1}to{opacity:0;transform:translate3d(100%,0,0)}}","fade-out-right-big":"{from{opacity:1}to{opacity:0;transform:translate3d(2000px,0,0)}}","fade-out-up":"{from{opacity:1}to{opacity:0;transform:translate3d(0,-100%,0)}}","fade-out-up-big":"{from{opacity:1}to{opacity:0;transform:translate3d(0,-2000px,0)}}","fade-out-top-left":"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(-100%,-100%,0)}}","fade-out-top-right":"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(100%,-100%,0)}}","fade-out-bottom-left":"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(-100%,100%,0)}}","fade-out-bottom-right":"{from{opacity:1;transform:translate3d(0,0,0)}to{opacity:0;transform:translate3d(100%,100%,0)}}","back-in-up":"{0%{opacity:0.7;transform:translateY(1200px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}","back-in-down":"{0%{opacity:0.7;transform:translateY(-1200px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}","back-in-right":"{0%{opacity:0.7;transform:translateX(2000px) scale(0.7)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}","back-in-left":"{0%{opacity:0.7;transform:translateX(-2000px) scale(0.7)}80%{opacity:0.7;transform:translateX(0px) scale(0.7)}100%{opacity:1;transform:scale(1)}}","back-out-up":"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateY(-700px) scale(0.7)}}","back-out-down":"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateY(700px) scale(0.7)}}","back-out-right":"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateY(0px) scale(0.7)}100%{opacity:0.7;transform:translateX(2000px) scale(0.7)}}","back-out-left":"{0%{opacity:1;transform:scale(1)}80%{opacity:0.7;transform:translateX(-2000px) scale(0.7)}100%{opacity:0.7;transform:translateY(-700px) scale(0.7)}}"},durations:{pulse:"2s","heart-beat":"1.3s","bounce-in":"0.75s","bounce-out":"0.75s","flip-out-x":"0.75s","flip-out-y":"0.75s",hinge:"2s"},timingFns:{pulse:"cubic-bezier(0.4,0,.6,1)",ping:"cubic-bezier(0,0,.2,1)","head-shake":"ease-in-out","heart-beat":"ease-in-out","pulse-alt":"ease-in-out","light-speed-in-left":"ease-out","light-speed-in-right":"ease-out","light-speed-out-left":"ease-in","light-speed-out-right":"ease-in"},properties:{"bounce-alt":{"transform-origin":"center bottom"},jello:{"transform-origin":"center"},swing:{"transform-origin":"top center"},flip:{"backface-visibility":"visible"},"flip-in-x":{"backface-visibility":"visible !important"},"flip-in-y":{"backface-visibility":"visible !important"},"flip-out-x":{"backface-visibility":"visible !important"},"flip-out-y":{"backface-visibility":"visible !important"},"rotate-in":{"transform-origin":"center"},"rotate-in-down-left":{"transform-origin":"left bottom"},"rotate-in-down-right":{"transform-origin":"right bottom"},"rotate-in-up-left":{"transform-origin":"left bottom"},"rotate-in-up-right":{"transform-origin":"right bottom"},"rotate-out":{"transform-origin":"center"},"rotate-out-down-left":{"transform-origin":"left bottom"},"rotate-out-down-right":{"transform-origin":"right bottom"},"rotate-out-up-left":{"transform-origin":"left bottom"},"rotate-out-up-right":{"transform-origin":"right bottom"},hinge:{"transform-origin":"top left"},"zoom-out-down":{"transform-origin":"center bottom"},"zoom-out-left":{"transform-origin":"left center"},"zoom-out-right":{"transform-origin":"right center"},"zoom-out-up":{"transform-origin":"center bottom"}},counts:{spin:"infinite",ping:"infinite",pulse:"infinite","pulse-alt":"infinite",bounce:"infinite","bounce-alt":"infinite"}},media:{portrait:"(orientation: portrait)",landscape:"(orientation: landscape)",os_dark:"(prefers-color-scheme: dark)",os_light:"(prefers-color-scheme: light)",motion_ok:"(prefers-reduced-motion: no-preference)",motion_not_ok:"(prefers-reduced-motion: reduce)",high_contrast:"(prefers-contrast: high)",low_contrast:"(prefers-contrast: low)",opacity_ok:"(prefers-reduced-transparency: no-preference)",opacity_not_ok:"(prefers-reduced-transparency: reduce)",use_data_ok:"(prefers-reduced-data: no-preference)",use_data_not_ok:"(prefers-reduced-data: reduce)",touch:"(hover: none) and (pointer: coarse)",stylus:"(hover: none) and (pointer: fine)",pointer:"(hover) and (pointer: coarse)",mouse:"(hover) and (pointer: fine)",hd_color:"(dynamic-range: high)"},supports:{grid:"(display: grid)"},preflightBase:{...fr,...Vi,...Mi,..._i,...Ti,...nr,...tr,...pi,...mi}};var ia=[I("svg",e=>({selector:`${e.selector} svg`}))];var aa=[I(".dark",e=>({prefix:`.dark $$ ${e.prefix}`})),I(".light",e=>({prefix:`.light $$ ${e.prefix}`})),L("@dark","@media (prefers-color-scheme: dark)"),L("@light","@media (prefers-color-scheme: light)")];var sa=[I("@hover",e=>(Y("The @hover variant is experimental and may not follow semver."),{parent:`${e.parent?`${e.parent} $$ `:""}@media (hover: hover) and (pointer: fine)`,selector:`${e.selector||""}:hover`}))];var ca=[L("contrast-more","@media (prefers-contrast: more)"),L("contrast-less","@media (prefers-contrast: less)")],la=[L("motion-reduce","@media (prefers-reduced-motion: reduce)"),L("motion-safe","@media (prefers-reduced-motion: no-preference)")],fa=[L("landscape","@media (orientation: landscape)"),L("portrait","@media (orientation: portrait)")];var ua=e=>{if(!e.startsWith("_")&&(/space-([xy])-(-?.+)$/.test(e)||/divide-/.test(e)))return{matcher:e,selector:t=>{let r=">:not([hidden])~:not([hidden])";return t.includes(r)?t:`${t}${r}`;}};};var pa=(e,{theme:t})=>{let r=e.match(/^(.*)\b(placeholder-)(.+)$/);if(r){let[,n="",o,i]=r;if(we(i,t)||tl(i))return{matcher:`${n}placeholder-$ ${o}${i}`};}};function tl(e){let t=e.match(/^op(?:acity)?-?(.+)$/);return t&&t[1]!=null?c.bracket.percent(t[1])!=null:!1;}function ma(e){return[pa,ua,...br(e),...ca,...fa,...la,...ia,...aa,...sa];}var da=(e={})=>({...Qo(e),name:"@unocss/preset-wind",theme:oa,rules:Ni,shortcuts:Wi,variants:ma(e)});function ha(e,t,r){return`calc(${t} + (${e} - ${t}) * ${r} / 100)`;}function ga(e,t,r){let n=[e,t],o=[];for(let a=0;a<2;++a){let s=typeof n[a]=="string"?X(n[a]):n[a];if(!s||!["rgb","rgba"].includes(s.type))return;o.push(s);}let i=[];for(let a=0;a<3;++a)i.push(ha(o[0].components[a],o[1].components[a],r));return{type:"rgb",components:i,alpha:ha(o[0].alpha??1,o[1].alpha??1,r)};}function ba(e,t){return ga("#fff",e,t);}function xa(e,t){return ga("#000",e,t);}function rl(e,t){let r=Number.parseFloat(`${t}`);if(!Number.isNaN(r))return r>0?xa(e,t):ba(e,-r);}var nl={tint:ba,shade:xa,shift:rl};function ya(){let e;return{name:"mix",match(t,r){e||(e=new RegExp(`^mix-(tint|shade|shift)-(-?\\d{1,3})(?:${r.generator.config.separators.join("|")})`));let n=t.match(e);if(n)return{matcher:t.slice(n[0].length),body:o=>(o.forEach(i=>{if(i[1]){let a=X(`${i[1]}`);if(a){let s=nl[n[1]](a,n[2]);s&&(i[1]=V(s));}}}),o)};}};}var ol=(e={})=>{let t=da(e);return{...t,name:"@unocss/preset-uno",variants:[...t.variants,ya()]};},va=ol;function il(e){return e.replace(/-(\w)/g,(t,r)=>r?r.toUpperCase():"");}function wa(e){return e.charAt(0).toUpperCase()+e.slice(1);}function ka(e){return e.replace(/(?:^|\B)([A-Z])/g,"-$1").toLowerCase();}var $a=["Webkit","Moz","ms"];function Sa(e){let t={};function r(n){let o=t[n];if(o)return o;let i=il(n);if(i!=="filter"&&i in e)return t[n]=ka(i);i=wa(i);for(let a=0;a<$a.length;a++){let s=`${$a[a]}${i}`;if(s in e)return t[n]=ka(wa(s));}return n;}return({entries:n})=>n.forEach(o=>{o[0].startsWith("--")||(o[0]=r(o[0]));});}function Ca(e){return e.replace(/&amp;/g,"&").replace(/&gt;/g,">").replace(/&lt;/g,"<");}function cn(e={}){if(typeof window>"u"){console.warn("@unocss/runtime been used in non-browser environment, skipped.");return;}let t=window,r=window.document,n=()=>r.documentElement,o=t.__unocss||{},i=Object.assign({},e,o.runtime),a=i.defaults||{},s=i.cloakAttribute??"un-cloak";i.autoPrefix&&(a.postprocess=A(a.postprocess)).unshift(Sa(r.createElement("div").style)),i.configResolved?.(o,a);let l=Rn(o,a),f=d=>i.inject?i.inject(d):n().prepend(d),u=new Map,p=!0,h=new Set,g,k,R=[],x=()=>new Promise(d=>{R.push(d),k!=null&&clearTimeout(k),k=setTimeout(()=>z().then(()=>{let v=R;R=[],v.forEach(C=>C());}),0);});function $(d){if(d.nodeType!==1)return;let v=d;v.hasAttribute(s)&&v.removeAttribute(s),v.querySelectorAll(`[${s}]`).forEach(C=>{C.removeAttribute(s);});}function S(d,v){let C=u.get(d);if(!C)if(C=r.createElement("style"),C.setAttribute("data-unocss-runtime-layer",d),u.set(d,C),v==null)f(C);else{let D=S(v),G=D.parentNode;G?G.insertBefore(C,D.nextSibling):f(C);}return C;}async function z(){let d=await l.generate(h);return d.layers.reduce((v,C)=>(S(C,v).innerHTML=d.getLayer(C)??"",C),void 0),h=d.matched,{...d,getStyleElement:v=>u.get(v),getStyleElements:()=>u};}async function m(d){let v=h.size;await l.applyExtractors(d,void 0,h),v!==h.size&&await x();}async function y(){let d=r.body;d&&await _(d);}async function _(d){let v=d.outerHTML;v&&(await m(`${v} ${Ca(v)}`),$(d)),d.shadowRoot&&d.shadowRoot.childNodes.forEach(async C=>{C.nodeType===1&&await _(C);}),d.childNodes.forEach(async C=>{C.nodeType===1&&await _(C);});}let N=new MutationObserver(d=>{p||d.forEach(async v=>{if(v.target.nodeType!==1)return;let C=v.target;for(let D of u)if(C===D[1])return;if(v.type==="childList")v.addedNodes.forEach(async D=>{if(D.nodeType!==1)return;let G=D;g&&!g(G)||(await m(G.outerHTML),$(G));});else{if(g&&!g(C))return;if(v.attributeName!==s){let D=Array.from(C.attributes).map(B=>B.value?`${B.name}="${B.value}"`:B.name).join(" "),G=`<${C.tagName.toLowerCase()} ${D}>`;await m(G);}C.hasAttribute(s)&&C.removeAttribute(s);}});}),W=!1;function ie(){if(W)return;let d=i.observer?.target?i.observer.target():n()||r.body;d&&(N.observe(d,{childList:!0,subtree:!0,attributes:!0,attributeFilter:i.observer?.attributeFilter}),W=!0);}function pe(){i.bypassDefined&&al(l.blocked),y(),ie();}function Ce(){r.readyState==="loading"?t.addEventListener("DOMContentLoaded",pe):pe();}let Ge=t.__unocss_runtime=t.__unocss_runtime={version:l.version,uno:l,async extract(d){j(d)||(d.forEach(v=>h.add(v)),d=""),await m(d);},extractAll:y,inspect(d){g=d;},toggleObserver(d){d===void 0?p=!p:p=!!d,!W&&!p&&Ce();},update:z,presets:t.__unocss_runtime?.presets??{}};i.ready?.(Ge)!==!1&&(p=!1,Ce());}function al(e=new Set){for(let t=0;t<document.styleSheets.length;t++){let r=document.styleSheets[t],n;try{if(n=r.cssRules||r.rules,!n)continue;Array.from(n).flatMap(o=>o.selectorText?.split(/,/g)||[]).forEach(o=>{o&&(o=o.trim(),o.startsWith(".")&&(o=o.slice(1)),e.add(o));});}catch{continue;}}return e;}cn({defaults:{presets:[va()]}});})();

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/README.md`:

```````md
# frontend

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/reset.txt`:

```````txt
*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:var(--un-default-border-color,#e5e7eb)}html{line-height:1.5;-webkit-text-size-adjust:100%;text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/esbuild.config.js`:

```````js
// build.js
import { build } from "esbuild";

build({
  entryPoints: ["index.js"],
  bundle: true,
  outfile: "dist/index.js",
  format: "esm", // Output format as ES module
  sourcemap: true, // Optional: for source maps
}).catch(() => process.exit(1));
```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/theme.js`:

```````js
const FontWeight = {
  thin: "font-thin", // 200
  extralight: "font-extralight", // 100
  light: "font-light", // 300
  normal: "font-normal", // 400
  medium: "font-medium", // 500
  semibold: "font-semibold", // 600
  bold: "font-bold", // 700
  extrabold: "font-extrabold", // 800
  black: "font-black" // 900
};

const FontType = {
  mono: "font-mono",
  sans: "font-sans",
  serif: "font-serif"
};

const Gaps = {
  sm: "gap-2",
  md: "gap-4",
  lg: "gap-8",
  xl: "gap-16",
  "2xl": "gap-32",
  "3xl": "gap-64",
  "4xl": "gap-96"
};

export const Sizes = ["lg", "md", "sm", "xs", "xl", "2xl", "3xl", "4xl"];

export const Variants = [
  "default",
  "primary",
  "secondary",
  "accent",
  "neutral",
  "base",
  "info",
  "success",
  "warning",
  "error"
];

const TextSizes = {
  "": "",
  xs: "text-xs",
  sm: "text-sm",
  base: "text-base",
  md: "text-md",
  lg: "text-lg",
  xl: "text-xl",
  "2xl": "text-2xl",
  "3xl": "text-3xl",
  "4xl": "text-4xl",
  "5xl": "text-5xl",
  "6xl": "text-6xl"
};

const LeadingSizes = {
  "": "",
  xs: "leading-3",
  sm: "leading-4",
  base: "leading-5",
  md: "leading-6",
  lg: "leading-7",
  xl: "leading-8",
  "2xl": "leading-9",
  "3xl": "leading-10",
  "4xl": "leading-10",
  "5xl": "leading-10",
  "6xl": "leading-10"
};

export const JustifyContent = {
  normal: "justify-normal",
  start: "justify-start",
  end: "justify-end",
  center: "justify-center",
  between: "justify-between",
  around: "justify-around",
  evenly: "justify-evenly",
  strecth: "justify-stretch"
};

const SpacingSizes = {
  "": "",
  xs: "p-1",
  sm: "p-2",
  md: "p-4",
  lg: "p-6",
  xl: "p-8",
  "2xl": "p-12",
  "3xl": "p-16",
  "4xl": "p-24"
};

const ButtonSizes = {
  "": "",
  xs: "p-1",
  sm: "p-2",
  md: "px-4 py-2",
  lg: "px-6 py-3",
  xl: "px-8 py-4",
  "2xl": "px-12 py-5",
  "3xl": "px-16 py-6",
  "4xl": "px-24 py-7"
};

const DimensionSizes = {
  "": "",
  xs: "w-6 h-6",
  sm: "w-8 h-8",
  md: "w-12 h-12",
  lg: "w-16 h-16",
  xl: "w-24 h-24",
  "2xl": "w-32 h-32",
  "3xl": "w-48 h-48",
  "4xl": "w-64 h-64"
};

const trackingSizes = {
  "4xl": "tracking-wider",
  "3xl": "tracking-wider",
  "2xl": "tracking-wider",
  xl: "tracking-wide",
  lg: "tracking-wide"
};

const generateClass = (prefix, color, variation) =>
  `${prefix}-${color}-${variation}`;
const generateColorClass = (color, variation) =>
  generateClass("bg", color, variation);
const generateTextColorClass = (color, variation) =>
  generateClass("text", color, variation);
const generateBorderColorClass = (color, variation) =>
  generateClass("border", color, variation);

const generateTextColorVariants = (textVariation, colors) => {
  return Object.keys(colors).reduce((variants, colorKey) => {
    const color = colors[colorKey];
    const textColor = textVariation === "white" ? "50" : textVariation;

    variants[colorKey] = generateTextColorClass(color, textColor);
    return variants;
  }, {});
};

const generateVariants = (
  {
    bgVariation,
    textVariation,
    hoverBgVariation,
    hoverTextVariation,
    accentVariation = null
  },
  colors
) => {
  const textColorVariants = generateTextColorVariants(textVariation, colors);

  return Object.keys(colors).reduce((variants, colorKey) => {
    const color = colors[colorKey];
    const accentClass =
      accentVariation && colorKey === "accent"
        ? `accent-${color}-${accentVariation}`
        : "";

    const classes = [
      generateColorClass(color, bgVariation),
      `hover:${generateColorClass(color, hoverBgVariation)}`,
      textColorVariants[colorKey],
      `hover:${generateTextColorClass(color, hoverTextVariation)}`,
      accentClass,
      generateBorderColorClass(color, "900")
    ];

    variants[colorKey] = classes.filter(Boolean).join(" ");
    return variants;
  }, {});
};

const cls = (arr) => arr.filter(Boolean).join(" ");

export const generateTheme = (userTheme) => {
  const BaseVariants = generateVariants(
    userTheme.baseVariants,
    userTheme.colors
  );
  const ReverseVariants = generateVariants(
    userTheme.reverseVariants,
    userTheme.colors
  );
  const TextColors = generateTextColorVariants(
    userTheme.textVariant,
    userTheme.colors
  );
  const borderRadius = roundedClasses[userTheme.borderRadius || 0];
  return {
    "uix-avatar": {
      _base: cls([userTheme.flexCenter, userTheme.borderStyles, borderRadius]),
      variant: BaseVariants,
      size: [DimensionSizes, TextSizes]
    },
    "uix-avatar__img": {
      _base: "",
      size: DimensionSizes
    },
    "uix-badge": {
      _base: cls([userTheme.flexCenter, userTheme.borderStyles, borderRadius]),
      variant: BaseVariants,
      size: [SpacingSizes, TextSizes]
    },
    "uix-input": {
      _base: cls([
        "block w-full appearance-none focus:outline-none focus:ring-0",
        userTheme.defaultTextColor,
        userTheme.borderStyles,
        userTheme.borderWidth,
        borderRadius
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: [SpacingSizes, TextSizes]
    },
    "uix-input__label": {
      variant: BaseVariants,
      _base: cls([
        "absolute text-sm  duration-300 transform -translate-y-4 scale-75 top-0.5 z-10 origin-[0] left-2.5",
        "peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-4"
      ])
    },
    "uix-label": {
      _base: cls([userTheme.fontStyles, "cursor-pointer"]),
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-textarea": {
      _base: cls([
        "flex px-2.5 py-1 w-full text-sm",
        userTheme.defaultTextColor,
        userTheme.borderStyles,
        userTheme.borderWidth
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500 "]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-dropdown": {
      _base: cls([
        "block w-full text-sm",
        userTheme.defaultTextColor,
        userTheme.borderStyles
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-modal": {
      _base: cls([
        "rounded-lg bg-white p-8 shadow-2xl min-w-[768px] min-h-[400px]",
        borderRadius
      ]),
      size: SpacingSizes
    },
    "uix-card": {
      _base: "shadow",
      spacing: SpacingSizes,
      variant: BaseVariants
    },
    "uix-block": {
      spacing: SpacingSizes,
      variant: BaseVariants
    },

    "uix-list": {
      _base: "flex",
      spacing: SpacingSizes,
      gap: Gaps,
      justify: JustifyContent,
      full: ({ vertical }) => ({
        true: vertical ? "w-full" : "h-full"
      }),
      vertical: { true: "flex-col" },
      responsive: ({ vertical }) => ({
        true: vertical ? "lg:flex-col sm:flex-row" : "sm:flex-col lg:flex-row"
      }),
      reverse: ({ vertical }) => ({
        true: vertical ? "flex-col-reverse" : "flex-row-reverse"
      })
    },
    "uix-divider": { _base: "flex items-center my-2", spacing: SpacingSizes },
    "uix-divider__border": {
      _base: "border-t  border-gray-400 flex-grow"
    },
    "uix-divider__label": { _base: "px-3 text-gray-800 font-bold text-2xl" },

    "uix-button": {
      _base: cls([
        "cursor-pointer transition ease-in-out duration-200 gap-2 w-full",
        userTheme.flexCenter,
        userTheme.fontStyles,
        borderRadius
      ]),
      variant: ReverseVariants,
      size: [ButtonSizes, TextSizes]
    },
    "uix-icon-button": {
      _base: cls(["transition ease-in-out duration-200 mx-auto", borderRadius]),
      variant: BaseVariants
    },
    "uix-icon-button__icon": {
      _base: cls(["mx-auto"]),
      size: TextSizes
    },
    "uix-tooltip": {
      _base: cls(["group relative m-12", borderRadius]),
      spacing: SpacingSizes
    },
    "uix-tooltip__button": {
      _base: cls([
        "bg-gray-500 px-4 py-2 text-sm shadow-sm text-white",
        borderRadius
      ]),
      variant: BaseVariants,
      spacing: SpacingSizes
    },
    "uix-tooltip__content": {
      _base:
        "absolute top-10 scale-0 transition-all rounded bg-gray-800 p-2 text-white text-xs group-hover:scale-100",
      spacing: SpacingSizes
    },

    "uix-tabs": {
      _base: "flex w-full overflow-x-auto overflow-y-hidden border-gray-200",
      variant: BaseVariants,
      //size: SpacingSizes,
      spacing: SpacingSizes,
      full: { true: "w-full h-full" }
    },

    "uix-tab": {
      _base: cls([
        "relative group",
        userTheme.flexCenter,
        "px-2 py-2 -mb-px sm:px-4 -px-1 whitespace-nowrap focus:outline-none",
        userTheme.borderStyles,
        userTheme.borderWidth
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-tab_summary": {
      _base: "cursor-pointer"
    },
    "uix-range": {
      _base: "w-full",
      variant: BaseVariants
    },
    "uix-checkbox": {
      _base: cls([
        `before:content[''] peer
         before:transition-opacity 
         hover:before:opacity-10
         checked:opacity-100
         opacity-30
         `,
        clipRoundedClasses[userTheme.borderRadius]
      ]),
      variant: ReverseVariants,
      size: DimensionSizes
    },
    "uix-select": {
      _base: "w-full",
      border: { true: "border" },
      full: { true: "w-full" },
      size: SpacingSizes
    },

    "uix-text": {
      _base: "",
      variant: TextColors,
      weight: FontWeight,
      font: FontType,
      leading: LeadingSizes,
      size: [LeadingSizes, trackingSizes, TextSizes]
    }
  };
};

const resolveThemeValue = (elementTheme, key = "") => {
  if (Array.isArray(elementTheme))
    return elementTheme.map((entry) => entry[key]).join(" ");
  const theme = elementTheme[key];
  if (typeof theme === "function") return theme();
  return theme;
};

export const getElementTheme = (element, props) => {
  const defaultElement = Theme[element];
  if (!defaultElement) return props["containerClass"] || "";

  const classes = Object.keys(defaultElement).reduce((acc, attr) => {
    const elementTheme = defaultElement[attr];
    const resolvedThemeValue = resolveThemeValue(elementTheme, props[attr]);
    if (resolvedThemeValue) acc.push(resolvedThemeValue);
    return acc;
  }, []);

  if (defaultElement["_base"]) classes.push(defaultElement["_base"]);
  if (props["containerClass"]) classes.push(props["containerClass"]);

  return classes.join(" ");
};

const roundedClasses = [
  "rounded-none",
  "rounded-sm",
  "rounded",
  "rounded-md",
  "rounded-lg",
  "rounded-xl",
  "rounded-2xl",
  "rounded-3xl",
  "rounded-full"
];

const clipRoundedClasses = [
  "[clip-path:circle(0% at 50% 50%)]",
  "[clip-path:circle(10% at 50% 50%)]",
  "[clip-path:circle(20% at 50% 50%)]",
  "[clip-path:circle(30% at 50% 50%)]",
  "[clip-path:circle(40% at 50% 50%)]",
  "[clip-path:circle(50% at 50% 50%)]",
  "[clip-path:circle(60% at 50% 50%)]",
  "[clip-path:circle(70% at 50% 50%)]",
  "[clip-path:circle(100% at 50% 50%)]"
];

export const baseTheme = {
  colors: {
    default: "gray",
    primary: "blue",
    secondary: "pink",
    accent: "yellow",
    base: "gray",
    info: "teal",
    success: "green",
    warning: "orange",
    error: "red"
  },
  borderRadius: null,
  fontStyles: "font-bold leading-5 hover:leading-5",
  textVariant: "700",
  defaultTextColor: "text-gray-700",
  activeTextColor: "text-blue-600",
  hoverTextColor: "hover:text-blue-400",
  borderStyles: "border border-gray-300",
  hoverBorder: "hover:border-blue-400",
  borderWidth: "border-b-2",
  flexCenter: "flex flex-row items-center gap-2 text-center justify-center",
  baseVariants: {
    bgVariation: "200",
    textVariation: "700",
    hoverBgVariation: "100",
    hoverTextVariation: "800",
    accentVariation: "400"
  },
  reverseVariants: {
    bgVariation: "700",
    textVariation: "white",
    hoverBgVariation: "600",
    hoverTextVariation: "100",
    accentVariation: "200"
  }
};
export default baseTheme;
let Theme = generateTheme(baseTheme);

export const updateTheme = (theme) => {
  Theme = generateTheme(theme);
  window?.updateAllStyles?.(true, true);
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/reactive-view.js`:

```````js
import { LitElement } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { getElementTheme, updateTheme } from "./theme.js";
import i18n from "helpers/i18n.js";
import { stringToType } from "helpers/types.js";
import url from "helpers/url.js";

const isServer = typeof localStorage === "undefined";
const syncAdapters = isServer ? { url } : { url, localStorage, sessionStorage };
export const instances = [];

class BaseReactiveView extends LitElement {
  i18n = i18n;
  _style;
  _isLoaded;
  _styleElement;
  static updateTheme = updateTheme;
  static formAssociated;
  static _instancesUsingSync = new Map();
  constructor({ component }) {
    super();
    instances.push(this);
    this.component = component;
    this._queryCache = {};
    const {
      style,
      connectedCallback,
      disconnectedCallback,
      init: componentInit,
      props,
      ...litPropsAndEvents
    } = this.component;
    componentInit?.(this);
    Object.keys(litPropsAndEvents).forEach(
      function (method) {
        this[method] = litPropsAndEvents[method];
      }.bind(this),
    );

    this.generateTheme = (element) => getElementTheme(element, this);

    const propKeys = Object.keys(props || {});
    propKeys.forEach((key) => {
      const prop = props[key];
      this[key] = prop.defaultValue;
      const syncKey = { key, sync: prop.sync };
      if (prop.sync) {
        if (!BaseReactiveView._instancesUsingSync.has(syncKey)) {
          BaseReactiveView._instancesUsingSync.set(syncKey, new Set());
        }
        BaseReactiveView._instancesUsingSync.get(syncKey).add(this);

        Object.defineProperty(this, key, {
          get: () => {
            const value = syncAdapters[prop.sync].getItem(prop.key || key);
            return value ? stringToType(value, prop) : prop.defaultValue;
          },
          set: (newValue) => {
            if (!prop.readonly) {
              const value = newValue
                ? typeof newValue === "string"
                  ? newValue
                  : JSON.stringify(newValue)
                : null;
              syncAdapters[prop.sync].setItem(prop.key || key, value);
              this.requestUpdate(key, this[key]);
              BaseReactiveView._instancesUsingSync
                .get(syncKey)
                .forEach((instance) => {
                  if (instance !== this) {
                    instance.requestUpdate();
                  }
                });
            }
          },
          configurable: true,
        });
      }

      if (!prop.readonly) {
        const setterName = `set${key.charAt(0).toUpperCase() + key.slice(1)}`;
        this[setterName] = (newValue) => {
          this[key] = newValue;
        };
      }
    });

    if (typeof window !== "undefined") {
      this.boundServiceWorkerMessageHandler =
        this.handleServiceWorkerMessage.bind(this);
      navigator.serviceWorker.addEventListener(
        "message",
        this.boundServiceWorkerMessageHandler,
      );
    }
  }

  q(element) {
    if (!this._queryCache[element]) {
      this._queryCache[element] = this.shadowRoot.querySelector(element);
    }
    return this._queryCache[element];
  }

  // Query all matching elements
  qa(element) {
    return this.shadowRoot.querySelectorAll(element);
  }

  handleServiceWorkerMessage(event) {
    if (event.data === "REQUEST_UPDATE") {
      this.requestUpdate();
    }
  }

  connectedCallback() {
    super.connectedCallback();
    if (this.component.connectedCallback) {
      this.component.connectedCallback.bind(this)();
    }
    if (this.constructor._style && !this._isLoaded) {
      this._injectStyle();
    }
  }

  disconnectedCallback() {
    if (this.component.disconnectedCallback) {
      this.component.disconnectedCallback.bind(this)();
    }

    BaseReactiveView._instancesUsingSync.forEach((instances) => {
      instances.delete(this);
    });

    super.disconnectedCallback();
    if (typeof window !== "undefined") {
      navigator.serviceWorker.removeEventListener(
        "message",
        this.boundServiceWorkerMessageHandler,
      );
    }
  }

  updateStyles(stylesheet) {
    this.constructor._style = stylesheet;
    this._injectStyle();
  }

  _injectStyle() {
    const styleEl = document.createElement("style");
    styleEl.textContent = this.constructor._style;
    this.shadowRoot.appendChild(styleEl);
    this._styleElement = styleEl;
    this._isLoaded = true;
  }
}

export default BaseReactiveView;

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/datetime.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import datetime from "helpers/datetime.js";
import { T } from "helpers/types.js";

const getDaysInMonth = (month, year) => new Date(year, month, 0).getDate();
const getFirstDayOfMonth = (month, year) =>
  new Date(year, month - 1, 1).getDay();
const getLastDayOfMonth = (month, year) =>
  new Date(year, month - 1, getDaysInMonth(month, year)).getDay();

export default {
  i18n: {},
  views: {
    "uix-time": {
      props: { timestamp: T.number() },
      render: function () {
        const { timestamp } = this;
        return html`<time class="whitespace-nowrap"
          >${datetime.formatTime(timestamp)}</time
        >`;
      },
    },
    "uix-calendar-day": {
      props: {
        previous: T.boolean(),
        next: T.boolean(),
        currentDay: T.boolean(),
        selected: T.boolean(),
        day: T.number(),
      },
      render: function () {
        const { currentMonth, currentDay, next, previous, selected, day } =
          this;
        return html` <button
          type="button"
          class="focus:z-10 w-full p-1.5 ${(!next && !previous) ||
          currentDay ||
          selected
    ? "bg-white "
    : ""}  
                ${currentMonth ? " text-gray-900 hover:bg-gray-100" : ""}
                ${currentDay
    ? "font-semibold text-indigo-600 hover:bg-gray-100 "
    : ""}"
        >
          <time
            datetime="2022-01-01"
            class="mx-auto flex h-7 w-7 items-center justify-center rounded-full ${selected
    ? "bg-gray-900 font-semibold text-white"
    : ""}"
            >${day}</time
          >
        </button>`;
      },
    },
    "uix-calendar-month": {
      props: {
        month: T.number(),
        year: T.number(),
        selectedDay: T.number(),
      },
      render: function () {
        const { month, year, selectedDay } = this;
        const today = new Date();
        const isToday = (d, m, y) =>
          d === today.getDate() &&
          m === today.getMonth() + 1 &&
          y === today.getFullYear();

        // Calculate days to prepend from the previous month
        const daysToPrepend =
          getFirstDayOfMonth(month, year) === 0
            ? 6
            : getFirstDayOfMonth(month, year) - 1;
        const previousMonthDays = getDaysInMonth(month - 1, year);

        const prependedDays = [...Array(daysToPrepend)].map(
          (_, i) => html`
            <uix-calendar-day
              day="${previousMonthDays - daysToPrepend + i + 1}"
              previous="true"
              month="${month - 1}"
            ></uix-calendar-day>
          `,
        );

        // Generate days for the current month
        const currentMonthDays = [...Array(getDaysInMonth(month, year))].map(
          (_, i) => html`
            <uix-calendar-day
              day="${i + 1}"
              month="${month}"
              ?currentDay=${isToday(i + 1, month, year)}
              ?selected=${i + 1 === selectedDay}
            ></uix-calendar-day>
          `,
        );

        // Calculate days to append from the next month
        const daysToAppend = 7 - getLastDayOfMonth(month, year);
        const appendedDays = [...Array(daysToAppend)].map(
          (_, i) => html`
            <uix-calendar-day
              day="${i + 1}"
              next="true"
              month="${month + 1}"
            ></uix-calendar-day>
          `,
        );

        return html`
          <uix-list vertical>
            <div
              class="mt-6 grid grid-cols-7 text-center text-xs leading-6 text-gray-500"
            >
              <div>M</div>
              <div>T</div>
              <div>W</div>
              <div>T</div>
              <div>F</div>
              <div>S</div>
              <div>S</div>
            </div>
            <div
              class="isolate mt-2 grid grid-cols-7 gap-px rounded-lg bg-gray-200 text-sm shadow ring-1 ring-gray-200"
            >
              ${[...prependedDays, ...currentMonthDays, ...appendedDays]}
            </div>
          </uix-list>
        `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/docs.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

export default {
  i18n: {},
  views: {
    "uix-docs-page": {
      props: {
        title: T.string(),
        description: T.string(),
        tableData: T.array(),
        examples: T.array(),
      },
      render: function () {
        const { title, description, tableData, examples } = this;
        const formattedTitle = (title) =>
          title.toLowerCase().replace(/ /g, "-");

        return html`
          <uix-list layout="responsive">
            <uix-block class="flex-grow">
              <uix-block>
                <uix-text size="2">${title}</uix-text>
                <p>${description}</p>
              </uix-block>
              <uix-block>
                <uix-table
                  .headers=${[
    "Type",
    "Property",
    "Description",
    "Lit Property?",
  ]}
                  .rows=${tableData}
                ></uix-table>
              </uix-block>
              <uix-divider></uix-divider>
              ${examples.map(
    (example) => html`
                  <section id="${formattedTitle(example.title)}">
                    <uix-block>
                      <uix-text size="4">${example.title}</uix-text>
                      <p>${example.description}</p>
                    </uix-block>
                    <uix-block> ${example.codeComponent} </uix-block>
                    <uix-block>
                      <uix-mockup-code code=${example.code}></uix-mockup-code>
                    </uix-block>
                  </section>
                `,
  )}
            </uix-block>

            <uix-block class="w-1/4 lg:w-1/3 xl:w-1/3">
              <uix-text size="4">Contents</uix-text>
              <ul>
                <li><a href="#description">Description</a></li>
                <li><a href="#properties">Properties</a></li>
                <li><a href="#examples">Examples</a></li>
                ${examples.map(
    (example) => html`
                    <li>
                      <a href="#${formattedTitle(example.title)}"
                        >${example.title}</a
                      >
                    </li>
                  `,
  )}
                <li><a href="#source-code">Source Code</a></li>
              </ul>
            </uix-block>
          </uix-list>
        `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/app.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

export default {
  i18n: {},
  views: {
    "uix-app-shell": {
      props: { containerClass: T.string() },
      render: function () {
        const { containerClass } = this;
        return html`
          <div
            class=${"app-shell w-full h-full flex flex-col " + containerClass ||
            ""}
          >
            <slot name="top-navbar"></slot>
            <div class="flex h-full">
              <slot name="left-navbar"></slot>
              <main class="relative content flex-grow overflow-y-auto">
                <slot></slot>
              </main>
              <slot name="right-navbar"></slot>
            </div>
            <slot name="bottom-navbar"></slot>
          </div>
        `;
      },
    },
    "uix-router": {
      props: {
        routes: T.array(),
        currentRoute: T.string(),
      },
      render: function () {
        const { routes, currentRoute } = this;
        const routeItem = routes.find((route) => route.path === currentRoute);
        return routeItem
          ? html`${routeItem.component}`
          : html`<uix-block>404: Page not found</uix-block>`;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/content.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

export default {
  views: {
    "uix-card": {
      props: {
        border: T.boolean({ defaultValue: true }),
        shadow: T.boolean({ defaultValue: true }),
        variant: T.string({ defaultValue: "primary" }),
        text: T.string(),
        rounded: T.boolean({ defaultValue: "none" }),
        spacing: T.string({ defaultValue: "md" }),
      },
      render: function () {
        const baseClass = this.generateTheme("uix-card");
        return html`<uix-block containerClass=${baseClass} spacing=${this.spacing}>
          <slot></slot>
        </uix-block>`;
      },
    },
    "uix-table": {
      props: {
        headers: T.array(),
        rows: T.array(), // All rows, not just those for the current page
        currentPage: T.number({ defaultValue: 1 }),
        resultsPerPage: T.number({ defaultValue: 10 }),
      },
      paginatedRows() {
        const startIndex = (this.currentPage - 1) * this.resultsPerPage;
        return this.rows.slice(startIndex, startIndex + this.resultsPerPage);
      },
      render: function () {
        const headerElements = this.headers.map(
          (header) => html`<th scope="col" class="p-3">${header}</th>`,
        );
        const rowElements = this.paginatedRows()
          .filter(Boolean)
          .map((row) => {
            const cells = Array.isArray(row) ? row : Object.values(row);
            return html`<tr>
              ${cells.map(
    (cell) => html`<td class="px-3 py-2 text-xs">${cell}</td>`,
  )}
            </tr>`;
          });

        return html`
          <div>
            <table
              class="w-full text-sm text-left text-gray-500 dark:text-gray-400"
            >
              <thead
                class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
              >
                <tr>
                  ${headerElements}
                </tr>
              </thead>
              <tbody>
                ${rowElements}
              </tbody>
            </table>
            <uix-pagination
              totalResults=${this.rows.length}
              currentPage=${this.currentPage}
              resultsPerPage=${this.resultsPerPage}
              .onPageChange=${this.setCurrentPage}
            ></uix-pagination>
          </div>
        `;
      },
    },

    "uix-mockup-phone": {
      props: {
        prefix: T.string(),
        code: T.string(),
        highlight: T.boolean(),
        variant: T.string(),
      },
      render: function () {
        return html`
          <div
            class="relative mx-auto border-gray-800 bg-gray-800 border-[14px] rounded-xl h-[700px] w-[400px] shadow-xl"
          >
            <div
              class="w-[148px] h-[18px] bg-gray-800 top-0 rounded-b-[1rem] left-1/2 -translate-x-1/2 absolute"
            ></div>
            <div
              class="h-[32px] w-[3px] bg-gray-800 absolute -left-[17px] top-[72px] rounded-l-lg"
            ></div>
            <div
              class="h-[46px] w-[3px] bg-gray-800 absolute -left-[17px] top-[124px] rounded-l-lg"
            ></div>
            <div
              class="h-[46px] w-[3px] bg-gray-800 absolute -left-[17px] top-[178px] rounded-l-lg"
            ></div>
            <div
              class="h-[64px] w-[3px] bg-gray-800 absolute -right-[17px] top-[142px] rounded-r-lg"
            ></div>
            <div
              class="rounded-xl overflow-hidden w-[372px] h-[672px] bg-white"
            >
              <slot></slot>
            </div>
          </div>
        `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/tests.package.js`:

```````js
// TODO: create a package that supports creating / running tests
export default {
  i18n: {},
  views: {}
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/crud.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import * as CSV from "helpers/csv.js";
import * as File from "helpers/file.js";
import { post } from "helpers/rest.js";
import { T } from "helpers/types.js";
export default {
  i18n: {},
  views: {
    "uix-crud": {
      props: {
        model: T.string(),
        rows: T.array(),
        fields: T.array(),
        setRows: T.function(),
        ModelClass: T.object(),
      },
      render: function () {
        return html`
          <uix-list containerClass="justify-between" spacing="md">
            <uix-crud-search
              .model=${this.model}
              .setRows=${this.setRows}
            ></uix-crud-search>
            <uix-crud-actions
              .model=${this.model}
              .rows=${this.rows}
              .setRows=${this.setRows}
              .fields=${this.fields}
              .ModelClass=${this.ModelClass}
            ></uix-crud-actions>
          </uix-list>
          <uix-crud-table
            .rows=${this.rows}
            .fields=${this.fields}
          ></uix-crud-table>
        `;
      },
    },
    "uix-crud-search": {
      props: {
        setRows: T.function(),
        model: T.string(),
      },
      render: function () {
        return html`
          <form class="flex items-center flex-grow">
            <label for="simple-search" class="sr-only">Search</label>
            <div class="relative w-full">
              <div
                class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
              >
                <uix-icon name="search"></uix-icon>
              </div>
              <input
                type="text"
                id="simple-search"
                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Search"
                required=""
              />
            </div>
          </form>
        `;
      },
    },
    "uix-crud-actions": {
      props: {
        setRows: T.function(),
        model: T.string(),
        fields: T.array(),
        ModelClass: T.object(),
        rows: T.array(),
      },
      render: function () {
        return html`
          <uix-list>
            <uix-crud-new-modal
              .addRow=${(newRow) => this.setRows([...this.rows, newRow])}
              model=${this.model}
              .fields=${this.fields}
            ></uix-crud-new-modal>
            <uix-button dropdown="hide">
              <uix-icon name="chevron-down"></uix-icon>
              Actions
              <ul slot="dropdown">
                <li>
                  <app-import-csv-button
                    .setRows=${this.setRows}
                    .rows=${this.rows}
                    model=${this.model}
                    .fields=${this.fields}
                  ></app-import-csv-button>
                </li>
                <li>
                  <uix-button size="xs" variant="secondary"
                    >Export as CSV</uix-button
                  >
                </li>
              </ul>
            </uix-button>
            <uix-button>
              Filter <uix-icon name="chevron-down"></uix-icon>
            </uix-button>
          </uix-list>
        `;
      },
    },
    "uix-crud-table": {
      props: {
        rows: T.array(),
        fields: T.object(),
      },
      render: function () {
        return html`
          <uix-table .headers=${this.fields} .rows=${this.rows}></uix-table>
        `;
      },
    },
    "uix-crud-new-modal": {
      props: {
        fields: T.array(),
        addRow: T.function(),
        model: T.string(),
        icon: T.string(),
      },
      render: function () {
        const { addRow = () => {}, fields, icon, model } = this;
        return html`<uix-modal title="Create new">
          ${icon
    ? html`<uix-icon-button
                slot="button"
                icon=${icon}
              ></uix-icon-button>`
    : html`<uix-button slot="button" variant="primary"
                >+ new</uix-button
              >`}

          <uix-form
            title="New"
            color="base"
            size="md"
            name="uixCRUDForm"
            .fields=${fields.map((field) => ({
    ...field,
    name: field,
    placeholder: field,
  }))}
            .actions=${[
    {
      label: "Create " + model,
      type: "submit",
      click: () => {
        const form = this.q("uix-form");
        const data = form.formData();
        if (form.validate()) {
          post(model, data).then(addRow);
          form.reset();
          this.q("uix-modal").hide();
        }
      },
    },
  ]}
          ></uix-form>
        </uix-modal>`;
      },
    },

    "app-import-csv-button": {
      props: {
        fields: T.array(),
        rows: T.array(),
        setRows: T.function(),
        model: T.string(),
        CSVRows: T.array(),
        CSVFields: T.array(),
      },
      handleFileChange: async function (e) {
        try {
          const file = e.target.files[0];
          const csvContent = await File.readFile(file);
          let data = CSV.parseCSV(csvContent);
          this.setCSVRows(data);
          this.setCSVFields(CSV.getFields(data));
          this.q("uix-modal").show();
        } catch (error) {
          console.error("Error processing file:", error);
        }
      },
      render: function () {
        const { setRows, CSVRows, fields = [], CSVFields, model } = this;
        const form = this.q("uix-form");
        return html` <uix-button
            @click=${() => this.q("#ImportCSVFileInput").click()}
            size="xs"
            variant="secondary"
          >
            Import CSV
          </uix-button>
          <uix-modal>
            <input
              type="file"
              id="ImportCSVFileInput"
              accept=".csv"
              style="display: none;"
              @change=${this.handleFileChange}
            />
            <uix-list vertical>
              <uix-text size="lg" weight="bold">
                Select the matching CSV fields:
              </uix-text>
              ${html`<uix-form
                title="New"
                color="base"
                size="md"
                name="uixCRUDForm"
                .fields=${fields.map((field) => ({
    ...field,
    name: field,
    type: "select",
    options: ["choose a field for " + field, ...CSVFields],
    placeholder: field,
  }))}
                .actions=${[
    {
      label: "Import " + this.model,
      type: "submit",
      click: () => {
        const fieldMapping = form.formData();
        const rows = CSV.transformCsvData(CSVRows, fieldMapping);
        if (form.validate()) {
          post(model, rows).then((newPosts) => {
            setRows([...rows, newPosts]);
          });
          form.reset();
          this.q("uix-modal").hide();
        }
      },
    },
  ]}
              >
              </uix-form>`}
            </uix-list>
          </uix-modal>`;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/chat.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

export default {
  i18n: {},
  views: {
    "uix-chat-message": {
      props: {
        message: T.string(),
        timestamp: T.object(),
        sender: T.object({ defaultValue: { name: "", avatar: "" } }),
        variant: T.string({ defaultValue: "base" }),
        rounded: T.boolean(),
      },
      render: function () {
        const { message, timestamp, sender } = this;
        const currentUser = sender?.name === "user" || !sender;
        return html`
          <uix-list>
            ${(!currentUser &&
              html`<uix-avatar size="xs" src=${sender.avatar}></uix-avatar>`) ||
            ""}
            <uix-list
              vertical
              containerClass=${this.generateTheme("uix-chat-message")}
              spacing="md"
            >
              <uix-text font="mono" weight="light" size="xs">
                ${message}
              </uix-text>
              <uix-time
                class="text-xs opacity-50 text-right"
                timestamp=${timestamp}
              ></uix-time>
            </uix-list>
          </uix-list>
        `;
      },
    },

    "uix-chat-card": {
      props: {
        message: T.string(),
        timestamp: T.string(),
        avatar: T.string(),
        sender: T.string(),
        rounded: T.boolean(),
        unread: T.number(),
        href: T.string(),
      },
      render: function () {
        const { message, href, avatar, timestamp, unread, sender, rounded } =
          this;
        return html`
          <a href=${href}>
            <uix-block spacing="sm">
              <uix-list>
                ${avatar
    ? html`
                      <uix-avatar src=${avatar} rounded=${rounded}></uix-avatar>
                    `
    : ""}
                <uix-list vertical justify="center" class="flex-grow">
                  <uix-text
                    size="sm"
                    weight="bold"
                    class="tracking-wide text-gray-700"
                    >${sender}</uix-text
                  >
                  <uix-text
                    weight="medium"
                    size="xs"
                    font="mono"
                    containerClass="text-gray-400 text-ellipsis text-xs overflow-hidden whitespace-nowrap w-36"
                  >
                    ${message}
                  </uix-text>
                </uix-list>
                <uix-list vertical justify="evenly" containerClass="text-right">
                  <uix-time
                    class="text-xs opacity-50"
                    timestamp=${timestamp}
                  ></uix-time>
                  ${unread
    ? html`<uix-badge>${unread}</uix-badge>`
    : html`<div></div>`}
                </uix-list>
              </uix-list>
            </uix-block>
          </a>
        `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/navigation.package.js`:

```````js
import { html } from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

export default {
  views: {
    "uix-modal": {
      props: {
        actions: T.function(),
        size: T.string({ defaultValue: "md" }),
        parent: T.object(),
        open: T.boolean(),
      },
      firstUpdated: function () {
        this.$modal = this.shadowRoot.querySelector("#modal");
        if (this.parent) this.parent.hide = this.hide;
      },
      hide: function (msg = "") {
        this.$modal.close(msg);
      },
      show: function () {
        this.$modal.showModal();
      },
      render: function () {
        const { actions, open } = this;
        return html`
          <slot name="button" @click=${this.show}></slot>
          <dialog
            id="modal"
            ?open=${open}
            class=${this.generateTheme("uix-modal")}
          >
            <div class="modal-box">
              <uix-button
                @click=${this.hide}
                variant=""
                shape="circle"
                size="sm"
                class="absolute right-1 top-0"
              >
                ✕
              </uix-button>

              <uix-list vertical>
                <slot></slot>
                <!--// TODO: remove this and inline the buttons wherever it is used-->
                <uix-list>
                  <slot name="footer"></slot>
                  ${actions?.({ host: this }) || ""}
                </uix-list>
              </uix-list>
            </div>
          </dialog>
        `;
      },
    },
    "uix-tooltip": {
      render: function () {
        return html`
          <div class=${this.generateTheme("uix-tooltip")}>
            <button class=${this.generateTheme("uix-tooltip__button")}>
              <slot name="button"></slot>
            </button>
            <span class=${this.generateTheme("uix-tooltip__content")}>
              <slot></slot>
            </span>
          </div>
        `;
      },
    },
    "uix-tabs": {
      props: {
        items: T.array(),
        size: T.string({ defaultValue: "md" }),
        gap: T.string({ defaultValue: "md" }),
        spacing: T.string({ defaultValue: "md" }),
        full: T.boolean(),
        selectTab: T.string()
      },
      unselectTab() {
        const slot = this.shadowRoot.querySelector("slot");
        const tabs = slot
          .assignedNodes()
          .filter(
            (node) => node.tagName && node.tagName.toLowerCase() === "uix-tab",
          );

        tabs.forEach((tab) => {
          tab.setActive(false);
        });
      },
      render: function () {
        return html`
          <div class=${this.generateTheme("uix-tabs")}>
            <slot></slot>
          </div>
        `;
      },
    },
    "uix-tab": {
      props: {
        icon: T.string(),
        label: T.string(),
        active: T.boolean(),
        parent: T.object(),
        onclick: T.function(),
        onclose: T.function(),
      },
      selectTab: function (e) {
        this.parentElement.unselectTab();
        this.setActive(true);
        this.onclick?.(e);
      },
      firstUpdated: function () {
        const { onclose } = this;
        if (onclose) {
          this.shadowRoot.addEventListener("auxclick", function (event) {
            event.stopPropagation();
            if (event.button === 1) {
              onclose();
            }
          });
        }
      },
      render: function () {
        const { active, selectTab, onclose } = this;
        return html`
          <button
            role="tab"
            ?active=${active}
            @click=${selectTab}
            class=${this.generateTheme("uix-tab")}
          >
            <slot></slot>
            ${onclose &&
            html`<button
              @click=${(event) => {
    event.stopPropagation();
    onclose();
  }}
              class="absolute top-1 right-2 text-sm font-bold leading-none group-hover:inline hidden"
            >
              &times;
            </button>`}
          </button>
        `;
      },
    },
    "uix-pagination": {
      props: {
        totalResults: T.number(),
        currentPage: T.number(),
        resultsPerPage: T.number({ defaultValue: 10 }),
        onPageChange: T.function(),
      },
      render: function () {
        const totalPageCount = Math.floor(
          this.totalResults / this.resultsPerPage,
        );
        const startItem = (this.currentPage - 1) * this.resultsPerPage + 1;
        const endItem = Math.min(
          startItem + this.resultsPerPage - 1,
          this.totalResults,
        );

        // Generate page links with "Previous", "Next", and ellipsis for large page counts
        const pageLinks = [];
        const visiblePages = 5; // Number of pages to display in the pagination control

        let startPage = Math.max(
          1,
          this.currentPage - Math.floor(visiblePages / 2),
        );
        let endPage = Math.min(totalPageCount, startPage + visiblePages - 1);

        // If there are not enough pages to display after the current page, adjust the start page again.
        if (endPage - startPage + 1 < visiblePages && startPage > 1) {
          startPage = Math.max(1, endPage - visiblePages + 1);
        }

        // "Previous" link
        if (this.currentPage > 1) {
          pageLinks.push(this.renderPageLink(this.currentPage - 1, "Previous"));
        }

        // First page and ellipsis if needed
        if (startPage > 1) {
          pageLinks.push(this.renderPageLink(1));
          if (startPage > 2) {
            pageLinks.push(this.renderPageLink(startPage - 1, "..."));
          }
        }

        // Page number links
        for (let page = startPage; page <= endPage; page++) {
          pageLinks.push(this.renderPageLink(page));
        }

        // Last page and ellipsis if needed
        if (endPage < totalPageCount) {
          if (endPage < totalPageCount - 1) {
            pageLinks.push(this.renderPageLink(endPage + 1, "..."));
          }
          pageLinks.push(this.renderPageLink(totalPageCount));
        }

        // "Next" link
        if (this.currentPage < totalPageCount) {
          pageLinks.push(this.renderPageLink(this.currentPage + 1, "Next"));
        }

        return html`
          <nav
            class="flex flex-col md:flex-row justify-between items-start md:items-center space-y-3 md:space-y-0 p-4"
            aria-label="Table navigation"
          >
            <span class="text-sm font-normal text-gray-500 dark:text-gray-400">
              Showing
              <span class="font-semibold text-gray-900 dark:text-white"
                >${startItem}-${endItem}</span
              >
              of
              <span class="font-semibold text-gray-900 dark:text-white"
                >${this.totalResults}</span
              >
            </span>
            <ul class="inline-flex items-stretch -space-x-px">
              ${pageLinks}
            </ul>
          </nav>
        `;
      },
      renderPageLink(page, label) {
        label = label || page;
        const isActive = page === this.currentPage;
        const linkClass = isActive
          ? "text-blue-600 bg-blue-50 border border-blue-300"
          : "text-gray-500 bg-white border border-gray-300";

        return html`
          <li class="p-2">
            <a
              href="#"
              class="flex items-center justify-center p-2 text-sm leading-tight ${linkClass} hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
              @click=${() => this.onPageChange(page)}
              >${label}</a
            >
          </li>
        `;
      },
    },

    "uix-context-menu": {
      props: { open: T.boolean(), contextmenu: T.function() },
      closeContextMenuHandler: function () {
        this.setOpen(false);
      },

      documentClickHandler: function (event) {
        if (!this.contains(event.target) && this !== event.target) {
          this.setOpen(false);
        }
      },

      escapeKeyHandler: function (event) {
        if (event.key === "Escape") {
          this.setOpen(false);
        }
      },

      connectedCallback: function () {
        document.addEventListener(
          "close-context-menu",
          this.closeContextMenuHandler.bind(this),
        );
        document.addEventListener(
          "click",
          this.documentClickHandler.bind(this),
        );
        document.addEventListener("keydown", this.escapeKeyHandler.bind(this));
      },

      disconnectedCallback: function () {
        document.removeEventListener(
          "close-context-menu",
          this.closeContextMenuHandler,
        );
        document.removeEventListener("click", this.documentClickHandler);
        document.removeEventListener("keydown", this.escapeKeyHandler);
      },
      render: function () {
        const { open, setOpen } = this;
        return html` <div
            class="z-10 absolute top-6 left-10 ${open
    ? ""
    : "hidden"} bg-white border border-gray-300 shadow-lg"
          >
            <slot name="menu"></slot>
          </div>
          <slot
            @contextmenu=${(e) => {
    e.preventDefault();
    document.dispatchEvent(new CustomEvent("close-context-menu"));
    setTimeout(() => {
      setOpen(true);
    }, 0);
  }}
          ></slot>`;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/layout.package.js`:

```````js
import {  
  css,
  html,
  staticHtml,
  unsafeStatic,
} from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { droparea } from "helpers/droparea.js";
import { T } from "helpers/types.js";

export default {
  views: {
    "uix-block": {
      props: {
        variant: T.string(),
        spacing: T.string({ defaultValue: "md" }),
        containerClass: T.string(),
      },
      render: function () {
        const baseClass = this.generateTheme("uix-block");
        return html`
          <div class=${baseClass}>
            <slot></slot>
          </div>
        `;
      },
    },
    "uix-list": {
      style: [
        css`
          :host {
            display: inherit;
          }
        `,
      ],
      props: {
        vertical: T.boolean(),
        responsive: T.boolean(),
        tag: T.string({ defaultValue: "div" }),
        reverse: T.boolean(),
        droparea: T.boolean(),
        justify: T.string(),
        spacing: T.string({ defaultValue: "sm" }),
        gap: T.string({ defaultValue: "sm" }),
        full: T.boolean(),
        rounded: T.boolean(),
        containerClass: T.string(),
      },
      ...droparea,
      render: function () {
        const { tag } = this;
        const baseClass = this.generateTheme("uix-list");
        return staticHtml`
          <${unsafeStatic(tag)}            
            class="${unsafeStatic(baseClass)}">
            <slot></slot>
          </${unsafeStatic(tag)}>
        `;
      },
    },
    "uix-divider": {
      props: {
        label: T.string(),
        spacing: T.string({ default: "md" }),
      },
      render: function () {
        const { label } = this;
        return html`<div class=${this.generateTheme("uix-divider")}>
          <div class=${this.generateTheme("uix-divider__border")}></div>
          ${label &&
          html`<div class=${this.generateTheme("uix-divider__label")}>
              ${label}
            </div>
            <div class=${this.generateTheme("uix-divider__border")}></div>`}
        </div>`;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/ui.package.js`:

```````js
import {
  html,
  staticHtml,
  unsafeStatic,
} from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

const TAG_MAP = {
  "4xl": "h1",
  "3xl": "h2",
  "2xl": "h2",
  xl: "h2",
  lg: "h3",
  md: "h4",
  sm: "h5",
  xs: "h6",
};

export default {
  views: {
    "uix-avatar": {
      props: {
        src: T.string(),
        alt: T.string({ defaultValue: "" }),
        size: T.string({ defaultValue: "sm" }),
        placeholder: T.string({ defaultValue: "" }),
      },
      render: function () {
        const { src, alt, placeholder } = this;
        let content;
        if (src) {
          content = html`<img
            src=${src}
            class=${this.generateTheme("uix-avatar__img")}
            alt=${alt}
          />`;
        } else if (placeholder) {
          content = html`<span class=${this.generateTheme("uix-avatar__img")}
            >${placeholder}</span
          >`;
        }

        return html`
          <div class=${this.generateTheme("uix-avatar")}>${content}</div>
        `;
      },
    },

    "uix-badge": {
      props: {
        size: T.string({ defaultValue: "xs" }),
        variant: T.string({ defaultValue: "default" }),
        icon: T.string({ defaultValue: null }),
      },
      render: function () {
        return html`
          <span @click=${this.click} class=${this.generateTheme("uix-badge")}>
            <slot></slot>
          </span>
        `;
      },
    },
    "uix-icon": {
      props: {
        name: T.string(),
        size: T.string({ defaultValue: "" }),
        containerClass: T.string(),
      },
      render: function () {
        const { name } = this;
        return html`<ion-icon name=${name} role="img"></ion-icon>`;
      },
    },
    "uix-loading": {
      props: {
        isVisible: T.boolean(),
        message: T.string({ defaultValue: null }),
        size: T.string({ defaultValue: "md" }),
        variant: T.string({ defaultValue: "primary" }),
      },
      render: function () {
        const { isVisible, message, type, size } = this;
        if (!isVisible) return html``;
        const Loading = {
          spinner: "loading loading-spinner",
          dots: "loading loading-dots",
          ring: "loading loading-ring",
          ball: "loading loading-ball",
          bars: "loading loading-bars",
          infinity: "loading loading-infinity",
        };
        const LoadingSize = {
          lg: "loading-lg",
          md: "loading-md",
          sm: "loading-sm",
          xs: "loading-xs",
        };

        const loadingClass = `${Loading[type]} ${LoadingSize[size]}`;

        return html`
          <span class="${loadingClass}">
            ${message ? html`<span>${message}</span>` : ""}
            ${message && type === "spinner"
    ? html`<uix-icon name="spinner"></uix-icon>`
    : ""}
          </span>
        `;
      },
    },
    "uix-text": {
      props: {
        size: T.string({}),
        variant: T.string({ defaultValue: "default" }),
        weight: T.string({ defaultValue: "" }),
        font: T.string({ defaultValue: "sans" }),
        leading: T.string({}),
      },
      render: function () {
        const { size } = this;

        const tag = TAG_MAP[size] || "p";
        return staticHtml`
              <${unsafeStatic(tag)} class="${unsafeStatic(
  `${this.generateTheme("uix-text")}`,
)}">
                <slot></slot>
              </${unsafeStatic(tag)}>
            `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/uix/form.package.js`:

```````js
import {
  css,
  html,
  ifDefined,
} from "https://cdn.jsdelivr.net/gh/lit/dist@3.1.3/all/lit-all.min.js";

import { T } from "helpers/types.js";

const FormControls = (element) => ({
  reportValidity: function () {
    const validity = this.$input?.reportValidity();
    if (!validity) {
      //this.$input.setCustomValidity("");
      this.$input.classList.add("input-error");
    } else {
      this.$input.classList.remove("input-error");
    }
    return validity;
  },
  change: function (e) {
    this._setValue(e.target.value, this);
  },
  _getValue: function () {
    return this.$input ? this.$input.value : "";
  },
  _setValue: function (value) {
    this.$input.value = value;
    let formData = new FormData();
    const name = this.$input.name;
    formData.append(name, value);

    setTimeout(() => {
      this._internals.setFormValue(formData);
      this._internals.setValidity(
        this.$input.validity,
        this.$input.validationMessage,
        this.$input,
      );
      //this.reportValidity();
    }, 0);
  },
  formAssociated: true,
  firstUpdated: function () {
    this._defaultValue = this.value;
    this._internals = this.attachInternals();
    if (!this.$input) {
      this.$input = this.q(element || "input");
      if (this.$input) {
        this._internals.setValidity(
          this.$input.validity,
          this.$input.validationMessage,
          this.$input,
        );
      }
    }
  },
  formResetCallback() {
    if (!["submit", "button", "reset"].includes(this.$input.type))
      this.$input.value = this._defaultValue || "";
  },
  formDisabledCallback(disabled) {
    this.$input.disabled = disabled;
  },
  formStateRestoreCallback(state) {
    this.$input.value = state;
  },
});
const InputField = (props) =>
  html`
    <uix-input
      .input=${props.input}
      ?autofocus=${props.autofocus}
      ?disabled=${props.disabled}
      ?required=${props.required}
      name=${props.name}
      value=${ifDefined(props.value)}
      placeholder=${ifDefined(props.placeholder)}
      regex=${ifDefined(props.regex)}
      type=${ifDefined(props.formType || props.type)}
      maxLength=${ifDefined(props.maxLength)}
      variant=${ifDefined(props.variant)}
      color=${ifDefined(props.color)}
      size=${ifDefined(props.size)}
      containerClass="w-full"
    >
    </uix-input>
  `;

const TextareaField = (props) => html`
  <uix-textarea
    .input=${props.input}
    ?disabled=${props.disabled}
    ?required=${props.required}
    ?autofocus=${props.autofocus}
    value=${ifDefined(props.value)}
    placeholder=${ifDefined(props.placeholder)}
    rows=${ifDefined(props.rows)}
    variant=${ifDefined(props.variant)}
    color=${ifDefined(props.color)}
    size=${ifDefined(props.size)}
    label=${ifDefined(props.label)}
    labelAlt=${ifDefined(props.labelAlt)}
    name=${props.name}
    containerClass="w-full"
  ></uix-textarea>
`;

const SelectField = (props) => html`
  <uix-select
    .options=${props.options}
    ?required=${props.required}
    color=${ifDefined(props.color)}
    label=${ifDefined(props.label)}
    altLabel=${ifDefined(props.altLabel)}
    name=${props.name}
    size=${ifDefined(props.size)}
    containerClass="w-full"
  ></uix-select>
`;

const fieldRenderers = {
  input: InputField,
  textarea: TextareaField,
  select: SelectField,
};

const renderField = (field, host) => {
  const { type, formType, llm, ...props } = field;
  const FieldRenderer =
    fieldRenderers[formType || type] || fieldRenderers.input;
  const keydown = (e) => {
    //if (e.key === "Enter") {
    //   host.submit();
    //}
    return props.keydown?.(e);
  };

  const fieldComponent = FieldRenderer({
    ...props,
    type: formType || type,
    keydown,
  });

  if (field.label || (field.labelAlt && field.labelAlt.length)) {
    return html`
      <uix-form-control
        .label=${field.label || ""}
        .labelAlt=${llm
    ? [
      html`<uix-icon
                class="cursor-pointer"
                name="brush-outline"
                @click=${() => host.wizardForm(field.name)}
              >
              </uix-icon>`,
    ]
    : field.labelAlt || []}
      >
        ${fieldComponent}
      </uix-form-control>
    `;
  }

  return fieldComponent;
};

export default {
  i18n: {},
  views: {
    "uix-form": {
      props: {
        fields: T.array(),
        actions: T.array(),
        method: T.string({ defaultValue: "post" }),
        endpoint: T.string(),
        llm: T.object(),
      },
      getForm: function () {
        if (!this.$form) this.$form = this.renderRoot.querySelector("form");
        return this.$form;
      },
      validate: function () {
        const formControls = this.getForm().querySelectorAll(
          "uix-input, uix-select, uix-textarea, uix-file-input",
        );
        let isFormValid = true;
        formControls.forEach((control) => {
          if (!control.reportValidity()) {
            isFormValid = false;
          }
        });

        return isFormValid;
      },
      submit: function () {
        if (this.validate()) {
          this.getForm().submit();
        }
      },
      reset: function () {
        const formControls = this.getForm().querySelectorAll(
          "uix-input, uix-select, uix-textarea, uix-file-input",
        );
        formControls.forEach((control) => {
          control.formResetCallback?.();
        });
      },
      formData: function () {
        const form = this.getForm();
        const formData = new FormData(form);
        const data = {};
        formData.forEach((value, key) => {
          data[key] = value;
        });
        return data;
      },
      wizardForm: async function (name) {
        const data = this.formData();
        const magicField = data[name];
        if (magicField) {
          const prompt = `
          Help me create the JSON with an object with the fields:
          Events -
          ${JSON.stringify(this.fields)}
                    
          reply in the format:
          '''
          { prop1: value, prop2: value }
          '''

          only the JSON response, nothing else. 
           
          we have a system that the user can supply a basic summary 
          and we will analyze it, improve and complete the fields based on the description or make assumptions
          for example:
          Dentist tomorrow 4pm would become
          
          would become:
          {
            "summary": "Dentist Appointment",
            "description": "Going to the dentist for a check-up.",
            "cron": "0 20 16 10 ? 2023",
            "duration": 3600000
          }

          Pay attention to the cron format. For summary, reuse and expand and fix the supplied summary.

          Today is ${new Date()}.
          user prompt (summary):
          ${magicField}
          `;
          const response = await this.llm.send(prompt);
          const form = this.getForm();
          const obj = JSON.parse(response);
          Object.keys(obj).forEach((key) =>
            form.elements[key].setValue(obj[key]),
          );
        }
      },

      renderField: function (row) {
        if (Array.isArray(row)) {
          return html`
            <uix-list>
              ${row.map((field) => {
    return html`<uix-block spacing="0" class="w-full">
                  ${renderField(field, this)}
                </uix-block>`;
  })}
            </uix-list>
          `;
        } else {
          return renderField(row, this);
        }
      },
      render: function () {
        const { fields, actions, method, endpoint, renderField } = this;
        return html`
          <form class="m-0" method=${method} action=${endpoint}>
            <uix-list gap="lg" vertical>
              ${fields.map((field) => renderField(field))}
            </uix-list>
            <uix-list>
              ${actions
    ? html`<uix-list responsive gap="md" class="mx-auto mt-10">
                    ${actions.map(
    (action) => html`<uix-input
                        type=${action.type}
                        @click=${action.click}
                        class=${action.class}
                        value=${action.value}
                      >
                      </uix-input>`,
  )}
                  </uix-list>`
    : ""}
            </uix-list>
          </form>
        `;
      },
    },
    "uix-form-control": {
      props: {
        label: T.string({ type: String, defaultValue: null }),
        labelAlt: T.array({ defaultValue: [] }),
      },
      render: function () {
        const { label, labelAlt } = this;
        return html`
          <div class="form-control w-full">
            ${label
    ? html`<label class="label"
                  ><span class="label-text">${label}</span></label
                >`
    : ""}
            <slot></slot>
            ${labelAlt && labelAlt.length
    ? html` <label class="label">
                  ${labelAlt.map(
    (alt) => html`<span class="label-text-alt">${alt}</span>`,
  )}
                </label>`
    : ""}
          </div>
        `;
      },
    },
    "uix-input": {
      props: {
        autofocus: T.boolean(),
        value: T.string(),
        placeholder: T.string(),
        name: T.string(),
        disabled: T.boolean(),
        regex: T.string(),
        required: T.boolean(),
        type: T.string({
          defaultValue: "text",
          enum: [
            "text",
            "password",
            "email",
            "number",
            "decimal",
            "search",
            "tel",
            "url",
          ],
        }),
        maxLength: T.number(),
        variant: T.string({
          defaultValue: "default",
        }),
        size: T.string({
          defaultValue: "md",
        }),
        keydown: T.function(),
      },
      ...FormControls("input"),
      render: function () {
        const {
          name,
          autofocus,
          value,
          change,
          placeholder,
          disabled,
          required,
          regex,
          type,
          keydown,
        } = this;

        return html`
          <div class="relative">
            <input
              type="text"
              id="filled"
              style="line-height: 1.05rem;/*quick hack, should find a better fix*/"
              aria-describedby="filled_success_help"
              class=${this.generateTheme("uix-input")}
              .value=${value || ""}
              ?autofocus=${autofocus}
              ?disabled=${disabled}
              ?required=${required}
              name=${ifDefined(name)}
              regex=${ifDefined(regex)}
              @keydown=${keydown}
              @change=${change}
              type=${type}
              placeholder=" "
            />
            <label for="filled" class=${this.generateTheme("uix-input__label")}>
              ${placeholder}
            </label>
          </div>
        `;
      },
    },
    "uix-select-option": {
      props: {
        value: T.string(),
        label: T.string(),
      },
      render: function () {
        const { value, label } = this;
        return html` <option value=${value}>${label}</option> `;
      },
    },
    "uix-select": {
      ...FormControls("select"),
      props: {
        options: T.array(),
        value: T.string(),
        variant: T.string({ defaultValue: "base" }),
        size: T.string({ defaultValue: "md" }),
        name: T.string(),
      },
      render: function () {
        const { name, options } = this;
        return html`
          <select
            name=${name}
            @change=${this.change}
            class=${this.generateTheme("uix-select")}
          >
            ${(options &&
              options.map((option) => html` <option>${option}</option> `)) ||
            ""}
            <slot></slot>
          </select>
        `;
      },
    },

    "uix-textarea": {
      props: {
        value: T.string(),
        placeholder: T.string(),
        name: T.string(),
        disabled: T.boolean(),
        required: T.boolean(),
        autofocus: T.boolean(),
        rows: T.number({ defaultValue: 4 }),
        variant: T.string({ defaultValue: "bordered" }),
        size: T.string({ defaultValue: "md" }),
        input: T.function(),
        keydown: T.function(),
      },
      ...FormControls("textarea"),
      render: function () {
        const {
          autofocus,
          value,
          name,
          placeholder,
          disabled,
          rows,
          required,
          keydown,
        } = this;

        return html`
          <textarea
            class=${this.generateTheme("uix-textarea")}
            placeholder=${placeholder}
            ?disabled=${disabled}
            name=${name}
            rows=${rows}
            ?autofocus=${autofocus}
            ?required=${required}
            @input=${this.change}
            @keydown=${keydown}
          >
${value}</textarea
          >
        `;
      },
    },
    "uix-range": {
      props: {
        variant: T.string(),
        min: T.number({ defaultValue: 0 }),
        value: T.number({ defaultValue: 0 }),
        max: T.number({ defaultValue: 100 }),
      },
      ...FormControls("range"),
      render: function () {
        const { generateTheme, min, max, value } = this;
        return html`<div>
          <input
            class=${generateTheme("uix-range")}
            type="range"
            @input=${this.change}
            min=${min}
            max=${max}
            value=${value}
          />
          <div class="-mt-2 flex w-full justify-between">
            <span class="text-sm text-gray-600">Squared</span>
            <span class="text-sm text-gray-600">Rounded</span>
          </div>
        </div>`;
      },
    },

    "uix-checkbox": {
      style: [
        css`
          input[type="checkbox"] {
            // TODO: set borderRadius as a css variable and use here for the border
            clip-path: circle(46% at 50% 50%); /* Set the clip path of circle*/
          }
        `,
      ],
      props: {
        name: T.string(),
        variant: T.string({ defaultValue: "default" }),
        size: T.string({ defaultValue: "md" }),
        checked: T.boolean(),
        value: T.boolean(),
        disabled: T.boolean(),
        change: T.function(),
      },
      ...FormControls("toggle"),
      render: function () {
        const { checked, change, disabled, name } = this;

        return html`
          <input
            class=${this.generateTheme("uix-checkbox")}
            type="checkbox"
            name=${name}
            @change=${function (e) {
    this.setChecked(e.target.checked);
    change?.(e);
  }}
            ?checked=${checked}
            ?disabled=${disabled}
          />
        `;
      },
    },
    "uix-icon-button": {
      props: {
        icon: T.string(),
        variant: T.string(),
        size: T.string(),
        alt: T.string(),
      },
      render: function () {
        const { icon, alt } = this;
        return html`<button
          alt=${alt}
          class=${this.generateTheme("uix-icon-button")}
        >
          <uix-icon
            class=${this.generateTheme("uix-icon-button__icon")}
            name=${icon}
          ></uix-icon>
        </button>`;
      },
    },
    "uix-button": {
      props: {
        size: T.string({ defaultValue: "md" }),
        variant: T.string({ defaultValue: "default" }),
        type: T.string({ defaultValue: "button" }),
        href: T.string(),
        click: T.function(),
        dropdown: T.string(),
      },
      render: function () {
        const { type, click, href, dropdown } = this;
        const btnClass = this.generateTheme("uix-button");
        if (dropdown) {
          return html` <details class="text-left" ?open=${dropdown === "open"}>
            ${(href &&
              html`<summary class=${btnClass}>
                <a href=${href}><slot></slot></a>
              </summary>`) ||
            ""}
            ${(!href &&
              html`<summary class=${btnClass}><slot></slot></summary>`) ||
            ""}
            <slot name="dropdown"></slot>
          </details>`;
        }
        return href
          ? html`
              <a
                class=${btnClass}
                href=${href}
                @click=${(event) => click?.({ event, props: this })}
              >
                <slot></slot>
              </a>
            `
          : html`
              <button
                type=${type || "button"}
                class=${btnClass}
                @click=${(event) => click?.({ event, props: this })}
              >
                <slot></slot>
              </button>
            `;
      },
    },
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/pnpm-lock.yaml`:

```````yaml
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    dependencies:
      helpers:
        specifier: file:../helpers
        version: file:../helpers
    devDependencies:
      esbuild:
        specifier: ^0.21.3
        version: 0.21.3

packages:

  '@esbuild/aix-ppc64@0.21.3':
    resolution: {integrity: sha512-yTgnwQpFVYfvvo4SvRFB0SwrW8YjOxEoT7wfMT7Ol5v7v5LDNvSGo67aExmxOb87nQNeWPVvaGBNfQ7BXcrZ9w==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [aix]

  '@esbuild/android-arm64@0.21.3':
    resolution: {integrity: sha512-c+ty9necz3zB1Y+d/N+mC6KVVkGUUOcm4ZmT5i/Fk5arOaY3i6CA3P5wo/7+XzV8cb4GrI/Zjp8NuOQ9Lfsosw==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [android]

  '@esbuild/android-arm@0.21.3':
    resolution: {integrity: sha512-bviJOLMgurLJtF1/mAoJLxDZDL6oU5/ztMHnJQRejbJrSc9FFu0QoUoFhvi6qSKJEw9y5oGyvr9fuDtzJ30rNQ==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [android]

  '@esbuild/android-x64@0.21.3':
    resolution: {integrity: sha512-JReHfYCRK3FVX4Ra+y5EBH1b9e16TV2OxrPAvzMsGeES0X2Ndm9ImQRI4Ket757vhc5XBOuGperw63upesclRw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [android]

  '@esbuild/darwin-arm64@0.21.3':
    resolution: {integrity: sha512-U3fuQ0xNiAkXOmQ6w5dKpEvXQRSpHOnbw7gEfHCRXPeTKW9sBzVck6C5Yneb8LfJm0l6le4NQfkNPnWMSlTFUQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [darwin]

  '@esbuild/darwin-x64@0.21.3':
    resolution: {integrity: sha512-3m1CEB7F07s19wmaMNI2KANLcnaqryJxO1fXHUV5j1rWn+wMxdUYoPyO2TnAbfRZdi7ADRwJClmOwgT13qlP3Q==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [darwin]

  '@esbuild/freebsd-arm64@0.21.3':
    resolution: {integrity: sha512-fsNAAl5pU6wmKHq91cHWQT0Fz0vtyE1JauMzKotrwqIKAswwP5cpHUCxZNSTuA/JlqtScq20/5KZ+TxQdovU/g==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [freebsd]

  '@esbuild/freebsd-x64@0.21.3':
    resolution: {integrity: sha512-tci+UJ4zP5EGF4rp8XlZIdq1q1a/1h9XuronfxTMCNBslpCtmk97Q/5qqy1Mu4zIc0yswN/yP/BLX+NTUC1bXA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [freebsd]

  '@esbuild/linux-arm64@0.21.3':
    resolution: {integrity: sha512-vvG6R5g5ieB4eCJBQevyDMb31LMHthLpXTc2IGkFnPWS/GzIFDnaYFp558O+XybTmYrVjxnryru7QRleJvmZ6Q==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [linux]

  '@esbuild/linux-arm@0.21.3':
    resolution: {integrity: sha512-f6kz2QpSuyHHg01cDawj0vkyMwuIvN62UAguQfnNVzbge2uWLhA7TCXOn83DT0ZvyJmBI943MItgTovUob36SQ==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [linux]

  '@esbuild/linux-ia32@0.21.3':
    resolution: {integrity: sha512-HjCWhH7K96Na+66TacDLJmOI9R8iDWDDiqe17C7znGvvE4sW1ECt9ly0AJ3dJH62jHyVqW9xpxZEU1jKdt+29A==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [linux]

  '@esbuild/linux-loong64@0.21.3':
    resolution: {integrity: sha512-BGpimEccmHBZRcAhdlRIxMp7x9PyJxUtj7apL2IuoG9VxvU/l/v1z015nFs7Si7tXUwEsvjc1rOJdZCn4QTU+Q==}
    engines: {node: '>=12'}
    cpu: [loong64]
    os: [linux]

  '@esbuild/linux-mips64el@0.21.3':
    resolution: {integrity: sha512-5rMOWkp7FQGtAH3QJddP4w3s47iT20hwftqdm7b+loe95o8JU8ro3qZbhgMRy0VuFU0DizymF1pBKkn3YHWtsw==}
    engines: {node: '>=12'}
    cpu: [mips64el]
    os: [linux]

  '@esbuild/linux-ppc64@0.21.3':
    resolution: {integrity: sha512-h0zj1ldel89V5sjPLo5H1SyMzp4VrgN1tPkN29TmjvO1/r0MuMRwJxL8QY05SmfsZRs6TF0c/IDH3u7XYYmbAg==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [linux]

  '@esbuild/linux-riscv64@0.21.3':
    resolution: {integrity: sha512-dkAKcTsTJ+CRX6bnO17qDJbLoW37npd5gSNtSzjYQr0svghLJYGYB0NF1SNcU1vDcjXLYS5pO4qOW4YbFama4A==}
    engines: {node: '>=12'}
    cpu: [riscv64]
    os: [linux]

  '@esbuild/linux-s390x@0.21.3':
    resolution: {integrity: sha512-vnD1YUkovEdnZWEuMmy2X2JmzsHQqPpZElXx6dxENcIwTu+Cu5ERax6+Ke1QsE814Zf3c6rxCfwQdCTQ7tPuXA==}
    engines: {node: '>=12'}
    cpu: [s390x]
    os: [linux]

  '@esbuild/linux-x64@0.21.3':
    resolution: {integrity: sha512-IOXOIm9WaK7plL2gMhsWJd+l2bfrhfilv0uPTptoRoSb2p09RghhQQp9YY6ZJhk/kqmeRt6siRdMSLLwzuT0KQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [linux]

  '@esbuild/netbsd-x64@0.21.3':
    resolution: {integrity: sha512-uTgCwsvQ5+vCQnqM//EfDSuomo2LhdWhFPS8VL8xKf+PKTCrcT/2kPPoWMTs22aB63MLdGMJiE3f1PHvCDmUOw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [netbsd]

  '@esbuild/openbsd-x64@0.21.3':
    resolution: {integrity: sha512-vNAkR17Ub2MgEud2Wag/OE4HTSI6zlb291UYzHez/psiKarp0J8PKGDnAhMBcHFoOHMXHfExzmjMojJNbAStrQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [openbsd]

  '@esbuild/sunos-x64@0.21.3':
    resolution: {integrity: sha512-W8H9jlGiSBomkgmouaRoTXo49j4w4Kfbl6I1bIdO/vT0+0u4f20ko3ELzV3hPI6XV6JNBVX+8BC+ajHkvffIJA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [sunos]

  '@esbuild/win32-arm64@0.21.3':
    resolution: {integrity: sha512-EjEomwyLSCg8Ag3LDILIqYCZAq/y3diJ04PnqGRgq8/4O3VNlXyMd54j/saShaN4h5o5mivOjAzmU6C3X4v0xw==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [win32]

  '@esbuild/win32-ia32@0.21.3':
    resolution: {integrity: sha512-WGiE/GgbsEwR33++5rzjiYsKyHywE8QSZPF7Rfx9EBfK3Qn3xyR6IjyCr5Uk38Kg8fG4/2phN7sXp4NPWd3fcw==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [win32]

  '@esbuild/win32-x64@0.21.3':
    resolution: {integrity: sha512-xRxC0jaJWDLYvcUvjQmHCJSfMrgmUuvsoXgDeU/wTorQ1ngDdUBuFtgY3W1Pc5sprGAvZBtWdJX7RPg/iZZUqA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [win32]

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}

  braces@3.0.2:
    resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}
    engines: {node: '>=8'}

  chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}

  esbuild@0.21.3:
    resolution: {integrity: sha512-Kgq0/ZsAPzKrbOjCQcjoSmPoWhlcVnGAUo7jvaLHoxW1Drto0KGkR1xBNg2Cp43b9ImvxmPEJZ9xkfcnqPsfBw==}
    engines: {node: '>=12'}
    hasBin: true

  fill-range@7.0.1:
    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}
    engines: {node: '>=8'}

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  helpers@file:../helpers:
    resolution: {directory: ../helpers, type: directory}

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  ws@8.17.0:
    resolution: {integrity: sha512-uJq6108EgZMAl20KagGkzCKfMEjxmKvZHG7Tlq0Z6nOky7YF7aq4mOx6xK8TJ/i1LeK4Qus7INktacctDgY8Ow==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

snapshots:

  '@esbuild/aix-ppc64@0.21.3':
    optional: true

  '@esbuild/android-arm64@0.21.3':
    optional: true

  '@esbuild/android-arm@0.21.3':
    optional: true

  '@esbuild/android-x64@0.21.3':
    optional: true

  '@esbuild/darwin-arm64@0.21.3':
    optional: true

  '@esbuild/darwin-x64@0.21.3':
    optional: true

  '@esbuild/freebsd-arm64@0.21.3':
    optional: true

  '@esbuild/freebsd-x64@0.21.3':
    optional: true

  '@esbuild/linux-arm64@0.21.3':
    optional: true

  '@esbuild/linux-arm@0.21.3':
    optional: true

  '@esbuild/linux-ia32@0.21.3':
    optional: true

  '@esbuild/linux-loong64@0.21.3':
    optional: true

  '@esbuild/linux-mips64el@0.21.3':
    optional: true

  '@esbuild/linux-ppc64@0.21.3':
    optional: true

  '@esbuild/linux-riscv64@0.21.3':
    optional: true

  '@esbuild/linux-s390x@0.21.3':
    optional: true

  '@esbuild/linux-x64@0.21.3':
    optional: true

  '@esbuild/netbsd-x64@0.21.3':
    optional: true

  '@esbuild/openbsd-x64@0.21.3':
    optional: true

  '@esbuild/sunos-x64@0.21.3':
    optional: true

  '@esbuild/win32-arm64@0.21.3':
    optional: true

  '@esbuild/win32-ia32@0.21.3':
    optional: true

  '@esbuild/win32-x64@0.21.3':
    optional: true

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  binary-extensions@2.3.0: {}

  braces@3.0.2:
    dependencies:
      fill-range: 7.0.1

  chokidar@3.6.0:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.2
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  esbuild@0.21.3:
    optionalDependencies:
      '@esbuild/aix-ppc64': 0.21.3
      '@esbuild/android-arm': 0.21.3
      '@esbuild/android-arm64': 0.21.3
      '@esbuild/android-x64': 0.21.3
      '@esbuild/darwin-arm64': 0.21.3
      '@esbuild/darwin-x64': 0.21.3
      '@esbuild/freebsd-arm64': 0.21.3
      '@esbuild/freebsd-x64': 0.21.3
      '@esbuild/linux-arm': 0.21.3
      '@esbuild/linux-arm64': 0.21.3
      '@esbuild/linux-ia32': 0.21.3
      '@esbuild/linux-loong64': 0.21.3
      '@esbuild/linux-mips64el': 0.21.3
      '@esbuild/linux-ppc64': 0.21.3
      '@esbuild/linux-riscv64': 0.21.3
      '@esbuild/linux-s390x': 0.21.3
      '@esbuild/linux-x64': 0.21.3
      '@esbuild/netbsd-x64': 0.21.3
      '@esbuild/openbsd-x64': 0.21.3
      '@esbuild/sunos-x64': 0.21.3
      '@esbuild/win32-arm64': 0.21.3
      '@esbuild/win32-ia32': 0.21.3
      '@esbuild/win32-x64': 0.21.3

  fill-range@7.0.1:
    dependencies:
      to-regex-range: 5.0.1

  fsevents@2.3.3:
    optional: true

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  helpers@file:../helpers:
    dependencies:
      chokidar: 3.6.0
      ws: 8.17.0
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.3.0

  is-extglob@2.1.1: {}

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-number@7.0.0: {}

  normalize-path@3.0.0: {}

  picomatch@2.3.1: {}

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  ws@8.17.0: {}

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/index.js`:

```````js
import BaseReactiveView, {
  instances as reactiveViewInstances,
} from "./reactive-view.js";
import reset from "./reset.txt";
import baseTheme from "./theme.js";
import appKit from "./uix/app.package.js";
import chatKit from "./uix/chat.package.js";
import contentKit from "./uix/content.package.js";
import crudKit from "./uix/crud.package.js";
import datetimeKit from "./uix/datetime.package.js";
import docsKit from "./uix/docs.package.js";
import formKit from "./uix/form.package.js";
import layoutKit from "./uix/layout.package.js";
import navigationKit from "./uix/navigation.package.js";
import uiKit from "./uix/ui.package.js";
/**
 * Defines and registers a custom element based on the provided configuration.
 *
 * @param {Object} component - The configuration object for the custom element.
 * @param {Object} [config={}] - Additional configuration parameters.
 * @returns {typeof LitElement}
 */
const TYPE_MAP = {
  boolean: Boolean,
  number: Number,
  string: String,
  object: Object,
  date: Date,
  array: Array,
};

let _tailwindBase;
function defineView({ tag, component, style }) {
  const { props, formAssociated, style: componentStyle } = component;
  class ReactiveView extends BaseReactiveView {
    static formAssociated = formAssociated;
    static properties = !props
      ? {}
      : Object.keys(props).reduce((acc, key) => {
        const value = props[key];
        acc[key] = {
          ...value,
          type: TYPE_MAP[value.type] || TYPE_MAP["string"],
        };
        return acc;
      }, {});

    constructor() {
      super({ component });
    }
  }

  if (!_tailwindBase) {
    _tailwindBase = new CSSStyleSheet();
    _tailwindBase.replaceSync([reset, style].join(" "));
  }

  if (Array.isArray(componentStyle))
    ReactiveView.styles = componentStyle.concat(_tailwindBase).filter(Boolean);

  customElements.define(tag, ReactiveView);
  return ReactiveView;
}

const definePackage = ({ pkg, style }) => {
  const views = Object.fromEntries(
    Object.entries(pkg.views).map(([tag, component]) => {
      return [
        tag,
        defineView({
          tag,
          component,
          style,
        }),
      ];
    }),
  );
  return { views, models: pkg.models, controllers: pkg.controllers };
};

export {
  appKit,
  baseTheme,
  chatKit,
  contentKit,
  crudKit,
  datetimeKit,
  definePackage,
  defineView,
  docsKit,
  formKit,
  layoutKit,
  navigationKit,
  reactiveViewInstances,
  reset,
  uiKit
};

```````

`/home/alanleal/Projects/bootstrapp/libs/frontend/package.json`:

```````json
{
  "name": "frontend",
  "type": "module",
  "version": "0.1.1",
  "main": "./index.js",
  "module": "./index.js",
  "scripts": {
    "build": "node esbuild.config.js",
    "dev": "node esbuild.config.js --watch"
  },
  "devDependencies": {
    "esbuild": "^0.21.3"
  },
  "dependencies": {
    "helpers": "workspace:*"
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/README.md`:

```````md
# backend

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/constants.js`:

```````js
export const BOOL_TABLE = { false: false, true: true };

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/appstate/events.js`:

```````js
import { defineModels, models } from "../appstate/index.js";
import { getApiModel, initApp } from "./index.js";

export const events = {
  INIT_BACKEND: async (data, { source }) => {
    //Controller = source;
    console.log("DEBUG: INIT_BACKEND");
    const app = await initApp(data.appId, data.models, data.version);
    const { appId } = app;
    source.postMessage({
      type: "BACKEND_INITIALIZED",
      appId,
    });
  },
  DEFINE_MODELS: async (data, { source }) => {
    //Controller = source;
    const { models, appId, userId, suffix, version = 1 } = data;
    if (models) await defineModels({ models, appId, userId, suffix, version });
    await getApiModel();
    source.postMessage({
      type: "MODELS_DEFINED",
    });
  },
  PAGE_BUILDER_UPDATE_PAGE: async (data, { P2P }) => {
    const { title, url } = data;
    await getApiModel();
    const TabsModel = models.tabs;
    const tabs = await TabsModel.getMany();
    const updateTabs = tabs
      .filter((tab) => tab.title === title)
      .map((tab) => ({ ...tab, url }));
    TabsModel.editMany(updateTabs);
    P2P.execute((client) => {
      if (client.url.includes(url.split("#")[0])) {
        client.navigate(url);
      }
    });
  },
  SYNC_DATA: async (data, { requestUpdate }) => {
    const { data: syncData } = data;
    for (let [modelName, entries] of Object.entries(syncData)) {
      const model = models[modelName];
      if (model) model?.setMany(entries);
    }

    requestUpdate();
  },

  REQUEST_UPDATE: async (data, { requestUpdate }) => {
    const { store } = data || {};
    requestUpdate(store);
  },

  OPLOG_WRITE: async (data, { requestUpdate, P2P }) => {
    const { bridge, store, modelName, key, value } = data;
    const { models } = await getApiModel();
    const model = models[modelName];
    if (model) {
      if (value) {
        await model.setItem(key, value);
      } else {
        await model.removeItem(key);
      }

      // TODO: When sending the message to another user, we need to append the user id who sent it
      if (!bridge)
        P2P.postMessage({ type: "OPLOG_WRITE", store, modelName, key, value });

      if (data.requestUpdate) requestUpdate();
    }
  },
};

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/appstate/utils.js`:

```````js
function decodePath(encodedSegment) {
  return encodedSegment.replace(/%2F/g, "/");
}

export function getDefaultCRUDEndpoints(modelName, endpoints = {}) {
  return {
    [`GET /api/${modelName}`]: function (opts = {}) {
      return this.getMany(null, opts);
    },
    [`GET /api/${modelName}/:id`]: function ({ id, ...opts }) {
      return this.get(decodePath(id), opts);
    },
    [`POST /api/${modelName}`]: function (payload) {
      return Array.isArray(payload) ? this.addMany(payload) : this.add(payload);
    },
    [`DELETE /api/${modelName}/:id`]: function ({ id }) {
      return this.remove(decodePath(id));
    },
    [`PATCH /api/${modelName}/:id`]: function ({ id, ...rest }) {
      return this.edit({ id: decodePath(id), ...rest });
    },
    ...endpoints,
  };
}

export const endpointToRegex = (endpoint) => {
  const [method, path] = endpoint.split(" ");
  const regexPath = path
    .split("/")
    .map((part) => (part.startsWith(":") ? "([^/]+)" : part))
    .join("/");
  return new RegExp(`^${method} ${regexPath}/?$`);
};

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/appstate/index.js`:

```````js
import idbAdapter from "../indexeddb/index.js";
import { ReactiveRecord } from "../reactive-record/index.js";
import { fromBase62, toBase62 } from "../utils.js";
import { events } from "./events.js";
import { endpointToRegex, getDefaultCRUDEndpoints } from "./utils.js";
export { events };
export let appId;
export let api;
const workspaceModelName = "workspaces";
export const workspaceModelDefinition = {
  appId: {
    type: "string",
    defaultValue: "",
    enum: [],
    primary: true,
  },
  userId: {
    type: "string",
    defaultValue: "",
    enum: [],
  },
  models: {
    type: "object",
  },
  controllers: {
    type: "object",
  },
  windows: {
    type: "many",
    relationship: "windows",
    targetForeignKey: "workspace",
  },
};

export const defineModel = async (name, module, props) => {
  const { appId, userId, oplog, models, store } = props;
  const model = new ReactiveRecord(module, {
    name,
    appId,
    userId,
    oplog,
    models,
    store,
  });
  model.definition = module;
  return model;
};

export const defineModels = async (props) => {
  const { appId, suffix, userId, oplog = false, version = 1 } = props;
  const modelList = props.models;
  let dbName = props.dbName || appId;
  if (suffix) dbName = [dbName, suffix].join("_");

  const stores = await idbAdapter.createDatabase(
    dbName,
    Object.keys(modelList),
    version,
  );

  const initialData = [];

  for (const [name, module] of Object.entries(modelList)) {
    const model = await defineModel(name, module, {
      appId,
      userId,
      oplog,
      models,
      store: stores[name],
    });
    models[name] = model;
    if (module._initialData) initialData.push([name, module._initialData]);
  }

  if (initialData.length > 0) {
    for (const [modelName, data] of initialData) {
      if (await models[modelName].isEmpty()) {
        await models[modelName].addMany(data);
      }
    }
  }

  return models;
};

let baseModels;
export let models = {};

(async () => {
  const models = await defineModels({
    models: { [workspaceModelName]: workspaceModelDefinition },
    dbName: "_appstate",
  });
  baseModels = models;
})();

export const messageHandler =
  ({ requestUpdate, P2P }) =>
    async (event) => {
      const handler = events[event.data.type];
      if (handler) {
        console.log("DEBUG - frontend event: ", {
          event,
        });
        try {
          const messageHandlerContext = {
            source: event.source,
            requestUpdate,
            P2P,
          };
          await handler(event.data, messageHandlerContext);
        } catch (error) {
          console.error(`Error handling ${event.data.type}:`, error);
        }
      }
    };

export const requestUpdate = () =>
  self.clients
    .matchAll()
    .then((clients) =>
      clients.forEach((client) => client.postMessage("REQUEST_UPDATE")),
    );

export const initApp = async (appId, userModels, version) => {
  const app = await getApp({
    models: { [workspaceModelName]: workspaceModelDefinition, ...userModels },
    WorkspaceModel: baseModels[workspaceModelName],
  });
  await defineModels({
    models: userModels,
    appId: app.appId,
    userId: app.userId,
    version,
  });
  await getApiModel();
  return app;
};

export const getApp = async ({ models, WorkspaceModel }) => {
  const defaultApp = await WorkspaceModel.get("default");
  if (!defaultApp) {
    const appId = toBase62(Date.now());
    await WorkspaceModel.add({ id: "default", appId, models });
    return await WorkspaceModel.add({ id: appId, appId, userId: "1" });
  } else {
    return await WorkspaceModel.get(defaultApp.appId);
  }
};

let timestamp;
export const getBaseTimestamp = async () => {
  if (timestamp) return timestamp;
  if (models[workspaceModelName]) {
    const app = await models[workspaceModelName].get("default");
    timestamp = fromBase62(app.appId);
    return timestamp;
  }
};

export async function getApiModel() {
  if (!api && Object.keys(models).length === Object.keys(baseModels).length) {
    const defaultApp = await models[workspaceModelName].get("default");
    delete defaultApp.models[workspaceModelName];    
    const userModels = await defineModels({
      models: defaultApp.models,
      appId: defaultApp.appId,
    });
    models = { ...userModels, ...baseModels };    
  }
  api = Object.entries(models).reduce((acc, [name, module]) => {
    const model = module.definition;    
    const endpoints = getDefaultCRUDEndpoints(name, model.endpoints);
    console.log({endpoints});
    Object.entries(endpoints).forEach(([endpoint, callback]) => {
      const regex = endpointToRegex(endpoint);
      if (!acc) acc = {};
      acc[endpoint] = {
        regex,
        model: models[name],
        callback,
      };
    });
    return acc;
  }, {});  
  return api;
}

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/esbuild.config.js`:

```````js
// build.js
import { build } from "esbuild";

build({
  entryPoints: ["index.sw.js"],
  bundle: true,
  outfile: "dist/index.js",
  format: "esm", // Output format as ES module
  sourcemap: true, // Optional: for source maps
}).catch(() => process.exit(1));
```````

`/home/alanleal/Projects/bootstrapp/libs/backend/reactive-record/relationship.js`:

```````js
export const UpdateRelationship = {
  one: async function (params) {
    await updateOneRelationship(params);
  },
  many: async function (params) {
    await updateManyRelationship(params);
  },
};

async function updateOneRelationship({
  prevValue,
  value,
  relatedModel,
  id,
  targetForeignKey,
}) {
  const targetType = relatedModel.properties[targetForeignKey]?.type;
  const isMany = targetType === "many";
  const [, prevId] = extractId(prevValue);
  const [position, newId] = (value && extractId(value)) || [];

  if (prevId) {
    await unsetRelation(relatedModel, id, prevId, targetForeignKey, isMany);
  }

  if (newId) {
    await setRelation(
      relatedModel,
      id,
      newId,
      targetForeignKey,
      isMany,
      position,
    );
  }
}

export async function updateManyRelationship({
  prevId,
  value,
  relatedModel,
  id,
  targetForeignKey,
}) {
  const prevIds = ensureArray(prevId);
  const newIds = ensureArray(value);

  const addedIds = newIds.filter((v) => !prevIds.includes(v));
  const removedIds = prevIds.filter((v) => !newIds.includes(v));

  for (const relatedId of addedIds) {
    await setRelation(relatedModel, id, relatedId, targetForeignKey);
  }

  for (const relatedId of removedIds) {
    await unsetRelation(relatedModel, id, relatedId, targetForeignKey);
  }
}

export function ensureArray(value) {
  return Array.isArray(value) ? value : [value];
}

export function extractId(val) {
  return Array.isArray(val) ? val : [null, val];
}

export async function unsetRelation(
  relatedModel,
  id,
  prevId,
  targetForeignKey,
  isMany = false,
) {
  if (!prevId) return;
  let keyToUpdate = `${targetForeignKey}_${prevId}`;
  if (isMany) {
    const prevTarget = await relatedModel.get(prevId, [targetForeignKey]);
    const oldIndex = prevTarget[targetForeignKey] || [];
    if (prevTarget) {
      await relatedModel._setProperty(
        keyToUpdate,
        oldIndex.filter((entry) => entry !== id),
      );
    }
  } else {
    if (keyToUpdate) await relatedModel._setProperty(keyToUpdate, null);
  }
}

export async function setRelation(
  relatedModel,
  id,
  newId,
  targetForeignKey,
  isMany = false,
  position,
) {
  const target = await relatedModel.get(newId, {
    createIfNotFound: true,
    props: [targetForeignKey],
  });
  let newIndex = target[targetForeignKey] || [];

  if (isMany && Array.isArray(newIndex)) {
    if (typeof position === "number") {
      newIndex.splice(position, 0, id);
    } else if (!newIndex.includes(id)) {
      newIndex.push(id);
    }
  } else {
    newIndex = id;
  }
  if (newId && newIndex) {
    await relatedModel._setProperty(`${targetForeignKey}_${newId}`, newIndex);
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/reactive-record/crud.js`:

```````js
import { generateId, getTimestamp } from "../utils.js";
import { unsetRelation, UpdateRelationship } from "./relationship.js";
export class CrudReactiveRecord {
  _generateEntries({ _userId, id: _id, ...value }) {
    let newId = _userId ? _id + "-" + _userId : _id; // TODO: refactor this, big chances of bug
    if (!_id) newId = generateId(this.appId, _userId || this.userId);
    this.lastId = newId;
    const properties = Object.keys(value);
    if (!properties[this.referenceKey]) {
      properties[this.referenceKey] = "";
    }

    return properties.map((prop) => [prop, newId, value[prop]]);
  }

  async _setProperty(key, value) {
    return this.adapter.set([[key, value]], this.store);
  }

  async _unsetMany(keys) {
    for (const key of keys) {
      this.logOp(key, "");
    }
    return this.adapter.remove(keys, this.store);
  }

  /* 
  async getOps() {
    //sinceTimestamp = 0
    // This method fetches all operations after a given timestamp.
    // Can be optimized further based on how oplog is structured.
    const allOperations = await this.adapter.get([], this.oplog);
    return allOperations; // Filtering removed, as the flattened approach doesn't have timestamps. Can be re-added if needed.
  } */

  async _set(entries) {
    const entriesToAdd = [];

    for (const [propKey, id, value] of entries) {
      const key = `${propKey}_${id}`;
      //this.logOp(key, value);
      const prop = this.properties[propKey];
      if (prop?.relationship && ["one", "many"].includes(prop.type)) {
        const relatedModel = this.models[prop.relationship];
        if (!relatedModel)
          throw "ERROR: couldn't find model " + prop.relationship;
        const { targetForeignKey, type } = prop;
        const prevValue = await this.get(id, {
          createIfNotFound: true,
          props: [propKey],
        });
        const relatedProp = relatedModel.properties[targetForeignKey];
        if (relatedProp?.targetForeignKey && prevValue)
          await UpdateRelationship[type]({
            prevValue: prevValue[propKey],
            id,
            value,
            relatedModel,
            targetForeignKey,
          });
      }
      /* 
      if (this.oplog)
        this.constructor.postMessage({
          type: "OPLOG_WRITE",
          store: [this.appId, this.name].join("_"),
          key,
          value,
        }); */
      entriesToAdd.push([key, value]);
    }

    return this.adapter.set(entriesToAdd, this.store);
  }

  async remove(key) {
    const properties = Object.keys(this.properties);
    if (!properties) return;
    for (const propKey of properties) {
      const prop = this.properties[propKey];
      if (prop?.relationship) {
        const prevValue = await this.get(key, [propKey]);
        const relatedModel = this.models[prop.relationship];
        if (!relatedModel) {
          console.error(`ERROR: couldn't find model ${prop.relationship}`);
          continue;
        }
        const { targetForeignKey, type } = prop;
        const targetIsMany = relatedModel.properties[targetForeignKey] &&
          relatedModel.properties[targetForeignKey].type === "many";
        if (type === "one" && prevValue[propKey]) {
          await unsetRelation(
            relatedModel,
            key,
            prevValue[propKey],
            targetForeignKey,
            targetIsMany,
          );
        } else if (type === "many" && Array.isArray(prevValue[propKey])) {
          // TODO: you gotta test this
          for (const relatedId of prevValue[propKey]) {
            await unsetRelation(
              relatedModel,
              relatedId,
              key,
              targetForeignKey,
              targetIsMany,
            );
          }
        }
      }
    }

    // Delete the keys after relationships have been handled
    const keysToDelete = properties.map((prop) => `${prop}_${key}`);
    await this._unsetMany(keysToDelete);
  }

  async removeMany(ids) {
    if (!ids || !ids.length) return;
    return Promise.all(ids.map(async (id) => await this.remove(id)));
  }

  async add(value) {
    const entries = this._generateEntries(value);
    await this._set(entries);
    return await this.get(this.lastId);
  }

  async addMany(values) {
    const allEntries = [];
    for (const value of values) {
      const entries = this._generateEntries(value);
      allEntries.push(...entries);
    }
    await this._set(allEntries);
  }

  async edit({ id, ...value }) {
    const entries = Object.keys(value).map((prop) => [prop, id, value[prop]]);
    await this._set(entries);
    return { id, ...value };
  }

  async editMany(records) {
    if (!records || !records.length) return;
    const allEntries = [];
    for (const record of records) {
      const { id, ...value } = record;
      const entries = Object.keys(value).map((prop) => [prop, id, value[prop]]);
      allEntries.push(...entries);
    }
    await this._set(allEntries);
  }

  async get(id, opts = {}) {
    if (!id) return;
    const { props, nested = false, createIfNotFound = false } = opts;
    const propNames = props || Object.keys(this.properties);
    const keys = propNames.map((prop) => `${prop}_${id}`);
    const values = await this.adapter.get(keys, this.store);

    if (
      (!values || values.every((value) => value == null)) &&
      !createIfNotFound
    ) {
      return null;
    }

    const obj = { id };

    const promises = propNames.map(async (propKey, idx) => {
      const prop = this.properties[propKey];
      if (!prop) return;

      let value = values[idx];
      if (nested && prop.relationship) {
        const relatedModel = this.models[prop.relationship];
        if (!relatedModel) return;

        if (prop.type === "one") {
          const relatedId = values[idx];

          if (relatedId) {
            value = await relatedModel.get(relatedId);
          }
        }

        if (prop.type === "many") {
          const ids = values[idx] || [];
          if (Array.isArray(ids) && ids.length > 0) {
            value = await Promise.all(
              ids.map(async (id) => await relatedModel.get(id)),
            );
          }
        }
      }

      if (prop.metadata && prop.referenceField) {
        const [timestamp, userId] = id.split("-");
        if (prop.metadata === "user" && this.models.users) {
          value = await this.models.users.get(userId);
        }
        if (prop.metadata === "timestamp") {
          value = getTimestamp(timestamp, this.appId);
        }
      }
      obj[propKey] = value || prop.defaultValue;
    });

    await Promise.all(promises);
    return obj;
  }

  async getMany(key, opts = {}) {
    const { startsWith, props, indexOnly = true, nested = false } = opts;
    console.log(this.referenceKey);
    const items = await this.adapter.startsWith(
      startsWith
        ? [this.referenceKey, startsWith].join("_")
        : key || this.referenceKey,
      this.store,
      { index: indexOnly },
    );
    return indexOnly
      ? Promise.all(
        items.map(async (key) => await this.get(key, { props, nested })),
      )
      : Promise.resolve(items);
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/reactive-record/index.js`:

```````js
import idbAdapter from "../indexeddb/index.js";
import { generateId } from "../utils.js";
import { CrudReactiveRecord } from "./crud.js";

let oplog;
let queue;
class ReactiveRecord extends CrudReactiveRecord {
  constructor(
    { _init, ...properties },
    { name, appId, userId, logOperations, store, models },
  ) {
    super();
    this.name = name;
    this.models = models;
    this.adapter = idbAdapter;
    this.properties = properties;    
    this.referenceKey = Object.keys(properties)[0];
    this.appId = appId;
    this.userId = userId;
    this.store = store;
    if (logOperations) {
      // TODO: create one store and reuse it globally
      oplog = this.adapter.createStore(`${this.appId}_oplog`, "kv");
      this.oplog = oplog;
      queue = this.adapter.createStore(`${this.appId}_queue`, "kv");
      this.queue = queue;
    }

    if (_init) {
      _init(this);
    }
  }
  async isEmpty() {
    return this.adapter.isEmpty(this.store);
  }

  async logOp(key, value = null) {
    if (oplog) {
      const operationId = generateId(this.appId, this.userId);
      const propKey = `${this.name}_${key}`;
      await this.adapter.set([[`${propKey}_${operationId}`, value]], oplog);
      await this.adapter.setLastOp(`${propKey}_${operationId}`, value, {
        db: queue,
        propKey,
      });
    }
  }
}

export { ReactiveRecord };

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/indexeddb/utils.js`:

```````js
export const promisifyRequest = (request) => {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
};

const executeRequest = (request) =>
  new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });

export const tableOperation = (table, mode, operation) =>
  table(mode, (store) => executeRequest(operation(store)));
const iterateCursor = (request, process) =>
  new Promise((resolve, reject) => {
    const items = [];
    request.onsuccess = () => {
      const cursor = request.result;
      if (cursor) {
        process(items, cursor);
        cursor.continue();
      } else {
        resolve(items);
      }
    };
    request.onerror = () => reject(request.error);
  });

const processKeys = (items, cursor) => items.push(cursor.key);
const processValues = (items, cursor) => items.push(cursor.value);
const processEntries = (items, cursor) =>
  items.push([cursor.key, cursor.value]);

export const entries = (table) =>
  tableOperation(table, "readonly", (store) =>
    store.getAll && store.getAllKeys
      ? Promise.all([
        executeRequest(store.getAllKeys()),
        executeRequest(store.getAll()),
      ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]))
      : iterateCursor(store.openCursor(), processEntries),
  );

export const startsWith = (
  prefix,
  table,
  config = { index: true, keepKey: false },
) =>
  table("readonly", (store) => {
    const range = IDBKeyRange.bound(prefix, prefix + "\uffff");
    return iterateCursor(store.openCursor(range), (items, cursor) => {
      const id = config.keepKey ? cursor.key : cursor.key.split("_")[1];
      items.push(config.index ? id : { id, [prefix]: cursor.value });
    });
  });

export const getCount = (table) =>
  tableOperation(table, "readonly", (store) => store.count());

export const isEmpty = (table) => getCount(table).then((count) => count === 0);

export const clear = (table) =>
  tableOperation(table, "readwrite", (store) => store.clear());

export const keys = (table) =>
  tableOperation(table, "readonly", (store) =>
    store.getAllKeys
      ? store.getAllKeys()
      : iterateCursor(store.openCursor(), processKeys),
  );

export const values = (table) =>
  tableOperation(table, "readonly", (store) =>
    store.getAll
      ? store.getAll()
      : iterateCursor(store.openCursor(), processValues),
  );

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/indexeddb/crud.js`:

```````js
import { promisifyRequest, startsWith } from "./utils";

export const getItem = (key, table) => {
  return table("readonly", (store) => promisifyRequest(store.get(key)));
};

export const get = (keys, table) => {
  return table("readonly", (store) =>
    Promise.all(keys.map((key) => promisifyRequest(store.get(key)))),
  );
};

export const set = (entries, table) => {
  return table("readwrite", (store) => {
    entries.forEach((entry) => store.put(entry[1], entry[0]));
    return promisifyRequest(store.transaction);
  });
};

export const remove = (keys, table) => {
  return table("readwrite", (store) => {
    keys.forEach((key) => store.delete(key));
    return promisifyRequest(store.transaction);
  });
};

export const update = (key, updater, db) => {
  return db(
    "readwrite",
    (store) =>
      new Promise((resolve, reject) => {
        store.get(key).onsuccess = function () {
          try {
            store.put(updater(this.result), key);
            resolve(promisifyRequest(store.transaction));
          } catch (err) {
            reject(err);
          }
        };
      }),
  );
};

export const setLastOp = async (key, value, config) => {
  const { db, propKey } = config;
  const keys = await startsWith(propKey, db, { index: true, keepKey: true });
  await remove(keys, db);
  set([key, value], db);
};

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/indexeddb/index.js`:

```````js
import { get, getItem, remove, set, setLastOp, update } from "./crud.js";
import {
  clear,
  entries,
  getCount,
  isEmpty,
  keys,
  promisifyRequest,
  startsWith,
  values,
} from "./utils.js";

export const createStore = (dbName = "bootstrapp", storeName = "kv") => {
  const request = indexedDB.open(dbName);
  request.onupgradeneeded = () => request.result.createObjectStore(storeName);
  const dbp = promisifyRequest(request);
  return (txMode, callback) =>
    dbp.then((db) =>
      callback(db.transaction(storeName, txMode).objectStore(storeName)),
    );
};

export const createDatabase = (
  dbName = "bootstrapp",
  storeNames = ["kv"],
  version = 1,
) => {
  return new Promise((resolve, reject) => {
    const request = indexedDB.open(dbName, version);
    request.onupgradeneeded = (event) => {
      const db = event.target.result;
      storeNames.forEach((storeName) => {
        if (!db.objectStoreNames.contains(storeName)) {
          db.createObjectStore(storeName);
        }
      });
    };

    request.onerror = (event) => {
      console.log(event.target);
      reject(new Error(`IndexedDB error: ${event.target.error}`));
    };

    request.onsuccess = (event) => {
      const db = event.target.result;
      const stores = {};

      storeNames.forEach((storeName) => {
        stores[storeName] = (txMode, callback) => {
          return new Promise((resolve, reject) => {
            try {
              const transaction = db.transaction(storeName, txMode);
              const objectStore = transaction.objectStore(storeName);
              Promise.resolve(callback(objectStore))
                .then(resolve)
                .catch(reject);
            } catch (error) {
              console.error({ storeName, error });
              reject(new Error("Transaction failed", error));
            }
          });
        };
      });

      resolve(stores);
    };
  });
};

const idbAdapter = {
  clear,
  entries,
  values,
  getCount,
  startsWith,
  keys,
  isEmpty,
  createStore,
  createDatabase,
  get,
  getItem,
  remove,
  set,
  setLastOp,
  update,
};

export default idbAdapter;

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/index.sw.js`:

```````js
import { handleFetch, messageHandler, P2P, requestUpdate } from "./index.js";

self.messageHandler = messageHandler;
self.P2P = P2P;
self.requestUpdate = requestUpdate;
self.handleFetch = handleFetch;

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/utils.js`:

```````js
const BASE62 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

export let sequentialCounter = 0;

export const getTimestamp = (id, appId) => {
  return Number.parseInt(fromBase62(appId)) + Number.parseInt(fromBase62(id));
};

const generateIdByTimestamp = (timestamp, padding) => {
  if (!timestamp) {
    throw new Error(
      "Reference timestamp not set. Ensure getAppId has been called first.",
    );
  }

  const timeDifference = Date.now() - parseInt(timestamp, 10);
  let id = toBase62(timeDifference + sequentialCounter);
  sequentialCounter++;
  if (padding) {
    while (id.length < 6) {
      id = "0" + id;
    }
  }
  return id;
};

export const generateId = (appId, userId) => {
  const referenceTimestamp = fromBase62(appId);
  let id = generateIdByTimestamp(referenceTimestamp, !!userId);
  return userId ? `${id}-${userId}` : id;
};

export const fromBase62 = (str = "") => {
  let num = 0;
  for (let i = 0; i < str.length; i++) {
    const char = str[i];
    const index = BASE62.indexOf(char);
    num = num * 62 + index;
  }
  return num;
};

export const toBase62 = (num) => {
  if (num === 0) return BASE62[0];
  let arr = [];
  while (num) {
    arr.unshift(BASE62[num % 62]);
    num = Math.floor(num / 62);
  }
  return arr.join("");
};

export const extractPathParams = (endpoint, requestPath, regex) => {
  const paramNames = [...endpoint.matchAll(/:([a-z]+)/gi)].map(
    (match) => match[1],
  );
  const paramValues = requestPath.match(regex).slice(1);
  return paramNames.reduce(
    (acc, name, index) => ({
      ...acc,
      [name]: paramValues[index],
    }),
    {},
  );
};

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/index.js`:

```````js
import {
  getApiModel,
  messageHandler,
  requestUpdate,
} from "./appstate/index.js";
import { BOOL_TABLE } from "./constants.js";
import idbAdapter from "./indexeddb/index.js";
import { extractPathParams } from "./utils.js";

export const fetchDataFromDB = async (appId, models) => {
  const dataPromises = models.map(async (model) => {
    const db = idbAdapter.createStore(`${appId}_${model}`);
    const entries = await idbAdapter.entries(db);
    return { model, entries };
  });

  const results = await Promise.all(dataPromises);
  const data = {};

  results.forEach(({ model, entries }) => {
    data[model] = entries;
  });

  return data;
};

export const postMessage = (payload) => {
  if (self && self.dispatchEvent) {
    console.log(
      "DEBUG: Send event to service worker queue from reactive-record",
      { payload },
    );
    const message = new MessageEvent("message", {
      data: payload,
    });
    self.dispatchEvent(message);
  }
};

const P2P = {
  _handleClients: (action) => {
    self.clients.matchAll().then((clients) => {
      if (clients && clients.length) {
        clients.forEach((client) => action(client));
      }
    });
  },

  postMessage: (payload) => {
    P2P._handleClients((client) => client.postMessage(payload));
  },

  execute: (func) => {
    P2P._handleClients((client) => func(client));
  },
};

const endpointNotFound = new Response(
  JSON.stringify({ error: "ERROR: endpoint not found" }),
  {
    status: 404,
    headers: {
      "Content-Type": "application/json",
    },
  },
);

const endpointsNotLoaded = new Response(
  JSON.stringify({ error: "ERROR: endpoints weren't loaded" }),
  {
    status: 500,
    headers: {
      "Content-Type": "application/json",
    },
  },
);

const handleFetch = async ({ event, url }) => {
  const endpoints = await getApiModel();
  if (!endpoints) return endpointsNotLoaded;

  const request = `${event.request.method} ${url.pathname}`;
  const matchedEndpointKey = Object.keys(endpoints).find((endpointKey) => {
    const { regex } = endpoints[endpointKey];
    return regex.test(request);
  });
  if (!matchedEndpointKey) return endpointNotFound;
  try {
    const {
      callback,
      model,
      models = {},
      regex: endpointRegex,
    } = endpoints[matchedEndpointKey];

    const pathParams = extractPathParams(
      matchedEndpointKey,
      request,
      endpointRegex,
    );
    const queryParams = [...url.searchParams.entries()].reduce(
      (acc, [key, value]) => ({
        ...acc,
        [key]: ["false", "true"].includes(value) ? BOOL_TABLE[value] : value,
      }),
      {},
    );

    const bodyMethods = ["POST", "PATCH"];
    const bodyParams = bodyMethods.includes(event.request.method)
      ? await event.request
        .json()
        .catch((err) => console.error("Failed to parse request body", err))
      : {};
    const params = { ...pathParams, ...bodyParams, ...queryParams };
    const response = await callback.call(
      model,
      Array.isArray(bodyParams) ? bodyParams : params,
      {
        P2P,
        requestUpdate,
        models,
      },
    );
    if (["POST", "PATCH", "DELETE"].includes(event.request.method)) {
      requestUpdate();
    }
    return new Response(JSON.stringify(response), {
      headers: {
        "Content-Type": Array.isArray(response)
          ? "text/event-stream"
          : "application/json",
      },
    });
  } catch (error) {
    console.error({ error });
    throw error;
  }
};

export {
  extractPathParams,
  getApiModel,
  handleFetch,
  messageHandler,
  P2P,
  requestUpdate,
};

```````

`/home/alanleal/Projects/bootstrapp/libs/backend/package.json`:

```````json
{
  "name": "backend",
  "type": "module",
  "version": "0.1.0",
  "main": "./index.js",
  "module": "./index.js",
  "scripts": {
    "build": "node esbuild.config.js",
    "dev": "node esbuild.config.js --watch"
  },
  "devDependencies": {
    "esbuild": "^0.21.3"
  },
  "dependencies": {}
}

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/i18n.js`:

```````js
// TODO: make i18n integrate with localStorage to store the current language and alternatives
// Then make every translation available to every component

const i18n = (key) => key;

export default i18n;

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/README.md`:

```````md
# helpers

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/i18n.view.js`:

```````js
export default {
  tag: "app-i18n",
  secondary: true,
  props: {
    language: {
      defaultValue: "en",
      scope: "app"
    },
    dropdown: {
      defaultValue: false
    },
    i18n: {
      title: "Change Language"
    }
  },
  firstUpdated: () => {},
  render: function () {
    const {
      html,
      language,
      setLanguage,
      dropdown,
      setDropdown,
      i18n: t
    } = this;
    const languages = {
      en: "English",
      es: "Español",
      pt: "Português"
    };

    const handleLanguageChange = (code) => (
      setLanguage(code), setDropdown(false)
    );

    return html` <div
      id="language-dropdown"
      title=${t("title")}
      class="dropdown"
    >
      <div tabindex="0" class="btn btn-ghost normal-case">
        <button
          class=${language === "en" ? "active" : ""}
          @click=${() => setDropdown(true)}
        >
          <span
            class="badge badge-sm badge-outline font-mono !text-[.6rem] pt-px opacity-50 font-bold tracking-widest !pr-1 !pl-1.5"
          >
            ${language.toUpperCase()}
          </span>
          ${languages[language]}
        </button>
      </div>
      <div
        class="dropdown-content bg-base-200 text-base-content rounded-box top-px mt-12 -ml-6 w-40 overflow-y-auto shadow ${dropdown
    ? "dropdown-open"
    : "hidden"}"
      >
        <ul class="menu menu-sm gap-1" tabindex="0">
          ${Object.entries(languages).map(
    ([code, name]) => html` <li>
              <button
                class=${language === code ? "active" : ""}
                @click=${() => handleLanguageChange(code)}
              >
                <span
                  class="badge badge-sm badge-outline font-mono !text-[.6rem] pt-px opacity-50 font-bold tracking-widest !pr-1 !pl-1.5"
                >
                  ${code.toUpperCase()}
                </span>
                ${name}
              </button>
            </li>`
  )}
        </ul>
      </div>
    </div>`;
  }
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/esbuild.config.js`:

```````js
// build.js
import { build } from "esbuild";

build({
  entryPoints: ["index.js"],
  bundle: true,
  outfile: "dist/index.js",
  format: "esm", // Output format as ES module
  sourcemap: true, // Optional: for source maps
}).catch(() => process.exit(1));
```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/droparea.js`:

```````js
let currentDroparea;
let currentDraggedItem;
let currentPosition;
let placeholderElement;

const createPlaceholderElement = () => {
  if (!placeholderElement) {
    placeholderElement = document.createElement("div");
    placeholderElement.classList.add(
      "drag-placeholder",
      "h-24",
      "w-24",
      "bg-primary",
      "border",
      "transition-all",
      "m-auto"
    );
  }
  return placeholderElement;
};

const insertPlaceholder = (parent, position = "end", referenceNode = null) => {
  const placeholder = createPlaceholderElement();
  if (position === "start") {
    parent.insertBefore(placeholder, parent.firstChild);
  } else if (position === "before" && referenceNode) {
    parent.insertBefore(placeholder, referenceNode);
  } else {
    parent.appendChild(placeholder);
  }
};
const removeExistingPlaceholder = (parent) => {
  const existingPlaceholder = parent.querySelector(".drag-placeholder");
  existingPlaceholder?.remove();
};
export const draggable = {
  dragstart: function () {
    currentDraggedItem = this.id;
    this.style.opacity = "0.1";
  },

  dragend: function () {
    this.style.opacity = "1";
    if (currentDroparea && currentDraggedItem && !isNaN(currentPosition)) {
      this.dropItem?.({
        droparea: currentDroparea,
        item: currentDraggedItem,
        position: currentPosition
      });

      // Reset state
      currentDroparea = null;
      currentDraggedItem = null;
      currentPosition = null;
    }

    if (placeholderElement) {
      placeholderElement.remove();
    }
  },

  connectedCallback: function () {
    if (this.draggable) {
      this.addEventListener("dragstart", this.dragstart);
      this.addEventListener("dragend", this.dragend);
    }
  },

  disconnectedCallback: function () {
    if (this.draggable) {
      this.removeEventListener("dragstart", this.dragstart);
      this.removeEventListener("dragend", this.dragend);
    }
  }
};
export const droparea = {
  drop: function (event) {
    event.preventDefault();
    const children = Array.from(event.currentTarget.children);
    currentPosition = children.indexOf(placeholderElement);
    removeExistingPlaceholder(event.currentTarget);
  },

  dragleave: function (event) {
    const dropareaBounds = event.currentTarget.getBoundingClientRect();
    removeExistingPlaceholder(event.currentTarget);

    if (
      (this.vertical && event.clientY === 0) ||
      (!this.vertical && event.clientX === 0)
    ) {
      currentDroparea = null;
      currentDraggedItem = null;
      currentPosition = null;
    } else if (
      (this.vertical && event.clientY < dropareaBounds.top) ||
      (!this.vertical && event.clientX < dropareaBounds.left)
    ) {
      insertPlaceholder(event.currentTarget, "start");
      currentPosition = 0;
    }
  },

  dragover: function (event) {
    event.preventDefault();
    const droparea = event.currentTarget;
    const items = Array.from(droparea.children).filter(
      (child) => !child.classList.contains("drag-placeholder")
    );

    if (!items.length) {
      if (!placeholderElement) {
        insertPlaceholder(droparea);
      }
      currentPosition = 0;
      currentDroparea = droparea.id;
      return;
    }

    const compareVal = this.vertical ? event.clientY : event.clientX;
    const targetItem = items.find((item, index) => {
      if (
        (this.vertical && item.getBoundingClientRect().top > compareVal) ||
        (!this.vertical && item.getBoundingClientRect().left > compareVal)
      ) {
        currentPosition = index;
        currentDroparea = droparea.id;
        return true;
      }
      return false;
    });

    if (
      !targetItem &&
      ((this.vertical &&
        compareVal > items[items.length - 1].getBoundingClientRect().bottom) ||
        (!this.vertical &&
          compareVal > items[items.length - 1].getBoundingClientRect().right))
    ) {
      currentPosition = items.length;
      currentDroparea = droparea.id;
    }

    if (
      !placeholderElement ||
      (targetItem && placeholderElement.nextSibling !== targetItem)
    ) {
      insertPlaceholder(droparea, "before", targetItem);
    }
  },

  connectedCallback: function () {
    if (this.droparea) {
      this.addEventListener("drop", this.drop);
      this.addEventListener("dragover", this.dragover);
      this.addEventListener("dragleave", this.dragleave);
    }
  },

  disconnectedCallback: function () {
    if (this.droparea) {
      this.removeEventListener("drop", this.drop);
      this.removeEventListener("dragover", this.dragover);
      this.removeEventListener("dragleave", this.dragleave);
    }
  }
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/url.js`:

```````js
const isServer = typeof window === "undefined";
// TODO: fix, URL adapter isn't working because service worker can't access replaceState
export default {
  getItem: (key) => {
    if (isServer) return;
    const params = new URLSearchParams(window.location.search);
    return params.get(key);
  },

  setItem: (key, value) => {
    if (isServer) return;
    const params = new URLSearchParams(window.location.search);
    params.set(key, value);
    window.history?.replaceState?.(
      {},
      "",
      `${window.location.pathname}?${params}`
    );
    return { key };
  },
  removeItem: (key) => {
    if (isServer) return;
    const params = new URLSearchParams(window.location.search);
    params.delete(key);
    window.history.replaceState?.(
      {},
      "",
      `${window.location.pathname}?${params}`
    );
    return { key };
  }
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/csv.js`:

```````js
import { exportFile } from "./file.js";

export const parseCSV = (csvData) => {
  const rows = csvData.trim().split("\n"); // Trim to remove trailing newlines
  const headers = rows[0].split(",");

  return rows
    .slice(1)
    .map((row) => {
      const values = row.split(",");
      return headers.reduce((object, header, index) => {
        object[header] = values[index];
        return object;
      }, {});
    })
    .filter((row) => Object.values(row).some((value) => value)); // Filter out empty rows
};

// Function to get field names from the data
export const getFields = (data) => {
  return data.length > 0 ? Object.keys(data[0]) : [];
};

// 3. Remove columns
export const removeColumns = (data, columnsToRemove) => {
  return data.map((row) => {
    columnsToRemove.forEach((column) => delete row[column]);
    return row;
  });
};
// Function to convert data to CSV
export const convertToCSV = (data) => {
  if (data.length === 0) return "";

  // Extract headers
  const headers = Object.keys(data[0]);

  // Convert each object to a CSV row
  const rows = data.map((obj) =>
    headers.map((header) => JSON.stringify(obj[header] ?? "")).join(","),
  );

  // Combine headers and rows
  return [headers.join(","), ...rows].join("\n");
};

// Updated exportCSV to use exportFile
export const exportCSV = (data) => {
  const csvString = convertToCSV(data);
  exportFile(csvString, "exported-data.csv", "text/csv");
};

export const transformCsvData = (csvData, fieldMapping) => {
  return csvData.map((row) => mapRowToModel(row, fieldMapping));
};
const mapRowToModel = (row, fieldMapping) => {
  return Object.keys(fieldMapping).reduce((acc, modelField) => {
    const csvField = fieldMapping[modelField];
    acc[modelField] = row[csvField];
    return acc;
  }, {});
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/types.js`:

```````js
const typeHandlers = {
  boolean: (value) => value === "true",
  string: (value) => value,
  array: (value, defaultValue) => {
    try {
      return JSON.parse(value);
    } catch (error) {
      console.error("Failed to parse array from string:", error);
      return defaultValue;
    }
  },
  number: (value, defaultValue) =>
    isNaN(Number(value)) ? defaultValue : Number(value),
  date: (value) => new Date(value),
  function: (value) => new Function(value), // Caution: security risk!
  object: (value, defaultValue) => {
    try {
      return JSON.parse(value);
    } catch (error) {
      console.error("Failed to parse object from string:", error);
      return defaultValue;
    }
  }
};

export const stringToType = (value, typeDefinition) => {
  const handler = typeHandlers[typeDefinition.type];
  if (handler) {
    return handler(value, typeDefinition.defaultValue);
  }
  return value || typeDefinition.defaultValue;
};

export const T = {
  boolean: (options = {}) => ({
    type: "boolean",
    defaultValue: !!options.defaultValue || false,
    ...options
  }),

  string: (options = {}) => ({
    type: "string",
    defaultValue: options.defaultValue || "",
    enum: options.enum || [],
    ...options
  }),

  array: (options = {}) => ({
    type: "array",
    defaultValue: options.defaultValue || [],
    enum: options.enum || [],
    ...options
  }),

  number: (options = {}) => ({
    type: "number",
    defaultValue: options.defaultValue || undefined,
    ...options
  }),

  date: (options = {}) => ({
    type: "date",
    defaultValue: options.defaultValue || undefined,
    ...options
  }),

  function: (options = {}) => ({
    type: "function",
    defaultValue: options.defaultValue || undefined,
    ...options
  }),

  object: (options = {}) => ({
    type: "object",
    defaultValue: options.defaultValue || undefined,
    ...options
  }),

  one: (relationship, targetForeignKey, options = {}) => ({
    type: "one",
    relationship,
    targetForeignKey: targetForeignKey,
    ...options
  }),
  many: (relationship, targetForeignKey, options = {}) => ({
    type: "many",
    relationship,
    targetForeignKey: targetForeignKey,
    ...options
  }),

  created_by: (referenceField, options = {}) => ({
    type: "object",
    metadata: "user",
    referenceField,
    ...options
  }),
  created_at: (referenceField, options = {}) => ({
    type: "string",
    metadata: "timestamp",
    referenceField,
    ...options
  }),

  text: (options = {}) => ({
    formType: "text",
    type: T.string(options),
    ...options
  }),
  datetime: (options = {}) => ({
    formType: "datetime",
    type: T.string(options),
    ...options
  }),

  time: (options = {}) => ({
    formType: "time",
    type: T.string(options),
    ...options
  }),

  checkbox: (options = {}) => ({
    formType: "checkbox",
    type: T.boolean(options),
    ...options
  }),

  radio: (options = {}) => ({
    formType: "radio",
    type: T.boolean(options),
    ...options
  }),

  toggle: (options = {}) => ({
    formType: "toggle",
    type: T.boolean(options),
    ...options
  }),

  textarea: (options = {}) => ({
    formType: "textarea",
    type: T.string(options),
    ...options
  }),

  custom: (customFormType, options) => ({
    customFormType,
    type: T[customFormType](options),
    ...options
  })
};

export default T;

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/rest.js`:

```````js
function formatEndpoint(endpoint) {
  if (!endpoint.startsWith("http")) {
    return `/api/${endpoint}`.replace("//", "/");
  }
  return endpoint;
}

export async function handleResponse(response) {
  if (!response.ok) {
    const message = `An error has occurred: ${response.statusText}`;
    throw new Error(message);
  }

  const text = await response.text();
  if (!text) {
    return null;
  }
  return JSON.parse(text);
}

export async function get(endpoint, params) {
  if (!endpoint) return;
  let url = endpoint;
  if (params) {
    const queryString = new URLSearchParams(params).toString();
    url += `?${queryString}`;
  }
  const response = await fetch(formatEndpoint(url));
  return handleResponse(response);
}

export async function post(endpoint, params) {
  if (!endpoint) return;
  const response = await fetch(formatEndpoint(endpoint), {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(params)
  });
  return handleResponse(response);
}

export async function patch(endpoint, updates) {
  if (!endpoint) return;
  const response = await fetch(formatEndpoint(endpoint), {
    method: "PATCH",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify(updates)
  });
  return handleResponse(response);
}

export async function remove(endpoint) {
  if (!endpoint) return;
  const response = await fetch(formatEndpoint(endpoint), {
    method: "DELETE"
  });
  return handleResponse(response);
}

export default { remove, patch, post, get };

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/pnpm-lock.yaml`:

```````yaml
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    dependencies:
      chokidar:
        specifier: ^3.5.3
        version: 3.6.0
      ws:
        specifier: ^8.14.2
        version: 8.17.0
    devDependencies:
      esbuild:
        specifier: ^0.19.5
        version: 0.19.12

packages:

  '@esbuild/aix-ppc64@0.19.12':
    resolution: {integrity: sha512-bmoCYyWdEL3wDQIVbcyzRyeKLgk2WtWLTWz1ZIAZF/EGbNOwSA6ew3PftJ1PqMiOOGu0OyFMzG53L0zqIpPeNA==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [aix]

  '@esbuild/android-arm64@0.19.12':
    resolution: {integrity: sha512-P0UVNGIienjZv3f5zq0DP3Nt2IE/3plFzuaS96vihvD0Hd6H/q4WXUGpCxD/E8YrSXfNyRPbpTq+T8ZQioSuPA==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [android]

  '@esbuild/android-arm@0.19.12':
    resolution: {integrity: sha512-qg/Lj1mu3CdQlDEEiWrlC4eaPZ1KztwGJ9B6J+/6G+/4ewxJg7gqj8eVYWvao1bXrqGiW2rsBZFSX3q2lcW05w==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [android]

  '@esbuild/android-x64@0.19.12':
    resolution: {integrity: sha512-3k7ZoUW6Q6YqhdhIaq/WZ7HwBpnFBlW905Fa4s4qWJyiNOgT1dOqDiVAQFwBH7gBRZr17gLrlFCRzF6jFh7Kew==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [android]

  '@esbuild/darwin-arm64@0.19.12':
    resolution: {integrity: sha512-B6IeSgZgtEzGC42jsI+YYu9Z3HKRxp8ZT3cqhvliEHovq8HSX2YX8lNocDn79gCKJXOSaEot9MVYky7AKjCs8g==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [darwin]

  '@esbuild/darwin-x64@0.19.12':
    resolution: {integrity: sha512-hKoVkKzFiToTgn+41qGhsUJXFlIjxI/jSYeZf3ugemDYZldIXIxhvwN6erJGlX4t5h417iFuheZ7l+YVn05N3A==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [darwin]

  '@esbuild/freebsd-arm64@0.19.12':
    resolution: {integrity: sha512-4aRvFIXmwAcDBw9AueDQ2YnGmz5L6obe5kmPT8Vd+/+x/JMVKCgdcRwH6APrbpNXsPz+K653Qg8HB/oXvXVukA==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [freebsd]

  '@esbuild/freebsd-x64@0.19.12':
    resolution: {integrity: sha512-EYoXZ4d8xtBoVN7CEwWY2IN4ho76xjYXqSXMNccFSx2lgqOG/1TBPW0yPx1bJZk94qu3tX0fycJeeQsKovA8gg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [freebsd]

  '@esbuild/linux-arm64@0.19.12':
    resolution: {integrity: sha512-EoTjyYyLuVPfdPLsGVVVC8a0p1BFFvtpQDB/YLEhaXyf/5bczaGeN15QkR+O4S5LeJ92Tqotve7i1jn35qwvdA==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [linux]

  '@esbuild/linux-arm@0.19.12':
    resolution: {integrity: sha512-J5jPms//KhSNv+LO1S1TX1UWp1ucM6N6XuL6ITdKWElCu8wXP72l9MM0zDTzzeikVyqFE6U8YAV9/tFyj0ti+w==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [linux]

  '@esbuild/linux-ia32@0.19.12':
    resolution: {integrity: sha512-Thsa42rrP1+UIGaWz47uydHSBOgTUnwBwNq59khgIwktK6x60Hivfbux9iNR0eHCHzOLjLMLfUMLCypBkZXMHA==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [linux]

  '@esbuild/linux-loong64@0.19.12':
    resolution: {integrity: sha512-LiXdXA0s3IqRRjm6rV6XaWATScKAXjI4R4LoDlvO7+yQqFdlr1Bax62sRwkVvRIrwXxvtYEHHI4dm50jAXkuAA==}
    engines: {node: '>=12'}
    cpu: [loong64]
    os: [linux]

  '@esbuild/linux-mips64el@0.19.12':
    resolution: {integrity: sha512-fEnAuj5VGTanfJ07ff0gOA6IPsvrVHLVb6Lyd1g2/ed67oU1eFzL0r9WL7ZzscD+/N6i3dWumGE1Un4f7Amf+w==}
    engines: {node: '>=12'}
    cpu: [mips64el]
    os: [linux]

  '@esbuild/linux-ppc64@0.19.12':
    resolution: {integrity: sha512-nYJA2/QPimDQOh1rKWedNOe3Gfc8PabU7HT3iXWtNUbRzXS9+vgB0Fjaqr//XNbd82mCxHzik2qotuI89cfixg==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [linux]

  '@esbuild/linux-riscv64@0.19.12':
    resolution: {integrity: sha512-2MueBrlPQCw5dVJJpQdUYgeqIzDQgw3QtiAHUC4RBz9FXPrskyyU3VI1hw7C0BSKB9OduwSJ79FTCqtGMWqJHg==}
    engines: {node: '>=12'}
    cpu: [riscv64]
    os: [linux]

  '@esbuild/linux-s390x@0.19.12':
    resolution: {integrity: sha512-+Pil1Nv3Umes4m3AZKqA2anfhJiVmNCYkPchwFJNEJN5QxmTs1uzyy4TvmDrCRNT2ApwSari7ZIgrPeUx4UZDg==}
    engines: {node: '>=12'}
    cpu: [s390x]
    os: [linux]

  '@esbuild/linux-x64@0.19.12':
    resolution: {integrity: sha512-B71g1QpxfwBvNrfyJdVDexenDIt1CiDN1TIXLbhOw0KhJzE78KIFGX6OJ9MrtC0oOqMWf+0xop4qEU8JrJTwCg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [linux]

  '@esbuild/netbsd-x64@0.19.12':
    resolution: {integrity: sha512-3ltjQ7n1owJgFbuC61Oj++XhtzmymoCihNFgT84UAmJnxJfm4sYCiSLTXZtE00VWYpPMYc+ZQmB6xbSdVh0JWA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [netbsd]

  '@esbuild/openbsd-x64@0.19.12':
    resolution: {integrity: sha512-RbrfTB9SWsr0kWmb9srfF+L933uMDdu9BIzdA7os2t0TXhCRjrQyCeOt6wVxr79CKD4c+p+YhCj31HBkYcXebw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [openbsd]

  '@esbuild/sunos-x64@0.19.12':
    resolution: {integrity: sha512-HKjJwRrW8uWtCQnQOz9qcU3mUZhTUQvi56Q8DPTLLB+DawoiQdjsYq+j+D3s9I8VFtDr+F9CjgXKKC4ss89IeA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [sunos]

  '@esbuild/win32-arm64@0.19.12':
    resolution: {integrity: sha512-URgtR1dJnmGvX864pn1B2YUYNzjmXkuJOIqG2HdU62MVS4EHpU2946OZoTMnRUHklGtJdJZ33QfzdjGACXhn1A==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [win32]

  '@esbuild/win32-ia32@0.19.12':
    resolution: {integrity: sha512-+ZOE6pUkMOJfmxmBZElNOx72NKpIa/HFOMGzu8fqzQJ5kgf6aTGrcJaFsNiVMH4JKpMipyK+7k0n2UXN7a8YKQ==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [win32]

  '@esbuild/win32-x64@0.19.12':
    resolution: {integrity: sha512-T1QyPSDCyMXaO3pzBkF96E8xMkiRYbUEZADd29SyPGabqxMViNoii+NcK7eWJAEoU6RZyEm5lVSIjTmcdoB9HA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [win32]

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}

  braces@3.0.2:
    resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}
    engines: {node: '>=8'}

  chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}

  esbuild@0.19.12:
    resolution: {integrity: sha512-aARqgq8roFBj054KvQr5f1sFu0D65G+miZRCuJyJ0G13Zwx7vRar5Zhn2tkQNzIXcBrNVsv/8stehpj+GAjgbg==}
    engines: {node: '>=12'}
    hasBin: true

  fill-range@7.0.1:
    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}
    engines: {node: '>=8'}

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  ws@8.17.0:
    resolution: {integrity: sha512-uJq6108EgZMAl20KagGkzCKfMEjxmKvZHG7Tlq0Z6nOky7YF7aq4mOx6xK8TJ/i1LeK4Qus7INktacctDgY8Ow==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

snapshots:

  '@esbuild/aix-ppc64@0.19.12':
    optional: true

  '@esbuild/android-arm64@0.19.12':
    optional: true

  '@esbuild/android-arm@0.19.12':
    optional: true

  '@esbuild/android-x64@0.19.12':
    optional: true

  '@esbuild/darwin-arm64@0.19.12':
    optional: true

  '@esbuild/darwin-x64@0.19.12':
    optional: true

  '@esbuild/freebsd-arm64@0.19.12':
    optional: true

  '@esbuild/freebsd-x64@0.19.12':
    optional: true

  '@esbuild/linux-arm64@0.19.12':
    optional: true

  '@esbuild/linux-arm@0.19.12':
    optional: true

  '@esbuild/linux-ia32@0.19.12':
    optional: true

  '@esbuild/linux-loong64@0.19.12':
    optional: true

  '@esbuild/linux-mips64el@0.19.12':
    optional: true

  '@esbuild/linux-ppc64@0.19.12':
    optional: true

  '@esbuild/linux-riscv64@0.19.12':
    optional: true

  '@esbuild/linux-s390x@0.19.12':
    optional: true

  '@esbuild/linux-x64@0.19.12':
    optional: true

  '@esbuild/netbsd-x64@0.19.12':
    optional: true

  '@esbuild/openbsd-x64@0.19.12':
    optional: true

  '@esbuild/sunos-x64@0.19.12':
    optional: true

  '@esbuild/win32-arm64@0.19.12':
    optional: true

  '@esbuild/win32-ia32@0.19.12':
    optional: true

  '@esbuild/win32-x64@0.19.12':
    optional: true

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  binary-extensions@2.3.0: {}

  braces@3.0.2:
    dependencies:
      fill-range: 7.0.1

  chokidar@3.6.0:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.2
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  esbuild@0.19.12:
    optionalDependencies:
      '@esbuild/aix-ppc64': 0.19.12
      '@esbuild/android-arm': 0.19.12
      '@esbuild/android-arm64': 0.19.12
      '@esbuild/android-x64': 0.19.12
      '@esbuild/darwin-arm64': 0.19.12
      '@esbuild/darwin-x64': 0.19.12
      '@esbuild/freebsd-arm64': 0.19.12
      '@esbuild/freebsd-x64': 0.19.12
      '@esbuild/linux-arm': 0.19.12
      '@esbuild/linux-arm64': 0.19.12
      '@esbuild/linux-ia32': 0.19.12
      '@esbuild/linux-loong64': 0.19.12
      '@esbuild/linux-mips64el': 0.19.12
      '@esbuild/linux-ppc64': 0.19.12
      '@esbuild/linux-riscv64': 0.19.12
      '@esbuild/linux-s390x': 0.19.12
      '@esbuild/linux-x64': 0.19.12
      '@esbuild/netbsd-x64': 0.19.12
      '@esbuild/openbsd-x64': 0.19.12
      '@esbuild/sunos-x64': 0.19.12
      '@esbuild/win32-arm64': 0.19.12
      '@esbuild/win32-ia32': 0.19.12
      '@esbuild/win32-x64': 0.19.12

  fill-range@7.0.1:
    dependencies:
      to-regex-range: 5.0.1

  fsevents@2.3.3:
    optional: true

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.3.0

  is-extglob@2.1.1: {}

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-number@7.0.0: {}

  normalize-path@3.0.0: {}

  picomatch@2.3.1: {}

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  ws@8.17.0: {}

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/index.js`:

```````js
import * as CSV from "./csv.js";
import datetime from "./datetime.js";
import { draggable, droparea } from "./droparea.js";
import * as File from "./file.js";
import i18n from "./i18n.js";
import { get, patch, post, remove } from "./rest.js";
import { T } from "./types.js";
import url from "./url.js";

function debounce(func, wait) {
  let timeout;
  return function (...args) {
    const context = this;
    clearTimeout(timeout);
    timeout = setTimeout(() => func.apply(context, args), wait);
  };
}

function event(type, ...attrs) {
  const message = { type };
  attrs.forEach((attr) => {
    Object.assign(message, attr);
  });
  navigator.serviceWorker.controller.postMessage(message);
}

export const injectStyle = (style) => {
  const blob = new Blob([style], { type: "text/css" });
  const blobURL = URL.createObjectURL(blob);
  const linkElem = document.createElement("link");
  linkElem.rel = "stylesheet";
  linkElem.href = blobURL;
  document.head.appendChild(linkElem);
};

export const isValidApp = (app) => {
  if (!app) {
    throw new Error("App is not defined");
  }

  if (!app.views) {
    throw new Error("App views object is not defined");
  }
  if (!app.views["app-index"] && !app.views["page-index"]) {
    throw new Error(
      "No valid bootstrap page found in app views (app-index or page-index required)"
    );
  }

  return true;
};

export const getUrlBlob = () => {
  const extractedContent = decodeURIComponent(
    window.location.hash.substring(1)
  );
  if (!extractedContent) return null;
  const blob = new Blob([extractedContent], { type: "application/javascript" });
  return blob;
};

export {
  CSV,
  datetime,
  debounce,
  draggable,
  droparea,
  event,
  File,
  get,
  i18n,
  patch,
  post,
  remove,
  T,
  url,
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/file.js`:

```````js
export const readFile = (file) => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = (event) => resolve(event.target.result);
    reader.onerror = (error) => reject(error);
    reader.readAsText(file);
  });
};

// Generic function to export files
export const exportFile = (content, fileName, mimeType) => {
  const blob = new Blob([content], { type: mimeType });
  const link = document.createElement("a");
  link.href = URL.createObjectURL(blob);
  link.download = fileName;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
};
// 2. Parse the CSV data
export const parseCSV = (csvData) => {
  const rows = csvData.split("\n");
  const headers = rows[0].split(",");

  return rows.slice(1).map((row) => {
    const values = row.split(",");
    return headers.reduce((object, header, index) => {
      object[header] = values[index];
      return object;
    }, {});
  });
};

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/datetime.js`:

```````js
export const formatDate = (timestamp) => {
  const date = new Date(timestamp);
  return date.toLocaleDateString(navigator.language);
};

export const formatTime = (timestamp) => {
  const date = new Date(timestamp);
  const options = {
    hour: "2-digit",
    minute: "2-digit",
    hour12: true,
  };
  return date.toLocaleTimeString(navigator.language, options);
};

export const formatDateTime = (timestamp) => {
  const date = new Date(timestamp);
  return date.toLocaleString(navigator.language);
};

export const timeAgo = (timestamp) => {
  const now = Date.now();
  const difference = now - timestamp;

  const minute = 60 * 1000;
  const hour = minute * 60;
  const day = hour * 24;
  const week = day * 7;

  if (difference < minute) {
    return "Just now";
  } else if (difference < hour) {
    return Math.round(difference / minute) + " minutes ago";
  } else if (difference < day) {
    return Math.round(difference / hour) + " hours ago";
  } else if (difference < week) {
    return Math.round(difference / day) + " days ago";
  } else {
    return formatDate(timestamp);
  }
};

export default { formatDate, formatDateTime, formatTime, timeAgo };

```````

`/home/alanleal/Projects/bootstrapp/libs/helpers/package.json`:

```````json
{
  "name": "helpers",
  "type": "module",
  "version": "0.1.0",
  "main": "./index.js",
  "module": "./index.js",
  "devDependencies": {
    "esbuild": "^0.19.5"
  },
  "scripts": {
    "build": "node esbuild.config.js",
    "dev": "node esbuild.config.js --watch"
  },
  "dependencies": {
    "chokidar": "^3.5.3",
    "ws": "^8.14.2"
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/README.md`:

```````md
# core

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/esbuild.config.js`:

```````js
// build.js
import { build } from "esbuild";

build({
  entryPoints: ["src/index.js"],
  bundle: true,
  outfile: "dist/index.js",
  format: "esm", 
  sourcemap: true, 
  external: ["unocss"],
}).catch(() => process.exit(1));
```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/src/web-worker.js`:

```````js
import { fetchDataFromDB, postMessage } from "./backend/controller.js";

export const events = {};

let dataChannel;

// onmessage = (e) => {
//   if ("serviceWorker" in navigator && e.data.bridge) {
//     console.log("send message to service worker");
//     navigator.serviceWorker.controller.postMessage(e.data);
//   }
// };

const dispatch = (event) => {
  const message = JSON.parse(event.data);
  const { type, ...payload } = message;
  const handler = events[type];
  if (handler) {
    handler(payload);
  } else {
    console.warn("DEBUG: No handler registered for message type:", type);
  }
};

export const registerEvent = (type, handler) => {
  events[type] = handler;
};

const syncRequest = async ({ appId, models }) => {
  console.log("DEBUG: Sync request received:", { appId, models });
  const data = await fetchDataFromDB(appId, models);
  dataChannel.send(JSON.stringify({ type: "SYNC_DATA", data, appId: appId }));
};

const syncData = async ({ data, appId }) => {
  console.log("DEBUG: Sync data received:", data);
  postMessage({
    type: "SYNC_DATA",
    appId,
    data,
    bridge: true
  });
};

const requestUpdate = async ({ store }) => {
  console.log("DEBUG: Request Update from Reactive Record:", { store });
  postMessage({
    type: "REQUEST_UPDATE",
    bridge: true,
    requestUpdate: true
  });
};

const handleOplogWrite = async ({ store, key, value }) => {
  console.log("DEBUG: Oplog write received:", { store, key, value });
  postMessage({
    type: "OPLOG_WRITE",
    store,
    key,
    value,
    bridge: true,
    requestUpdate: true
  });
};

registerEvent("OPLOG_WRITE", handleOplogWrite);
registerEvent("REQUEST_UPDATE", requestUpdate);
registerEvent("SYNC_REQUEST", syncRequest);
registerEvent("SYNC_DATA", syncData);

let rtc;
let ws;

export const call = async (appId, userId, targetUsername, models) => {
  const onopenCallback = (dataChannel) => {
    dataChannel.send(
      JSON.stringify({
        type: "SYNC_REQUEST",
        appId,
        models
      })
    );
  };
  const dataChannel = rtc.createDataChannel("channel");
  console.log("DEBUG: DataChannel initial state:", dataChannel.readyState);
  dataChannel.onmessage = dispatch;

  dataChannel.onopen = () => {
    console.log("DEBUG: Data Channel is now open!");
    onopenCallback?.(dataChannel);
  };

  dataChannel.onerror = (error) => {
    console.error("DEBUG: DataChannel Error:", error);
  };

  rtc.oniceconnectionstatechange = () => {
    console.log("DEBUG: ICE Connection State:", rtc.iceConnectionState);
  };

  rtc.onsignalingstatechange = () => {
    console.log("DEBUG: Signaling State:", rtc.signalingState);
  };

  rtc.onicecandidate = ({ candidate }) => {
    if (candidate) {
      console.log("DEBUG: Trying to connect to: " + targetUsername);
      ws.send(
        JSON.stringify({
          type: "ice-candidate",
          candidate,
          targetUsername: targetUsername
        })
      );
    }
  };

  const offer = await rtc.createOffer();
  await rtc.setLocalDescription(offer);
  console.log("DEBUG: DataChannel state:", dataChannel.readyState);
  ws.send(
    JSON.stringify({
      type: "offer",
      offer,
      fromUsername: [appId, userId].join("|"),
      targetUsername
    })
  );
  console.log("DEBUG: DataChannel initial state:", dataChannel.readyState);
  return Promise.resolve(dataChannel);
};

export const connect = (opts = {}) => {
  const {
    url = "ws://127.0.0.1:3030/ws",
    stunUrls = "stun:stun.l.google.com:19302",
    callback
  } = opts;

  const ondatachannel = (event) => {
    console.log("DEBUG: Connecting to Peer ...");
    dataChannel = event.channel;
    dataChannel.onmessage = dispatch;
    dataChannel.onopen = () => {
      console.log("DEBUG: Data Channel is now open!");
      if (callback) callback(dataChannel);
    };
    dataChannel.onerror = (error) => {
      console.error("DEBUG: DataChannel Error:", error);
    };
  };

  const username = opts.username;
  const configuration = {
    iceServers: [{ urls: stunUrls }]
  };
  ws = new WebSocket(url);
  rtc = new RTCPeerConnection(configuration);

  ws.onopen = () => {
    console.log("DEBUG: Connected to the server");
    ws.send(JSON.stringify({ type: "register", username }));
  };

  ws.onmessage = (event) => {
    const msg = JSON.parse(event.data);
    switch (msg.type) {
    case "offer":
      handleOffer(msg.offer, msg.fromUsername);
      break;
    case "answer":
      handleAnswer(msg.answer);
      break;
    case "ice-candidate":
      handleIceCandidate(msg.candidate);
      break;
    }
  };

  rtc.ondatachannel = ondatachannel;

  ws.onclose = (event) => {
    if (event.wasClean) {
      console.log(
        `DEBUG: Connection closed cleanly, code=${event.code}, reason=${event.reason}`
      );
    } else {
      console.log("DEBUG: Connection died");
    }
  };

  ws.onerror = (error) => {
    console.error(`WebSocket Error: ${error}`);
  };

  const handleOffer = (offer, fromUsername) => {
    rtc.setRemoteDescription(new RTCSessionDescription(offer)).then(() => {
      pendingCandidates.forEach((candidate) => {
        rtc.addIceCandidate(new RTCIceCandidate(candidate));
      });
      pendingCandidates = [];
    });
    rtc
      .createAnswer()
      .then((answer) => rtc.setLocalDescription(answer))
      .then(() => {
        console.log(
          "DEBUG: Sending answer:",
          rtc.localDescription,
          fromUsername
        );
        ws.send(
          JSON.stringify({
            type: "answer",
            answer: rtc.localDescription,
            targetUsername: fromUsername
          })
        );
      })
      .catch((e) => console.error("Error creating/sending answer:", e));
  };

  const handleAnswer = (answer) => {
    console.log("handleAnswer", { answer });
    rtc.setRemoteDescription(new RTCSessionDescription(answer));
  };

  let pendingCandidates = [];
  const handleIceCandidate = (candidate) => {
    if (rtc.remoteDescription && rtc.remoteDescription.type) {
      rtc.addIceCandidate(new RTCIceCandidate(candidate)).catch((e) => {
        console.error("DEBUG: Error adding ice candidate", e);
      });
    } else {
      console.log("DEBUG: HandleIceCandidate", { candidate });
      pendingCandidates.push(candidate);
    }
  };

  return {
    call,
    username
  };
};

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/src/theme.js`:

```````js
const FontWeight = {
  thin: "font-thin", // 200
  extralight: "font-extralight", // 100
  light: "font-light", // 300
  normal: "font-normal", // 400
  medium: "font-medium", // 500
  semibold: "font-semibold", // 600
  bold: "font-bold", // 700
  extrabold: "font-extrabold", // 800
  black: "font-black" // 900
};

const FontType = {
  mono: "font-mono",
  sans: "font-sans",
  serif: "font-serif"
};

const Gaps = {
  sm: "gap-2",
  md: "gap-4",
  lg: "gap-8",
  xl: "gap-16",
  "2xl": "gap-32",
  "3xl": "gap-64",
  "4xl": "gap-96"
};

export const Sizes = ["lg", "md", "sm", "xs", "xl", "2xl", "3xl", "4xl"];

export const Variants = [
  "default",
  "primary",
  "secondary",
  "accent",
  "neutral",
  "base",
  "info",
  "success",
  "warning",
  "error"
];

const TextSizes = {
  "": "",
  xs: "text-xs",
  sm: "text-sm",
  base: "text-base",
  md: "text-md",
  lg: "text-lg",
  xl: "text-xl",
  "2xl": "text-2xl",
  "3xl": "text-3xl",
  "4xl": "text-4xl",
  "5xl": "text-5xl",
  "6xl": "text-6xl"
};

const LeadingSizes = {
  "": "",
  xs: "leading-3",
  sm: "leading-4",
  base: "leading-5",
  md: "leading-6",
  lg: "leading-7",
  xl: "leading-8",
  "2xl": "leading-9",
  "3xl": "leading-10",
  "4xl": "leading-10",
  "5xl": "leading-10",
  "6xl": "leading-10"
};

export const JustifyContent = {
  normal: "justify-normal",
  start: "justify-start",
  end: "justify-end",
  center: "justify-center",
  between: "justify-between",
  around: "justify-around",
  evenly: "justify-evenly",
  strecth: "justify-stretch"
};

const SpacingSizes = {
  "": "",
  xs: "p-1",
  sm: "p-2",
  md: "p-4",
  lg: "p-6",
  xl: "p-8",
  "2xl": "p-12",
  "3xl": "p-16",
  "4xl": "p-24"
};

const ButtonSizes = {
  "": "",
  xs: "p-1",
  sm: "p-2",
  md: "px-4 py-2",
  lg: "px-6 py-3",
  xl: "px-8 py-4",
  "2xl": "px-12 py-5",
  "3xl": "px-16 py-6",
  "4xl": "px-24 py-7"
};

const DimensionSizes = {
  "": "",
  xs: "w-6 h-6",
  sm: "w-8 h-8",
  md: "w-12 h-12",
  lg: "w-16 h-16",
  xl: "w-24 h-24",
  "2xl": "w-32 h-32",
  "3xl": "w-48 h-48",
  "4xl": "w-64 h-64"
};

const trackingSizes = {
  "4xl": "tracking-wider",
  "3xl": "tracking-wider",
  "2xl": "tracking-wider",
  xl: "tracking-wide",
  lg: "tracking-wide"
};

const generateClass = (prefix, color, variation) =>
  `${prefix}-${color}-${variation}`;
const generateColorClass = (color, variation) =>
  generateClass("bg", color, variation);
const generateTextColorClass = (color, variation) =>
  generateClass("text", color, variation);
const generateBorderColorClass = (color, variation) =>
  generateClass("border", color, variation);

const generateTextColorVariants = (textVariation, colors) => {
  return Object.keys(colors).reduce((variants, colorKey) => {
    const color = colors[colorKey];
    const textColor = textVariation === "white" ? "50" : textVariation;

    variants[colorKey] = generateTextColorClass(color, textColor);
    return variants;
  }, {});
};

const generateVariants = (
  {
    bgVariation,
    textVariation,
    hoverBgVariation,
    hoverTextVariation,
    accentVariation = null
  },
  colors
) => {
  const textColorVariants = generateTextColorVariants(textVariation, colors);

  return Object.keys(colors).reduce((variants, colorKey) => {
    const color = colors[colorKey];
    const accentClass =
      accentVariation && colorKey === "accent"
        ? `accent-${color}-${accentVariation}`
        : "";

    const classes = [
      generateColorClass(color, bgVariation),
      `hover:${generateColorClass(color, hoverBgVariation)}`,
      textColorVariants[colorKey],
      `hover:${generateTextColorClass(color, hoverTextVariation)}`,
      accentClass,
      generateBorderColorClass(color, "900")
    ];

    variants[colorKey] = classes.filter(Boolean).join(" ");
    return variants;
  }, {});
};

const cls = (arr) => arr.filter(Boolean).join(" ");

export const generateTheme = (userTheme) => {
  const BaseVariants = generateVariants(
    userTheme.baseVariants,
    userTheme.colors
  );
  const ReverseVariants = generateVariants(
    userTheme.reverseVariants,
    userTheme.colors
  );
  const TextColors = generateTextColorVariants(
    userTheme.textVariant,
    userTheme.colors
  );
  const borderRadius = roundedClasses[userTheme.borderRadius || 0];
  return {
    "uix-avatar": {
      _base: cls([userTheme.flexCenter, userTheme.borderStyles, borderRadius]),
      variant: BaseVariants,
      size: [DimensionSizes, TextSizes]
    },
    "uix-avatar__img": {
      _base: "",
      size: DimensionSizes
    },
    "uix-badge": {
      _base: cls([userTheme.flexCenter, userTheme.borderStyles, borderRadius]),
      variant: BaseVariants,
      size: [SpacingSizes, TextSizes]
    },
    "uix-input": {
      _base: cls([
        "block w-full appearance-none focus:outline-none focus:ring-0",
        userTheme.defaultTextColor,
        userTheme.borderStyles,
        userTheme.borderWidth,
        borderRadius
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: [SpacingSizes, TextSizes]
    },
    "uix-input__label": {
      variant: BaseVariants,
      _base: cls([
        "absolute text-sm  duration-300 transform -translate-y-4 scale-75 top-0.5 z-10 origin-[0] left-2.5",
        "peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-4"
      ])
    },
    "uix-label": {
      _base: cls([userTheme.fontStyles, "cursor-pointer"]),
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-textarea": {
      _base: cls([
        "flex px-2.5 py-1 w-full text-sm",
        userTheme.defaultTextColor,
        userTheme.borderStyles,
        userTheme.borderWidth
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500 "]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-dropdown": {
      _base: cls([
        "block w-full text-sm",
        userTheme.defaultTextColor,
        userTheme.borderStyles
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-modal": {
      _base: cls([
        "rounded-lg bg-white p-8 shadow-2xl min-w-[768px] min-h-[400px]",
        borderRadius
      ]),
      size: SpacingSizes
    },
    "uix-card": {
      _base: "shadow",
      spacing: SpacingSizes,
      variant: BaseVariants
    },
    "uix-block": {
      spacing: SpacingSizes,
      variant: BaseVariants
    },

    "uix-list": {
      _base: "flex",
      spacing: SpacingSizes,
      gap: Gaps,
      justify: JustifyContent,
      full: ({ vertical }) => ({
        true: vertical ? "w-full" : "h-full"
      }),
      vertical: { true: "flex-col" },
      responsive: ({ vertical }) => ({
        true: vertical ? "lg:flex-col sm:flex-row" : "sm:flex-col lg:flex-row"
      }),
      reverse: ({ vertical }) => ({
        true: vertical ? "flex-col-reverse" : "flex-row-reverse"
      })
    },
    "uix-divider": { _base: "flex items-center my-2", spacing: SpacingSizes },
    "uix-divider__border": {
      _base: "border-t  border-gray-400 flex-grow"
    },
    "uix-divider__label": { _base: "px-3 text-gray-800 font-bold text-2xl" },

    "uix-button": {
      _base: cls([
        "cursor-pointer transition ease-in-out duration-200 gap-2 w-full",
        userTheme.flexCenter,
        userTheme.fontStyles,
        borderRadius
      ]),
      variant: ReverseVariants,
      size: [ButtonSizes, TextSizes]
    },
    "uix-icon-button": {
      _base: cls(["transition ease-in-out duration-200 mx-auto", borderRadius]),
      variant: BaseVariants
    },
    "uix-icon-button__icon": {
      _base: cls(["mx-auto"]),
      size: TextSizes
    },
    "uix-tooltip": {
      _base: cls(["group relative m-12", borderRadius]),
      spacing: SpacingSizes
    },
    "uix-tooltip__button": {
      _base: cls([
        "bg-gray-500 px-4 py-2 text-sm shadow-sm text-white",
        borderRadius
      ]),
      variant: BaseVariants,
      spacing: SpacingSizes
    },
    "uix-tooltip__content": {
      _base:
        "absolute top-10 scale-0 transition-all rounded bg-gray-800 p-2 text-white text-xs group-hover:scale-100",
      spacing: SpacingSizes
    },

    "uix-tabs": {
      _base: "flex w-full overflow-x-auto overflow-y-hidden border-gray-200",
      variant: BaseVariants,
      //size: SpacingSizes,
      spacing: SpacingSizes,
      full: { true: "w-full h-full" }
    },

    "uix-tab": {
      _base: cls([
        "relative group",
        userTheme.flexCenter,
        "px-2 py-2 -mb-px sm:px-4 -px-1 whitespace-nowrap focus:outline-none",
        userTheme.borderStyles,
        userTheme.borderWidth
      ]),
      active: {
        true: cls([userTheme.activeTextColor, "border-blue-500"]),
        false: cls([userTheme.defaultTextColor, userTheme.hoverBorder])
      },
      variant: BaseVariants,
      size: SpacingSizes
    },
    "uix-tab_summary": {
      _base: "cursor-pointer"
    },
    "uix-range": {
      _base: "w-full",
      variant: BaseVariants
    },
    "uix-checkbox": {
      _base: cls([
        `before:content[''] peer
         before:transition-opacity 
         hover:before:opacity-10
         checked:opacity-100
         opacity-30
         `,
        clipRoundedClasses[userTheme.borderRadius]
      ]),
      variant: ReverseVariants,
      size: DimensionSizes
    },
    "uix-select": {
      _base: "w-full",
      border: { true: "border" },
      full: { true: "w-full" },
      size: SpacingSizes
    },

    "uix-text": {
      _base: "bg-red",
      variant: TextColors,
      weight: FontWeight,
      font: FontType,
      leading: LeadingSizes,
      size: [LeadingSizes, trackingSizes, TextSizes]
    }
  };
};

const resolveThemeValue = (elementTheme, key = "") => {
  if (Array.isArray(elementTheme))
    return elementTheme.map((entry) => entry[key]).join(" ");
  const theme = elementTheme[key];
  if (typeof theme === "function") return theme();
  return theme;
};

export const getElementTheme = (element, props) => {
  const defaultElement = Theme[element];
  if (!defaultElement) return props["containerClass"] || "";

  const classes = Object.keys(defaultElement).reduce((acc, attr) => {
    const elementTheme = defaultElement[attr];
    const resolvedThemeValue = resolveThemeValue(elementTheme, props[attr]);
    if (resolvedThemeValue) acc.push(resolvedThemeValue);
    return acc;
  }, []);

  if (defaultElement["_base"]) classes.push(defaultElement["_base"]);
  if (props["containerClass"]) classes.push(props["containerClass"]);

  return classes.join(" ");
};

const roundedClasses = [
  "rounded-none",
  "rounded-sm",
  "rounded",
  "rounded-md",
  "rounded-lg",
  "rounded-xl",
  "rounded-2xl",
  "rounded-3xl",
  "rounded-full"
];

const clipRoundedClasses = [
  "[clip-path:circle(0% at 50% 50%)]",
  "[clip-path:circle(10% at 50% 50%)]",
  "[clip-path:circle(20% at 50% 50%)]",
  "[clip-path:circle(30% at 50% 50%)]",
  "[clip-path:circle(40% at 50% 50%)]",
  "[clip-path:circle(50% at 50% 50%)]",
  "[clip-path:circle(60% at 50% 50%)]",
  "[clip-path:circle(70% at 50% 50%)]",
  "[clip-path:circle(100% at 50% 50%)]"
];

export const baseTheme = {
  colors: {
    default: "gray",
    primary: "blue",
    secondary: "pink",
    accent: "yellow",
    base: "gray",
    info: "teal",
    success: "green",
    warning: "orange",
    error: "red"
  },
  borderRadius: null,
  fontStyles: "font-bold leading-5 hover:leading-5",
  textVariant: "700",
  defaultTextColor: "text-gray-700",
  activeTextColor: "text-blue-600",
  hoverTextColor: "hover:text-blue-400",
  borderStyles: "border border-gray-300",
  hoverBorder: "hover:border-blue-400",
  borderWidth: "border-b-2",
  flexCenter: "flex flex-row items-center gap-2 text-center justify-center",
  baseVariants: {
    bgVariation: "200",
    textVariation: "700",
    hoverBgVariation: "100",
    hoverTextVariation: "800",
    accentVariation: "400"
  },
  reverseVariants: {
    bgVariation: "700",
    textVariation: "white",
    hoverBgVariation: "600",
    hoverTextVariation: "100",
    accentVariation: "200"
  }
};

let Theme = generateTheme(baseTheme);

export const updateTheme = (theme) => {
  Theme = generateTheme(theme);
  window?.updateAllStyles?.(true, true);
};

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/src/index.js`:

```````js
import {
  appKit,
  chatKit,
  contentKit,
  crudKit,
  datetimeKit,
  definePackage,
  docsKit,
  formKit,
  layoutKit,
  navigationKit,
  reactiveViewInstances,
  reset,
  uiKit
} from "frontend";
import { baseTheme } from "frontend/theme.js";
import {
  CSV,
  datetime,
  debounce,
  draggable,
  droparea,
  event,
  File,
  get,
  i18n,
  patch,
  post,
  remove,
  T,
  url
} from "helpers";

export {
  baseTheme,
  CSV,
  datetime,
  debounce,
  draggable,
  droparea,
  event,
  File,
  get,
  i18n,
  patch,
  post,
  remove,
  T,
  url
};

import { startBackend } from "./controller.js";

const updateAllStyles = async (updateBefore = false, updateAfter = false) => {
  const result = await window.__unocss_runtime.update();
  const stylesheet = reset + result.css;
  for (const instance of reactiveViewInstances) {
    if (updateBefore) await instance.requestUpdate();
    await instance.updateStyles(stylesheet);
    if (updateAfter) await instance.requestUpdate();
    window._isLoaded = true;
  }
};

window.updateAllStyles = updateAllStyles;

const startFrontend = ({ app, style }) => {
  const packages = [
    app,
    appKit,
    navigationKit,
    docsKit,
    chatKit,
    uiKit,
    crudKit,
    formKit,
    layoutKit,
    contentKit,
    datetimeKit
  ];

  packages.reduce(
    (acc, pkg) => {
      const result = definePackage({ pkg, style });
      return {
        models: { ...acc.models, ...result.models },
        views: { ...acc.views, ...result.views },
        controllers: { ...acc.controllers, ...result.controllers }
      };
    },
    { models: {}, views: {}, controllers: {} }
  );
};

async function injectApp(app, style) {
  if (!app) throw "Error: no App found";
  if (app.title) document.title = app.title;
  if (app.frontendOnly) {
    startFrontend({ app, style });
    if (app.init) await app.init?.({ style, app });
    if (window.__unocss_runtime) window.__unocss_runtime.extractAll();
    if (window.__unocss_runtime)
      setTimeout(() => {
        const styleEl = document.createElement("style");
        styleEl.textContent = reset;
        document.head.append(styleEl);
        updateAllStyles();
      }, 500);
  } else {
    navigator.serviceWorker.addEventListener("message", async (event) => {
      if (event.data.type === "BACKEND_INITIALIZED") {
        {
          const { appId } = event.data || {};
          localStorage.setItem("appId", appId);
          startFrontend({ app, style });
          if (app.init) await app.init?.({ style, app });
          if (window.__unocss_runtime) window.__unocss_runtime.extractAll();

          if (event.data) {
            if (navigator.storage && navigator.storage.persist) {
              const granted = await navigator.storage.persist();
              console.log(
                granted
                  ? "Storage will not be cleared except by explicit user action"
                  : "Storage may be cleared by the UA under storage pressure."
              );
            }
            if (window.__unocss_runtime)
              setTimeout(() => {
                const styleEl = document.createElement("style");
                styleEl.textContent = reset;
                document.head.append(styleEl);
                updateAllStyles();
              }, 500);
          }
        }
      }
    });
  }
}
export const isValidApp = (app) => {
  if (!app) {
    throw new Error("App is not defined");
  }

  if (!app.views) {
    throw new Error("App views object is not defined");
  }
  if (!app.views["app-index"] && !app.views["page-index"]) {
    throw new Error(
      "No valid bootstrap page found in app views (app-index or page-index required)"
    );
  }

  return true;
};

const getUrlBlob = () => {
  const extractedContent = decodeURIComponent(
    window.location.hash.substring(1)
  );
  if (!extractedContent) return null;
  const blob = new Blob([extractedContent], { type: "application/javascript" });
  return blob;
};
const getStyle = () => {
  return [reset, decodeURIComponent(window.location.search.substring(1))].join(
    " "
  );
};

export const injectStyle = (style) => {
  const blob = new Blob([style], { type: "text/css" });
  const blobURL = URL.createObjectURL(blob);
  const linkElem = document.createElement("link");
  linkElem.rel = "stylesheet";
  linkElem.href = blobURL;
  document.head.appendChild(linkElem);
};

const loadAppFromBlob = async ({ app, style }, frontendOnly) => {
  const blobURL = URL.createObjectURL(app);
  const module = await import(blobURL);
  if (isValidApp(module.default)) {
    module.default.frontendOnly = frontendOnly;
    loadApp({ app: module.default, style });
  }
};

const loadApp = ({ app, style }) => {
  if (!app) return console.error("DEBUG: App not found.");
  if (!isValidApp(app)) return console.error("DEBUG: App is invalid.", { app });
  if ("serviceWorker" in navigator) {
    navigator.serviceWorker
      .register("/service-worker.js", { scope: "/" })
      .then((registration) => {
        console.info("ServiceWorker registration successful:", registration);
        setTimeout(() => {
          if (registration.active) {
            if (!app.frontendOnly) {
              const urlParams = new URLSearchParams(window.location.search);
              let appId =
                urlParams.get("appId") || localStorage.getItem("appId");
              if (["undefined", "null", "\"\""].includes(appId)) appId = null;
              const models = app.models;
              startBackend({
                appId,
                models,
                version: app.version
              }).then(() => {
                injectApp(app, style);
              });
            } else injectApp(app, style);
          }
        }, 0);
      })
      .catch((error) =>
        console.error("Error loading service-worker", { error })
      );
  }
};

const environmentStrategies = {
  production: async () => {
    const app = getUrlBlob();
    const style = getStyle();
    if (style) injectStyle(style);
    if (app) await loadAppFromBlob({ app, style });
  },

  staging: async () => {
    const stagingLoadApp = async () => {
      await import("unocss");
      const app = getUrlBlob();
      if (app) await loadAppFromBlob({ app });
    };

    window.addEventListener("hashchange", () => {
      window.location.reload();
    });
    stagingLoadApp();
  },

  preview: async () => {
    const stagingLoadApp = async () => {
      await import("unocss");
      const app = getUrlBlob();
      if (app) await loadAppFromBlob({ app }, true);
    };

    window.addEventListener("hashchange", () => {
      window.location.reload();
    });
    stagingLoadApp();
  },

  development: async () => {
    const ws = new WebSocket("ws://localhost:4001");
    ws.addEventListener("message", (event) => {
      if (event.data === "refresh") {
        console.log("DEBUG: Received refresh request");
        window.location.reload();
      }
    });
    await import("unocss");
    loadApp({ app: window.App });
  }
};

const bootstrap = async (environment = "development") => {
  const strategy = environmentStrategies[environment];
  if (strategy) {
    await strategy();
  } else {
    console.error(`Unknown environment: ${JSON.stringify({ environment })}`);
  }
};

export default bootstrap;

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/src/controller.js`:

```````js
//import { connect } from "./controller.js";

//export let worker;
export function event(type, ...attrs) {
  const message = { type };
  attrs.forEach((attr) => {
    Object.assign(message, attr);
  });
  navigator.serviceWorker.controller.postMessage(message);
}

export let dataChannel;

export const startBackend = async ({ appId, models, baseModels, version }) => {
  navigator.serviceWorker.onmessage = (e) => {
    if (e.data.bridge) {
      console.log("DEBUG: received message from service worker", { e });
      if (dataChannel) {
        dataChannel.send(JSON.stringify(e.data));
      }
    }
  };

  if (!navigator.serviceWorker.controller) {
    if (!sessionStorage.getItem("attemptedRefresh")) {
      sessionStorage.setItem("attemptedRefresh", "true");
      window.location.reload();
    } else {
      console.error(
        "Service worker not in control after refresh, further action needed."
      );
      sessionStorage.removeItem("attemptedRefresh");
    }
  } else {
    event("INIT_BACKEND", {
      appId,
      models,
      baseModels,
      version
    });
    sessionStorage.removeItem("attemptedRefresh");
  }

  /*
    worker = new Worker("/brazuka/src/web-worker.js", {
      type: "module",
      scope: "/"
    });
    worker.addEventListener("error", function (errorEvent) {
      console.error(
        "Worker error:",
        { errorEvent },
        "at line:",
        errorEvent.lineno
      );
    });
    worker.onerror = (error) => {
      console.error("DEBUG: error on RTC Worker: ", { error });
      throw error;
    };

    worker.onmessage = (event) => {
      console.log("DEBUG: event on RTC Worker: ", { event });
    };

    //const connectCallback = (channel) => {
    //      dataChannel = channel;
    //    connection.connected = true;
    //};

       const connection = connect({
      username: appId + "|" + userId,
      callback: connectCallback,
    });

    if (connection?.call && !connection.connected) {
      if (appId && userId !== "1") {
        connection
          .call(appId, userId, [appId, "1"].join("|"), models)
          .then(connectCallback);
      }
    }
    
  return worker; */
  return { appId };
};

export default { startBackend };

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/pnpm-lock.yaml`:

```````yaml
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    dependencies:
      '@brazuka/backend':
        specifier: github:bootstrapp-ai/backend
        version: https://codeload.github.com/bootstrapp-ai/backend/tar.gz/1e7fb44f1d7c4503a4c2bdbe9a29b9798d088ddb
      frontend:
        specifier: github:bootstrapp-ai/frontend
        version: https://codeload.github.com/bootstrapp-ai/frontend/tar.gz/0a8919315dee3fb2f04a60155f7ff94ca0373441
      helpers:
        specifier: github:bootstrapp-ai/helpers
        version: https://codeload.github.com/bootstrapp-ai/helpers/tar.gz/ff8e0ca2b12c3114151ef3df4c7a644c32b8fef4
    devDependencies:
      esbuild:
        specifier: ^0.19.5
        version: 0.19.5

packages:

  '@brazuka/backend@https://codeload.github.com/bootstrapp-ai/backend/tar.gz/1e7fb44f1d7c4503a4c2bdbe9a29b9798d088ddb':
    resolution: {tarball: https://codeload.github.com/bootstrapp-ai/backend/tar.gz/1e7fb44f1d7c4503a4c2bdbe9a29b9798d088ddb}
    version: 0.1.0

  '@esbuild/android-arm64@0.19.5':
    resolution: {integrity: sha512-5d1OkoJxnYQfmC+Zd8NBFjkhyCNYwM4n9ODrycTFY6Jk1IGiZ+tjVJDDSwDt77nK+tfpGP4T50iMtVi4dEGzhQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [android]

  '@esbuild/android-arm@0.19.5':
    resolution: {integrity: sha512-bhvbzWFF3CwMs5tbjf3ObfGqbl/17ict2/uwOSfr3wmxDE6VdS2GqY/FuzIPe0q0bdhj65zQsvqfArI9MY6+AA==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [android]

  '@esbuild/android-x64@0.19.5':
    resolution: {integrity: sha512-9t+28jHGL7uBdkBjL90QFxe7DVA+KGqWlHCF8ChTKyaKO//VLuoBricQCgwhOjA1/qOczsw843Fy4cbs4H3DVA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [android]

  '@esbuild/darwin-arm64@0.19.5':
    resolution: {integrity: sha512-mvXGcKqqIqyKoxq26qEDPHJuBYUA5KizJncKOAf9eJQez+L9O+KfvNFu6nl7SCZ/gFb2QPaRqqmG0doSWlgkqw==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [darwin]

  '@esbuild/darwin-x64@0.19.5':
    resolution: {integrity: sha512-Ly8cn6fGLNet19s0X4unjcniX24I0RqjPv+kurpXabZYSXGM4Pwpmf85WHJN3lAgB8GSth7s5A0r856S+4DyiA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [darwin]

  '@esbuild/freebsd-arm64@0.19.5':
    resolution: {integrity: sha512-GGDNnPWTmWE+DMchq1W8Sd0mUkL+APvJg3b11klSGUDvRXh70JqLAO56tubmq1s2cgpVCSKYywEiKBfju8JztQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [freebsd]

  '@esbuild/freebsd-x64@0.19.5':
    resolution: {integrity: sha512-1CCwDHnSSoA0HNwdfoNY0jLfJpd7ygaLAp5EHFos3VWJCRX9DMwWODf96s9TSse39Br7oOTLryRVmBoFwXbuuQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [freebsd]

  '@esbuild/linux-arm64@0.19.5':
    resolution: {integrity: sha512-o3vYippBmSrjjQUCEEiTZ2l+4yC0pVJD/Dl57WfPwwlvFkrxoSO7rmBZFii6kQB3Wrn/6GwJUPLU5t52eq2meA==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [linux]

  '@esbuild/linux-arm@0.19.5':
    resolution: {integrity: sha512-lrWXLY/vJBzCPC51QN0HM71uWgIEpGSjSZZADQhq7DKhPcI6NH1IdzjfHkDQws2oNpJKpR13kv7/pFHBbDQDwQ==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [linux]

  '@esbuild/linux-ia32@0.19.5':
    resolution: {integrity: sha512-MkjHXS03AXAkNp1KKkhSKPOCYztRtK+KXDNkBa6P78F8Bw0ynknCSClO/ztGszILZtyO/lVKpa7MolbBZ6oJtQ==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [linux]

  '@esbuild/linux-loong64@0.19.5':
    resolution: {integrity: sha512-42GwZMm5oYOD/JHqHska3Jg0r+XFb/fdZRX+WjADm3nLWLcIsN27YKtqxzQmGNJgu0AyXg4HtcSK9HuOk3v1Dw==}
    engines: {node: '>=12'}
    cpu: [loong64]
    os: [linux]

  '@esbuild/linux-mips64el@0.19.5':
    resolution: {integrity: sha512-kcjndCSMitUuPJobWCnwQ9lLjiLZUR3QLQmlgaBfMX23UEa7ZOrtufnRds+6WZtIS9HdTXqND4yH8NLoVVIkcg==}
    engines: {node: '>=12'}
    cpu: [mips64el]
    os: [linux]

  '@esbuild/linux-ppc64@0.19.5':
    resolution: {integrity: sha512-yJAxJfHVm0ZbsiljbtFFP1BQKLc8kUF6+17tjQ78QjqjAQDnhULWiTA6u0FCDmYT1oOKS9PzZ2z0aBI+Mcyj7Q==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [linux]

  '@esbuild/linux-riscv64@0.19.5':
    resolution: {integrity: sha512-5u8cIR/t3gaD6ad3wNt1MNRstAZO+aNyBxu2We8X31bA8XUNyamTVQwLDA1SLoPCUehNCymhBhK3Qim1433Zag==}
    engines: {node: '>=12'}
    cpu: [riscv64]
    os: [linux]

  '@esbuild/linux-s390x@0.19.5':
    resolution: {integrity: sha512-Z6JrMyEw/EmZBD/OFEFpb+gao9xJ59ATsoTNlj39jVBbXqoZm4Xntu6wVmGPB/OATi1uk/DB+yeDPv2E8PqZGw==}
    engines: {node: '>=12'}
    cpu: [s390x]
    os: [linux]

  '@esbuild/linux-x64@0.19.5':
    resolution: {integrity: sha512-psagl+2RlK1z8zWZOmVdImisMtrUxvwereIdyJTmtmHahJTKb64pAcqoPlx6CewPdvGvUKe2Jw+0Z/0qhSbG1A==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [linux]

  '@esbuild/netbsd-x64@0.19.5':
    resolution: {integrity: sha512-kL2l+xScnAy/E/3119OggX8SrWyBEcqAh8aOY1gr4gPvw76la2GlD4Ymf832UCVbmuWeTf2adkZDK+h0Z/fB4g==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [netbsd]

  '@esbuild/openbsd-x64@0.19.5':
    resolution: {integrity: sha512-sPOfhtzFufQfTBgRnE1DIJjzsXukKSvZxloZbkJDG383q0awVAq600pc1nfqBcl0ice/WN9p4qLc39WhBShRTA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [openbsd]

  '@esbuild/sunos-x64@0.19.5':
    resolution: {integrity: sha512-dGZkBXaafuKLpDSjKcB0ax0FL36YXCvJNnztjKV+6CO82tTYVDSH2lifitJ29jxRMoUhgkg9a+VA/B03WK5lcg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [sunos]

  '@esbuild/win32-arm64@0.19.5':
    resolution: {integrity: sha512-dWVjD9y03ilhdRQ6Xig1NWNgfLtf2o/STKTS+eZuF90fI2BhbwD6WlaiCGKptlqXlURVB5AUOxUj09LuwKGDTg==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [win32]

  '@esbuild/win32-ia32@0.19.5':
    resolution: {integrity: sha512-4liggWIA4oDgUxqpZwrDhmEfAH4d0iljanDOK7AnVU89T6CzHon/ony8C5LeOdfgx60x5cnQJFZwEydVlYx4iw==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [win32]

  '@esbuild/win32-x64@0.19.5':
    resolution: {integrity: sha512-czTrygUsB/jlM8qEW5MD8bgYU2Xg14lo6kBDXW6HdxKjh8M5PzETGiSHaz9MtbXBYDloHNUAUW2tMiKW4KM9Mw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [win32]

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  binary-extensions@2.2.0:
    resolution: {integrity: sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==}
    engines: {node: '>=8'}

  braces@3.0.2:
    resolution: {integrity: sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==}
    engines: {node: '>=8'}

  chokidar@3.5.3:
    resolution: {integrity: sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==}
    engines: {node: '>= 8.10.0'}

  esbuild@0.19.5:
    resolution: {integrity: sha512-bUxalY7b1g8vNhQKdB24QDmHeY4V4tw/s6Ak5z+jJX9laP5MoQseTOMemAr0gxssjNcH0MCViG8ONI2kksvfFQ==}
    engines: {node: '>=12'}
    hasBin: true

  fill-range@7.0.1:
    resolution: {integrity: sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==}
    engines: {node: '>=8'}

  frontend@https://codeload.github.com/bootstrapp-ai/frontend/tar.gz/0a8919315dee3fb2f04a60155f7ff94ca0373441:
    resolution: {tarball: https://codeload.github.com/bootstrapp-ai/frontend/tar.gz/0a8919315dee3fb2f04a60155f7ff94ca0373441}
    version: 0.1.1

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  helpers@https://codeload.github.com/bootstrapp-ai/helpers/tar.gz/ff8e0ca2b12c3114151ef3df4c7a644c32b8fef4:
    resolution: {tarball: https://codeload.github.com/bootstrapp-ai/helpers/tar.gz/ff8e0ca2b12c3114151ef3df4c7a644c32b8fef4}
    version: 0.1.0

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  ws@8.14.2:
    resolution: {integrity: sha512-wEBG1ftX4jcglPxgFCMJmZ2PLtSbJ2Peg6TmpJFTbe9GZYOQCDPdMYu/Tm0/bGZkw8paZnJY45J4K2PZrLYq8g==}
    engines: {node: '>=10.0.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: '>=5.0.2'
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

snapshots:

  '@brazuka/backend@https://codeload.github.com/bootstrapp-ai/backend/tar.gz/1e7fb44f1d7c4503a4c2bdbe9a29b9798d088ddb': {}

  '@esbuild/android-arm64@0.19.5':
    optional: true

  '@esbuild/android-arm@0.19.5':
    optional: true

  '@esbuild/android-x64@0.19.5':
    optional: true

  '@esbuild/darwin-arm64@0.19.5':
    optional: true

  '@esbuild/darwin-x64@0.19.5':
    optional: true

  '@esbuild/freebsd-arm64@0.19.5':
    optional: true

  '@esbuild/freebsd-x64@0.19.5':
    optional: true

  '@esbuild/linux-arm64@0.19.5':
    optional: true

  '@esbuild/linux-arm@0.19.5':
    optional: true

  '@esbuild/linux-ia32@0.19.5':
    optional: true

  '@esbuild/linux-loong64@0.19.5':
    optional: true

  '@esbuild/linux-mips64el@0.19.5':
    optional: true

  '@esbuild/linux-ppc64@0.19.5':
    optional: true

  '@esbuild/linux-riscv64@0.19.5':
    optional: true

  '@esbuild/linux-s390x@0.19.5':
    optional: true

  '@esbuild/linux-x64@0.19.5':
    optional: true

  '@esbuild/netbsd-x64@0.19.5':
    optional: true

  '@esbuild/openbsd-x64@0.19.5':
    optional: true

  '@esbuild/sunos-x64@0.19.5':
    optional: true

  '@esbuild/win32-arm64@0.19.5':
    optional: true

  '@esbuild/win32-ia32@0.19.5':
    optional: true

  '@esbuild/win32-x64@0.19.5':
    optional: true

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  binary-extensions@2.2.0: {}

  braces@3.0.2:
    dependencies:
      fill-range: 7.0.1

  chokidar@3.5.3:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.2
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  esbuild@0.19.5:
    optionalDependencies:
      '@esbuild/android-arm': 0.19.5
      '@esbuild/android-arm64': 0.19.5
      '@esbuild/android-x64': 0.19.5
      '@esbuild/darwin-arm64': 0.19.5
      '@esbuild/darwin-x64': 0.19.5
      '@esbuild/freebsd-arm64': 0.19.5
      '@esbuild/freebsd-x64': 0.19.5
      '@esbuild/linux-arm': 0.19.5
      '@esbuild/linux-arm64': 0.19.5
      '@esbuild/linux-ia32': 0.19.5
      '@esbuild/linux-loong64': 0.19.5
      '@esbuild/linux-mips64el': 0.19.5
      '@esbuild/linux-ppc64': 0.19.5
      '@esbuild/linux-riscv64': 0.19.5
      '@esbuild/linux-s390x': 0.19.5
      '@esbuild/linux-x64': 0.19.5
      '@esbuild/netbsd-x64': 0.19.5
      '@esbuild/openbsd-x64': 0.19.5
      '@esbuild/sunos-x64': 0.19.5
      '@esbuild/win32-arm64': 0.19.5
      '@esbuild/win32-ia32': 0.19.5
      '@esbuild/win32-x64': 0.19.5

  fill-range@7.0.1:
    dependencies:
      to-regex-range: 5.0.1

  frontend@https://codeload.github.com/bootstrapp-ai/frontend/tar.gz/0a8919315dee3fb2f04a60155f7ff94ca0373441:
    dependencies:
      helpers: https://codeload.github.com/bootstrapp-ai/helpers/tar.gz/ff8e0ca2b12c3114151ef3df4c7a644c32b8fef4
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  fsevents@2.3.3:
    optional: true

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  helpers@https://codeload.github.com/bootstrapp-ai/helpers/tar.gz/ff8e0ca2b12c3114151ef3df4c7a644c32b8fef4:
    dependencies:
      chokidar: 3.5.3
      ws: 8.14.2
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.2.0

  is-extglob@2.1.1: {}

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-number@7.0.0: {}

  normalize-path@3.0.0: {}

  picomatch@2.3.1: {}

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  ws@8.14.2: {}

```````

`/home/alanleal/Projects/bootstrapp/libs/brazuka/package.json`:

```````json
{
  "name": "core",
  "type": "module",
  "version": "0.1.0",
  "main": "src/index.js",
  "module": "src/index.js",
  "devDependencies": {
    "esbuild": "^0.19.5"
  },
  "scripts": {
    "build": "node esbuild.config.js",
    "dev": "node esbuild.config.js --watch"
  },
  "dependencies": {
    "backend": "workspace:*",
    "frontend": "workspace:*",
    "helpers": "workspace:*"
  }
}

```````

`/home/alanleal/Projects/bootstrapp/libs/core/README.md`:

```````md
# core

```````

`/home/alanleal/Projects/bootstrapp/libs/core/esbuild.config.js`:

```````js
// build.js
import { build } from "esbuild";

build({
  entryPoints: ["src/index.js"],
  bundle: true,
  outfile: "dist/index.js",
  format: "esm", 
  sourcemap: true, 
  external: ["unocss"],
}).catch(() => process.exit(1));
```````

`/home/alanleal/Projects/bootstrapp/libs/core/src/index.js`:

```````js
import {
  appKit,
  baseTheme,
  chatKit,
  contentKit,
  crudKit,
  datetimeKit,
  definePackage,
  docsKit,
  formKit,
  layoutKit,
  navigationKit,
  reactiveViewInstances,
  reset,
  uiKit
} from "frontend";
import {
  CSV,
  datetime,
  debounce,
  draggable,
  droparea,
  event,
  File,
  get,
  getUrlBlob,
  i18n,
  injectStyle,
  isValidApp,
  patch,
  post,
  remove,
  T,
  url,
} from "helpers";

export {
  baseTheme,
  CSV,
  datetime,
  debounce,
  draggable,
  droparea,
  event,
  File,
  get,
  i18n,
  isValidApp,
  patch,
  post,
  remove,
  T,
  url
};

export const startBackend = async ({ appId, models, baseModels, version }) => {
  if (!navigator.serviceWorker.controller) {
    if (!sessionStorage.getItem("attemptedRefresh")) {
      sessionStorage.setItem("attemptedRefresh", "true");
      window.location.reload();
    } else {
      console.error(
        "Service worker not in control after refresh, further action needed."
      );
      sessionStorage.removeItem("attemptedRefresh");
    }
  } else {
    event("INIT_BACKEND", {
      appId,
      models,
      baseModels,
      version
    });
    sessionStorage.removeItem("attemptedRefresh");
  }

  return { appId };
};



const updateAllStyles = async (updateBefore = false, updateAfter = false) => {
  const result = await window.__unocss_runtime.update();
  const stylesheet = reset + result.css;
  for (const instance of reactiveViewInstances) {
    if (updateBefore) await instance.requestUpdate();
    await instance.updateStyles(stylesheet);
    if (updateAfter) await instance.requestUpdate();
    window._isLoaded = true;
  }
};

window.updateAllStyles = updateAllStyles;

const startFrontend = ({ app, style }) => {
  const packages = [
    app,
    appKit,
    navigationKit,
    docsKit,
    chatKit,
    uiKit,
    crudKit,
    formKit,
    layoutKit,
    contentKit,
    datetimeKit
  ];

  packages.reduce(
    (acc, pkg) => {
      const result = definePackage({ pkg, style });
      return {
        models: { ...acc.models, ...result.models },
        views: { ...acc.views, ...result.views },
        controllers: { ...acc.controllers, ...result.controllers }
      };
    },
    { models: {}, views: {}, controllers: {} }
  );
};

async function injectApp(app, style) {
  if (!app) throw "Error: no App found";
  if (app.title) document.title = app.title;
  if (app.frontendOnly) {
    startFrontend({ app, style });
    if (app.init) await app.init?.({ style, app });
    if (window.__unocss_runtime) window.__unocss_runtime.extractAll();
    if (window.__unocss_runtime)
      setTimeout(() => {
        const styleEl = document.createElement("style");
        styleEl.textContent = reset;
        document.head.append(styleEl);
        updateAllStyles();
      }, 500);
  } else {
    navigator.serviceWorker.addEventListener("message", async (event) => {
      if (event.data.type === "BACKEND_INITIALIZED") {
        {
          const { appId } = event.data || {};
          localStorage.setItem("appId", appId);
          startFrontend({ app, style });
          if (app.init) await app.init?.({ style, app });
          if (window.__unocss_runtime) window.__unocss_runtime.extractAll();

          if (event.data) {
            if (navigator.storage && navigator.storage.persist) {
              const granted = await navigator.storage.persist();
              console.log(
                granted
                  ? "Storage will not be cleared except by explicit user action"
                  : "Storage may be cleared by the UA under storage pressure."
              );
            }
            if (window.__unocss_runtime)
              setTimeout(() => {
                const styleEl = document.createElement("style");
                styleEl.textContent = reset;
                document.head.append(styleEl);
                updateAllStyles();
              }, 500);
          }
        }
      }
    });
  }
}

const loadAppFromBlob = async ({ app, style }, frontendOnly) => {
  const blobURL = URL.createObjectURL(app);
  const module = await import(blobURL);
  if (isValidApp(module.default)) {
    module.default.frontendOnly = frontendOnly;
    loadApp({ app: module.default, style });
  }
};

const loadApp = ({ app, style }) => {
  if (!app) return console.error("DEBUG: App not found.");
  if (!isValidApp(app)) return console.error("DEBUG: App is invalid.", { app });
  if ("serviceWorker" in navigator) {
    navigator.serviceWorker
      .register("/service-worker.js", { scope: "/" })
      .then((registration) => {
        console.info("ServiceWorker registration successful:", registration);
        setTimeout(() => {
          if (registration.active) {
            if (!app.frontendOnly) {
              const urlParams = new URLSearchParams(window.location.search);
              let appId =
                urlParams.get("appId") || localStorage.getItem("appId");
              if (["undefined", "null", "\"\""].includes(appId)) appId = null;
              const models = app.models;
              startBackend({
                appId,
                models,
                version: app.version
              }).then(() => {
                injectApp(app, style);
              });
            } else injectApp(app, style);
          }
        }, 0);
      })
      .catch((error) =>
        console.error("Error loading service-worker", { error })
      );
  }
};

export const getStyle = () => {
  return [reset, decodeURIComponent(window.location.search.substring(1))].join(
    " "
  );
};

const environmentStrategies = {
  production: async () => {
    const app = getUrlBlob();
    const style = getStyle();
    if (style) injectStyle(style);
    if (app) await loadAppFromBlob({ app, style });
  },

  staging: async () => {
    const stagingLoadApp = async () => {
      await import("unocss");
      const app = getUrlBlob();
      if (app) await loadAppFromBlob({ app });
    };

    window.addEventListener("hashchange", () => {
      window.location.reload();
    });
    stagingLoadApp();
  },

  preview: async () => {
    const stagingLoadApp = async () => {
      await import("unocss");
      const app = getUrlBlob();
      if (app) await loadAppFromBlob({ app }, true);
    };

    window.addEventListener("hashchange", () => {
      window.location.reload();
    });
    stagingLoadApp();
  },

  development: async () => {
    const ws = new WebSocket("ws://localhost:4001");
    ws.addEventListener("message", (event) => {
      if (event.data === "refresh") {
        console.log("DEBUG: Received refresh request");
        window.location.reload();
      }
    });
    await import("unocss");
    loadApp({ app: window.App });
  }
};

const bootstrap = async (environment = "development") => {
  const strategy = environmentStrategies[environment];
  if (strategy) {
    await strategy();
  } else {
    console.error(`Unknown environment: ${JSON.stringify({ environment })}`);
  }
};

export default bootstrap;

```````

`/home/alanleal/Projects/bootstrapp/libs/core/pnpm-lock.yaml`:

```````yaml
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    devDependencies:
      esbuild:
        specifier: ^0.19.5
        version: 0.19.5

packages:

  '@esbuild/android-arm64@0.19.5':
    resolution: {integrity: sha512-5d1OkoJxnYQfmC+Zd8NBFjkhyCNYwM4n9ODrycTFY6Jk1IGiZ+tjVJDDSwDt77nK+tfpGP4T50iMtVi4dEGzhQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [android]

  '@esbuild/android-arm@0.19.5':
    resolution: {integrity: sha512-bhvbzWFF3CwMs5tbjf3ObfGqbl/17ict2/uwOSfr3wmxDE6VdS2GqY/FuzIPe0q0bdhj65zQsvqfArI9MY6+AA==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [android]

  '@esbuild/android-x64@0.19.5':
    resolution: {integrity: sha512-9t+28jHGL7uBdkBjL90QFxe7DVA+KGqWlHCF8ChTKyaKO//VLuoBricQCgwhOjA1/qOczsw843Fy4cbs4H3DVA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [android]

  '@esbuild/darwin-arm64@0.19.5':
    resolution: {integrity: sha512-mvXGcKqqIqyKoxq26qEDPHJuBYUA5KizJncKOAf9eJQez+L9O+KfvNFu6nl7SCZ/gFb2QPaRqqmG0doSWlgkqw==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [darwin]

  '@esbuild/darwin-x64@0.19.5':
    resolution: {integrity: sha512-Ly8cn6fGLNet19s0X4unjcniX24I0RqjPv+kurpXabZYSXGM4Pwpmf85WHJN3lAgB8GSth7s5A0r856S+4DyiA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [darwin]

  '@esbuild/freebsd-arm64@0.19.5':
    resolution: {integrity: sha512-GGDNnPWTmWE+DMchq1W8Sd0mUkL+APvJg3b11klSGUDvRXh70JqLAO56tubmq1s2cgpVCSKYywEiKBfju8JztQ==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [freebsd]

  '@esbuild/freebsd-x64@0.19.5':
    resolution: {integrity: sha512-1CCwDHnSSoA0HNwdfoNY0jLfJpd7ygaLAp5EHFos3VWJCRX9DMwWODf96s9TSse39Br7oOTLryRVmBoFwXbuuQ==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [freebsd]

  '@esbuild/linux-arm64@0.19.5':
    resolution: {integrity: sha512-o3vYippBmSrjjQUCEEiTZ2l+4yC0pVJD/Dl57WfPwwlvFkrxoSO7rmBZFii6kQB3Wrn/6GwJUPLU5t52eq2meA==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [linux]

  '@esbuild/linux-arm@0.19.5':
    resolution: {integrity: sha512-lrWXLY/vJBzCPC51QN0HM71uWgIEpGSjSZZADQhq7DKhPcI6NH1IdzjfHkDQws2oNpJKpR13kv7/pFHBbDQDwQ==}
    engines: {node: '>=12'}
    cpu: [arm]
    os: [linux]

  '@esbuild/linux-ia32@0.19.5':
    resolution: {integrity: sha512-MkjHXS03AXAkNp1KKkhSKPOCYztRtK+KXDNkBa6P78F8Bw0ynknCSClO/ztGszILZtyO/lVKpa7MolbBZ6oJtQ==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [linux]

  '@esbuild/linux-loong64@0.19.5':
    resolution: {integrity: sha512-42GwZMm5oYOD/JHqHska3Jg0r+XFb/fdZRX+WjADm3nLWLcIsN27YKtqxzQmGNJgu0AyXg4HtcSK9HuOk3v1Dw==}
    engines: {node: '>=12'}
    cpu: [loong64]
    os: [linux]

  '@esbuild/linux-mips64el@0.19.5':
    resolution: {integrity: sha512-kcjndCSMitUuPJobWCnwQ9lLjiLZUR3QLQmlgaBfMX23UEa7ZOrtufnRds+6WZtIS9HdTXqND4yH8NLoVVIkcg==}
    engines: {node: '>=12'}
    cpu: [mips64el]
    os: [linux]

  '@esbuild/linux-ppc64@0.19.5':
    resolution: {integrity: sha512-yJAxJfHVm0ZbsiljbtFFP1BQKLc8kUF6+17tjQ78QjqjAQDnhULWiTA6u0FCDmYT1oOKS9PzZ2z0aBI+Mcyj7Q==}
    engines: {node: '>=12'}
    cpu: [ppc64]
    os: [linux]

  '@esbuild/linux-riscv64@0.19.5':
    resolution: {integrity: sha512-5u8cIR/t3gaD6ad3wNt1MNRstAZO+aNyBxu2We8X31bA8XUNyamTVQwLDA1SLoPCUehNCymhBhK3Qim1433Zag==}
    engines: {node: '>=12'}
    cpu: [riscv64]
    os: [linux]

  '@esbuild/linux-s390x@0.19.5':
    resolution: {integrity: sha512-Z6JrMyEw/EmZBD/OFEFpb+gao9xJ59ATsoTNlj39jVBbXqoZm4Xntu6wVmGPB/OATi1uk/DB+yeDPv2E8PqZGw==}
    engines: {node: '>=12'}
    cpu: [s390x]
    os: [linux]

  '@esbuild/linux-x64@0.19.5':
    resolution: {integrity: sha512-psagl+2RlK1z8zWZOmVdImisMtrUxvwereIdyJTmtmHahJTKb64pAcqoPlx6CewPdvGvUKe2Jw+0Z/0qhSbG1A==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [linux]

  '@esbuild/netbsd-x64@0.19.5':
    resolution: {integrity: sha512-kL2l+xScnAy/E/3119OggX8SrWyBEcqAh8aOY1gr4gPvw76la2GlD4Ymf832UCVbmuWeTf2adkZDK+h0Z/fB4g==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [netbsd]

  '@esbuild/openbsd-x64@0.19.5':
    resolution: {integrity: sha512-sPOfhtzFufQfTBgRnE1DIJjzsXukKSvZxloZbkJDG383q0awVAq600pc1nfqBcl0ice/WN9p4qLc39WhBShRTA==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [openbsd]

  '@esbuild/sunos-x64@0.19.5':
    resolution: {integrity: sha512-dGZkBXaafuKLpDSjKcB0ax0FL36YXCvJNnztjKV+6CO82tTYVDSH2lifitJ29jxRMoUhgkg9a+VA/B03WK5lcg==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [sunos]

  '@esbuild/win32-arm64@0.19.5':
    resolution: {integrity: sha512-dWVjD9y03ilhdRQ6Xig1NWNgfLtf2o/STKTS+eZuF90fI2BhbwD6WlaiCGKptlqXlURVB5AUOxUj09LuwKGDTg==}
    engines: {node: '>=12'}
    cpu: [arm64]
    os: [win32]

  '@esbuild/win32-ia32@0.19.5':
    resolution: {integrity: sha512-4liggWIA4oDgUxqpZwrDhmEfAH4d0iljanDOK7AnVU89T6CzHon/ony8C5LeOdfgx60x5cnQJFZwEydVlYx4iw==}
    engines: {node: '>=12'}
    cpu: [ia32]
    os: [win32]

  '@esbuild/win32-x64@0.19.5':
    resolution: {integrity: sha512-czTrygUsB/jlM8qEW5MD8bgYU2Xg14lo6kBDXW6HdxKjh8M5PzETGiSHaz9MtbXBYDloHNUAUW2tMiKW4KM9Mw==}
    engines: {node: '>=12'}
    cpu: [x64]
    os: [win32]

  esbuild@0.19.5:
    resolution: {integrity: sha512-bUxalY7b1g8vNhQKdB24QDmHeY4V4tw/s6Ak5z+jJX9laP5MoQseTOMemAr0gxssjNcH0MCViG8ONI2kksvfFQ==}
    engines: {node: '>=12'}
    hasBin: true

snapshots:

  '@esbuild/android-arm64@0.19.5':
    optional: true

  '@esbuild/android-arm@0.19.5':
    optional: true

  '@esbuild/android-x64@0.19.5':
    optional: true

  '@esbuild/darwin-arm64@0.19.5':
    optional: true

  '@esbuild/darwin-x64@0.19.5':
    optional: true

  '@esbuild/freebsd-arm64@0.19.5':
    optional: true

  '@esbuild/freebsd-x64@0.19.5':
    optional: true

  '@esbuild/linux-arm64@0.19.5':
    optional: true

  '@esbuild/linux-arm@0.19.5':
    optional: true

  '@esbuild/linux-ia32@0.19.5':
    optional: true

  '@esbuild/linux-loong64@0.19.5':
    optional: true

  '@esbuild/linux-mips64el@0.19.5':
    optional: true

  '@esbuild/linux-ppc64@0.19.5':
    optional: true

  '@esbuild/linux-riscv64@0.19.5':
    optional: true

  '@esbuild/linux-s390x@0.19.5':
    optional: true

  '@esbuild/linux-x64@0.19.5':
    optional: true

  '@esbuild/netbsd-x64@0.19.5':
    optional: true

  '@esbuild/openbsd-x64@0.19.5':
    optional: true

  '@esbuild/sunos-x64@0.19.5':
    optional: true

  '@esbuild/win32-arm64@0.19.5':
    optional: true

  '@esbuild/win32-ia32@0.19.5':
    optional: true

  '@esbuild/win32-x64@0.19.5':
    optional: true

  esbuild@0.19.5:
    optionalDependencies:
      '@esbuild/android-arm': 0.19.5
      '@esbuild/android-arm64': 0.19.5
      '@esbuild/android-x64': 0.19.5
      '@esbuild/darwin-arm64': 0.19.5
      '@esbuild/darwin-x64': 0.19.5
      '@esbuild/freebsd-arm64': 0.19.5
      '@esbuild/freebsd-x64': 0.19.5
      '@esbuild/linux-arm': 0.19.5
      '@esbuild/linux-arm64': 0.19.5
      '@esbuild/linux-ia32': 0.19.5
      '@esbuild/linux-loong64': 0.19.5
      '@esbuild/linux-mips64el': 0.19.5
      '@esbuild/linux-ppc64': 0.19.5
      '@esbuild/linux-riscv64': 0.19.5
      '@esbuild/linux-s390x': 0.19.5
      '@esbuild/linux-x64': 0.19.5
      '@esbuild/netbsd-x64': 0.19.5
      '@esbuild/openbsd-x64': 0.19.5
      '@esbuild/sunos-x64': 0.19.5
      '@esbuild/win32-arm64': 0.19.5
      '@esbuild/win32-ia32': 0.19.5
      '@esbuild/win32-x64': 0.19.5

```````

`/home/alanleal/Projects/bootstrapp/libs/core/package.json`:

```````json
{
  "name": "core",
  "type": "module",
  "version": "0.1.0",
  "main": "src/index.js",
  "module": "src/index.js",
  "devDependencies": {
    "esbuild": "^0.19.5"
  },
  "scripts": {
    "build": "node esbuild.config.js",
    "dev": "node esbuild.config.js --watch"
  },
  "packages": {
    "backend": "workspace:*",
    "frontend": "workspace:*",
    "helpers": "workspace:*"
  }
}

```````
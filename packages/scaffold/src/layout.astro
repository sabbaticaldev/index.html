---
const { title } = Astro.props || Astro.params;
---

<html lang="en" style="width: 100%; height: 100%;">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/pwa-192x192.png" />
    <link rel="mask-icon" href="/favicon.svg" color="#FFFFFF" />
    <meta name="msapplication-TileColor" content="#FFFFFF" />
    <meta name="theme-color" content="#ffffff" />
    <title>{title}</title>
    <meta name="description" content={title} />
    <style>
      main,
      footer {
        text-align: center;
      }
    </style>
    <script>
    if ("serviceWorker" in navigator) {
      const urlParams = new URLSearchParams(window.location.search);
      let appId = urlParams.get('appId');
      console.log({appId});
      navigator.serviceWorker.register("./service-worker.mjs", { type: 'module' })
        .then((registration) => {
          console.log("ServiceWorker registration successful:", registration);
          navigator.serviceWorker.addEventListener("message", (event) => {
          if(event.data.action === "INIT_APP") {
            const { appId, userId } = event.data;
            if (appId && userId) {
              console.log({appId, userId});
              localStorage.setItem("appId", appId);
              localStorage.setItem("userId", userId);
            }
          }
        });
          // Check if the service worker is active
          if (registration.active) {
            registration.active.postMessage({
              action: 'INIT_APP',
              appId
            });
          } else {
            // If the service worker is not yet active, wait for it to activate
            registration.addEventListener('updatefound', () => {
              const newWorker = registration.installing;
              newWorker.addEventListener('statechange', () => {
                if (newWorker.state === 'activated') {
                  newWorker.postMessage({
                    action: 'INIT_APP',
                    appId
                  });
                }
              });
            });
          }
        })
        .catch((err) => {
          console.error("ServiceWorker registration failed:", err);
        });
    }
    
    </script>
  </head>
  <body style="width: 100%; height: 100%;">
    <slot />
    <script
      type="module"
      src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"
    ></script>
  </body>
</html>
